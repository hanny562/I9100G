From 8b15077078f5d8434a800bf07515096f663a5fca Mon Sep 17 00:00:00 2001
From: Ricardo Neri <ricardo.neri@ti.com>
Date: Sun, 26 Jun 2011 03:38:53 -0500
Subject: [PATCH 2/4] OMAP4: HDMI: Serialize notify ACR WA events

If hdmi_lib_stop/start_acr_wa are called from different threads/queues,
it is possible that several events are sent before receiving the
ACK from SYSM3. This may cause that some events are never ACK'ed and
may leave SYSM3 ACR WA in a bad state. A mutex is used so that
only one event may be sent at a time.

Change-Id: I79a8ba69da5f00b21949044853f6c19470d9a67e
Signed-off-by: Ricardo Neri <ricardo.neri@ti.com>
---
 arch/arm/plat-omap/hdmi_lib.c |    4 ++++
 1 files changed, 4 insertions(+), 0 deletions(-)

Index: kernel/arch/arm/plat-omap/hdmi_lib.c
===================================================================
--- kernel.orig/arch/arm/plat-omap/hdmi_lib.c	2011-06-29 13:44:44.673408301 +0530
+++ kernel/arch/arm/plat-omap/hdmi_lib.c	2011-06-29 13:45:01.372153533 +0530
@@ -229,6 +229,7 @@
 #ifdef CONFIG_OMAP_HDMI_AUDIO_WA
 	u32 wa_state;
 	struct mutex wa_state_lock;
+	struct mutex wa_notify_lock;
 	u32 cts_interval;
 	struct omap_chip_id audio_wa_chip_ids;
 	struct task_struct *wa_task;
@@ -1431,6 +1432,7 @@
 		mutex_lock(&hdmi.wa_state_lock);
 		if (hdmi.wa_state >= HDMI_WA_STATE_STOPPED) {
 			mutex_unlock(&hdmi.wa_state_lock);
+			mutex_lock(&hdmi.wa_notify_lock);
 			notify_send_event(SYS_M3, 0, HDMI_AUDIO_WA_EVENT,
 					payload, 0);
 			if (signal_pending(current))
@@ -1438,6 +1440,7 @@
 			hdmi.wa_task = current;
 			set_current_state(TASK_INTERRUPTIBLE);
 			tout = schedule_timeout(msecs_to_jiffies(5000));
+			mutex_unlock(&hdmi.wa_notify_lock);
 			if (!tout)
 				return -EIO;
 
@@ -1818,6 +1821,7 @@
 	hdmi.base_core_av = hdmi.base_wp + 0x900;
 #ifdef CONFIG_OMAP_HDMI_AUDIO_WA
 	mutex_init(&hdmi.wa_state_lock);
+	mutex_init(&hdmi.wa_notify_lock);
 	mutex_lock(&hdmi.wa_state_lock);
 	hdmi.wa_state = HDMI_WA_STATE_NOTIFY_EVENT_NOTREG;
 	mutex_unlock(&hdmi.wa_state_lock);

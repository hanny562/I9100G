Index: kernel/drivers/video/omap2/displays/panel-ld9040.c
===================================================================
--- kernel.orig/drivers/video/omap2/displays/panel-ld9040.c	2011-05-04 23:07:22.000000000 +0900
+++ kernel/drivers/video/omap2/displays/panel-ld9040.c	2011-05-05 16:21:18.000000000 +0900
@@ -462,26 +462,32 @@
 	struct lcd_platform_data *pd = NULL;
 	pd = lcd->lcd_pd;
 
+	/*
+	 * sleep/wake up test: There is race condition in set brightness and resume path
+	 * Adding lock for lcd power on/off and update_brightness
+	 */
+	
+	mutex_lock(&lcd->lock);
 	if (!pd) {
 		dev_err(lcd->dev, "platform data is NULL.\n");
-		return -EFAULT;
+		ret = -EFAULT;
+		goto err;
 	}
 
 	if (!pd->power_on) {
 		dev_err(lcd->dev, "power_on is NULL.\n");
-		return -EFAULT;
+		ret = -EFAULT;
+		goto err;
 	} else {
 		pd->power_on(lcd->ld, 1);
 		mdelay(pd->power_on_delay);
 	}
-#if 1
 	if (!pd->gpio_cfg_lateresume) {
 		dev_err(lcd->dev, "gpio_cfg_lateresume is NULL.\n");
 		ret = -EFAULT;
 		goto err;
 	} else
 		pd->gpio_cfg_lateresume(lcd->ld);
-#endif
 
 	if (!pd->reset) {
 		dev_err(lcd->dev, "reset is NULL.\n");
@@ -509,6 +515,7 @@
 
 	lcd->ldi_enable = 1;
 err:
+	mutex_unlock(&lcd->lock);
 
 	return ret;;
 }
@@ -604,10 +611,17 @@
 	unsigned int temp_bl;
 	struct ld9040 *lcd = bl_get_data(bd);
 
+	/*
+ 	 * sleep/wake up test: There is race condition in set brightness and resume path
+ 	 * Adding lock for lcd on/off and update_brightness
+ 	 */
+	mutex_lock(&lcd->lock);
+
 	if (bl < MIN_BRIGHTNESS ||
 		bl > bd->props.max_brightness) {
 		dev_err(&bd->dev, "lcd brightness should be %d to %d. now %d\n",
 			MIN_BRIGHTNESS, MAX_BRIGHTNESS, bl);
+		mutex_unlock(&lcd->lock);
 		return -EINVAL;
 	}
 
@@ -621,6 +635,7 @@
 		if (ret < 0)
 			dev_err(&bd->dev, "update brightness failed.\n");
 	}
+	mutex_unlock(&lcd->lock);
 
 	return ret;
 }

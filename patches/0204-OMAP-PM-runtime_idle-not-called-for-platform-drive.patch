From 891ce6e0e9951e7d774e69d041e936ca21763fb1 Mon Sep 17 00:00:00 2001
From: Djamil Elaidi <d-elaidi@ti.com>
Date: Tue, 15 Feb 2011 19:57:46 +0100
Subject: OMAP: PM: runtime_idle not called for platform drivers

The platfom bus implementation of PM_Runtime (arch/arm/mach-omap2/pm_bus.c) doesn't call
the runtime_idle() method of the platform driver before queuing a suspend request for the device.
This causes the device to be suspended unconditionnaly, without giving the driver a chance to check
if the device can be suspended.

This contradicts the pm_runtime principles, where the bus runtime_idle() method should :
"check if the device can be suspended (i.e. if all of the conditions necessary for
suspending the device are satisfied) and to queue up a suspend request for the
device in that case."
Cf kernel/Documentation/runtime_pm.txt

Change-Id: Id13d1654d247cadb4c824479ed5f0f1c4ca2f0ea
Signed-off-by: Djamil Elaidi <d-elaidi@ti.com>
---
 arch/arm/mach-omap2/pm_bus.c |    7 +++++++
 1 files changed, 7 insertions(+), 0 deletions(-)

diff --git a/arch/arm/mach-omap2/pm_bus.c b/arch/arm/mach-omap2/pm_bus.c
index 28175de..ca753b5 100644
--- a/arch/arm/mach-omap2/pm_bus.c
+++ b/arch/arm/mach-omap2/pm_bus.c
@@ -61,6 +61,13 @@ int platform_pm_runtime_idle(struct device *dev)
 {
 	int ret;
 
+	if (dev->driver->pm && dev->driver->pm->runtime_idle) {
+		ret = dev->driver->pm->runtime_idle(dev);
+
+		if (ret)
+			return ret;
+	}
+
 	ret = pm_runtime_suspend(dev);
 	dev_dbg(dev, "%s [%d]\n", __func__, ret);
 
-- 
1.6.0.4


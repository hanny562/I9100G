Index: kernel/arch/arm/mach-omap2/omap4-mpuss-lowpower.c
===================================================================
--- kernel.orig/arch/arm/mach-omap2/omap4-mpuss-lowpower.c	2011-05-21 00:24:21.000000000 +0900
+++ kernel/arch/arm/mach-omap2/omap4-mpuss-lowpower.c	2011-05-21 00:45:55.199596684 +0900
@@ -54,6 +54,7 @@
 #include <linux/clk.h>
 #include <mach/omap4-common.h>
 #include <mach/omap4-wakeupgen.h>
+#include <mach/omap4-common.h>
 
 #include "pm.h"
 #include "cm.h"
@@ -625,7 +626,7 @@
 void omap4_enter_lowpower(unsigned int cpu, unsigned int power_state)
 {
 	unsigned int save_state, wakeup_cpu, inst_clk_enab = 0;
-
+	
 	if (cpu > NR_CPUS)
 		return;
 
@@ -773,7 +774,8 @@
 	} else {
 		pwrdm_set_next_pwrst(cpu0_pwrdm, PWRDM_POWER_ON);
 		pwrdm_set_next_pwrst(mpuss_pd, PWRDM_POWER_ON);
-		omap4_secure_dispatcher(0x21, 4, 0, 0, 0, 0, 0);
+		if (!omap4_lpmode)
+			omap4_secure_dispatcher(0x21, 4, 0, 0, 0, 0, 0);
 	}
 
 	/*
Index: kernel/arch/arm/mach-omap2/omap_hwmod.c
===================================================================
--- kernel.orig/arch/arm/mach-omap2/omap_hwmod.c	2011-05-21 00:24:21.000000000 +0900
+++ kernel/arch/arm/mach-omap2/omap_hwmod.c	2011-05-21 00:48:28.858389677 +0900
@@ -1110,8 +1110,8 @@
 	 */
 	if ((oh->_state != _HWMOD_STATE_ENABLED) &&
 	    !(oh->flags & HWMOD_INIT_NO_IDLE)) {
-		WARN(1, "omap_hwmod: %s: idle state can only be entered from "
-		     "enabled state\n", oh->name);
+		pr_debug("omap_hwmod: %s: idle state can only be entered from "
+				"enabled state\n", oh->name);
 		return -EINVAL;
 	}
 
Index: kernel/arch/arm/mach-omap2/clkt_clksel.c
===================================================================
--- kernel.orig/arch/arm/mach-omap2/clkt_clksel.c	2011-05-21 00:41:00.000000000 +0900
+++ kernel/arch/arm/mach-omap2/clkt_clksel.c	2011-05-21 00:48:57.068389526 +0900
@@ -190,8 +190,8 @@
 
 	if (!clkr->div) {
 		/* This indicates a data error */
-		WARN(1, "clock: Could not find fieldval %d for clock %s parent "
-		     "%s\n", field_val, clk->name, clk->parent->name);
+		pr_debug("clock: Could not find fieldval %d for clock %s parent "
+				"%s\n", field_val, clk->name, clk->parent->name);
 		return 0;
 	}
 
Index: kernel/arch/arm/mach-omap2/pm44xx.c
===================================================================
--- kernel.orig/arch/arm/mach-omap2/pm44xx.c	2011-05-21 00:24:21.000000000 +0900
+++ kernel/arch/arm/mach-omap2/pm44xx.c	2011-05-21 00:47:03.828389614 +0900
@@ -486,7 +486,7 @@
 		omap_writel(0x2, 0x4A009550);
 		omap_writel(0xD, 0x48020054);
 		/* Modem HSI wakeup */
-		if (omap_hsi_is_io_wakeup_from_hsi())
+		if (omap_hsi_is_io_wakeup_from_hsi() && !omap4_lpmode)
 			omap_hsi_wakeup();
 
 		/* usbhs remote wakeup */
Index: kernel/drivers/i2c/busses/i2c-omap.c
===================================================================
--- kernel.orig/drivers/i2c/busses/i2c-omap.c	2011-05-21 00:44:26.000000000 +0900
+++ kernel/drivers/i2c/busses/i2c-omap.c	2011-05-21 00:45:55.209598149 +0900
@@ -497,7 +497,11 @@
 		dev->i2c_fclk_rate = fclk_rate;
 
 		/* Compute prescaler divisor */
-		psc = fclk_rate / internal_clk;
+		if (fclk_rate == (OMAP_I2C_DPLL_CLOCK / 1000)) {
+			psc = (fclk_rate*2) / internal_clk;
+		} else {
+			psc = fclk_rate / internal_clk;
+		}
 		psc = psc - 1;
 
 		/* If configured for High Speed */
@@ -725,7 +729,11 @@
 	else
 		internal_clk = 4000;
 
-	psc = fclk_rate / internal_clk;
+	if (fclk_rate == (OMAP_I2C_DPLL_CLOCK / 1000)) {
+		psc = (fclk_rate*2) / internal_clk;
+	} else {
+		psc = fclk_rate / internal_clk;
+	}
 	psc = psc - 1;
 
 	if (dev->speed > 400) {

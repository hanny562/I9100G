From d6b196b167b38a43c0160f6d8a23da0b9e45cef6 Mon Sep 17 00:00:00 2001
From: Fernando Guzman Lugo <fernando.lugo@ti.com>
Swamy.

Date: Wed, 2 Mar 2011 18:16:08 -0600
Subject: OMAP: mailbox - avoid clearing all interrupts in omap2_mbox_disable_irq

omap2_mbox_disable_irq functions should only clear the bit
specified in the parameters, this patch fixes that.

Change-Id: Idca06ac1cbf69eae7b906d228d92894d2f3f176e
Signed-off-by: Fernando Guzman Lugo <fernando.lugo@ti.com>
---
 arch/arm/mach-omap2/mailbox.c |   13 ++++++-------
 1 files changed, 6 insertions(+), 7 deletions(-)

diff --git a/arch/arm/mach-omap2/mailbox.c b/arch/arm/mach-omap2/mailbox.c
index 2bfe8c6..c54c881 100644
--- a/arch/arm/mach-omap2/mailbox.c
+++ b/arch/arm/mach-omap2/mailbox.c
@@ -205,13 +205,12 @@ static void omap2_mbox_disable_irq(struct omap_mbox *mbox,
 		omap_mbox_type_t irq)
 {
 	struct omap_mbox2_priv *p = (struct omap_mbox2_priv *)mbox->priv;
-	u32 l, bit = (irq == IRQ_TX) ? p->notfull_bit : p->newmsg_bit;
-	l = mbox_read_reg(p->irqdisable);
-	if (cpu_is_omap44xx())
-		l |= bit;
-	else
-		l &= ~bit;
-	mbox_write_reg(l, p->irqdisable);
+	u32 bit = (irq == IRQ_TX) ? p->notfull_bit : p->newmsg_bit;
+
+	if (!cpu_is_omap44xx())
+		bit = mbox_read_reg(p->irqdisable) & ~bit;
+
+	mbox_write_reg(bit, p->irqdisable);
 }
 
 static void omap2_mbox_ack_irq(struct omap_mbox *mbox,
-- 
1.6.0.4


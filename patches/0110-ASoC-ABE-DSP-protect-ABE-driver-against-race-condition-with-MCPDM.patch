From: Sebastien Guiriec <s-guiriec@ti.com>
Date: Wed, 19 Jan 2011 22:33:41 +0000 (+0100)
Subject: ASoC: ABE DSP: protect ABE driver against race condition with McPDM
X-Git-Url: http://git.omapzoom.org/?p=kernel%2Fomap.git;a=commitdiff_plain;h=6ce8e872444996654bf40a1013d6b86c4398d76d;hp=0ada3e0f617cd68d1c38cde35a53e591372db921

ASoC: ABE DSP: protect ABE driver against race condition with McPDM

Add spinlock for shutdown function call by McPDM driver in order to
avoid race condition with ABE driver.

Change-Id: Ife3412d351324b22903cfccffee3e6aea75f781b
Signed-off-by: Sebastien Guiriec <s-guiriec@ti.com>
---

Index: Kernel/sound/soc/omap/omap-abe-dsp.c
===================================================================
--- Kernel.orig/sound/soc/omap/omap-abe-dsp.c	2011-01-20 16:18:48.392695641 +0530
+++ Kernel/sound/soc/omap/omap-abe-dsp.c	2011-01-20 16:19:14.223322565 +0530
@@ -284,21 +284,6 @@
 	pm_runtime_put_sync(&pdev->dev);
 }
 
-void abe_dsp_shutdown(void)
-{
-        /* TODO: do not use abe global structure to assign pdev */
-        struct platform_device *pdev = abe->pdev;
-
-	if (!abe->active && !abe_check_activity()) {
-		abe_set_opp_processing(ABE_OPP25);
-		abe->opp = 0;
-		abe_stop_event_generator();
-		udelay(250);
-		omap_pm_set_max_dev_wakeup_lat(&pdev->dev, &pdev->dev, -1);
-		omap_device_set_rate(&pdev->dev, &pdev->dev, 0);
-	}
-}
-
 /*
  * These TLV settings will need fine tuned for each individual control
  */
@@ -1702,6 +1687,32 @@
 	return 0;
 }
 
+void abe_dsp_shutdown(void)
+{
+        /* TODO: do not use abe global structure to assign pdev */
+        struct platform_device *pdev = abe->pdev;
+
+	if (!abe->active && !abe_check_activity()) {
+		abe_set_opp_processing(ABE_OPP25);
+		abe->opp = 0;
+		abe_stop_event_generator();
+		udelay(250);
+		omap_pm_set_max_dev_wakeup_lat(&pdev->dev, &pdev->dev, -1);
+		omap_device_set_rate(&pdev->dev, &pdev->dev, 0);
+	}
+}
+
+void abe_dsp_mcpdm_shutdown(void)
+{
+	mutex_lock(&abe->mutex);
+
+	abe_dsp_shutdown();
+
+	mutex_unlock(&abe->mutex);
+
+	return;
+}
+
 static int aess_save_context(struct abe_data *abe)
 {
 	struct platform_device *pdev = abe->pdev;
Index: Kernel/sound/soc/omap/omap-abe-dsp.h
===================================================================
--- Kernel.orig/sound/soc/omap/omap-abe-dsp.h	2011-01-19 17:57:13.152071358 +0530
+++ Kernel/sound/soc/omap/omap-abe-dsp.h	2011-01-20 16:19:14.223322565 +0530
@@ -29,7 +29,7 @@
 #define ABE_DMEM_BASE_OFFSET_PING_PONG	0x4000		/* Ping pong buffer DMEM offset */
 #define ABE_VM_AESS_OFFSET		0x400000	/* AESS VM offset for DMEM */
 
-void abe_dsp_shutdown(void);
+void abe_dsp_mcpdm_shutdown(void);
 void abe_dsp_pm_get(void);
 void abe_dsp_pm_put(void);
 
Index: Kernel/sound/soc/omap/omap-mcpdm.c
===================================================================
--- Kernel.orig/sound/soc/omap/omap-mcpdm.c	2011-01-20 16:01:30.473322366 +0530
+++ Kernel/sound/soc/omap/omap-mcpdm.c	2011-01-20 16:19:14.223322565 +0530
@@ -688,7 +688,7 @@
 		udelay(250);
 		omap_mcpdm_stop(mcpdm, SNDRV_PCM_STREAM_PLAYBACK);
 		omap_mcpdm_playback_close(mcpdm, mcpdm->downlink);
-		abe_dsp_shutdown();
+		abe_dsp_mcpdm_shutdown();
 	}
 	spin_unlock(&mcpdm->lock);
 	abe_dsp_pm_put();

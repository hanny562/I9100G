From: Pramod Gurav <pramod.gurav@ti.com>
Date: Thu, 21 Apr 2011 09:27:34 +0000 (+0530)
Subject: OMAP: PM: Fix to kernel crash due to wrong memory free
X-Git-Url: http://git.omapzoom.org/?p=kernel%2Fomap.git;a=commitdiff_plain;h=fb914d6f1fecd30958d2dec195af738b8162a5ab;hp=99503ff58e07fb3f241c2b2ce6912f5e66a67750

OMAP: PM: Fix to kernel crash due to wrong memory free

In i2c PM QOS path same QOS handle being is used for adding the MPU latency
constraint for each i2c bus as the qos_handle was diclared as static.
This was causing a race condition between the i2c buses while transfer.
As a result of this same qos_handle was being freed twice and hence the
crash.

This makes the static qos_handle variable as local thus having separate
qos_handle to each i2c bus.

Signed-off-by: Pramod Gurav <pramod.gurav@ti.com>
Signed-off-by: Ambresh K <ambresh@ti.com>
---

Index: kernel/drivers/i2c/busses/i2c-omap.c
===================================================================
--- kernel.orig/drivers/i2c/busses/i2c-omap.c	2011-06-01 17:31:28.000000000 +0900
+++ kernel/drivers/i2c/busses/i2c-omap.c	2011-06-02 12:21:11.000000000 +0900
@@ -596,7 +596,7 @@
 	struct omap_i2c_dev *dev = i2c_get_adapdata(adap);
 	int r;
 	u16 w;
-	static struct pm_qos_request_list *qos_handle;
+	struct pm_qos_request_list *qos_handle = NULL;
 
 	dev_dbg(dev->dev, "addr: 0x%04x, len: %d, flags: 0x%x, stop: %d\n",
 		msg->addr, msg->len, msg->flags, stop);

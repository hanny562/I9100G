Index: kernel/drivers/video/omap2/dss/hdmi.c
===================================================================
--- kernel.orig/drivers/video/omap2/dss/hdmi.c	2011-06-14 19:49:08.492055240 +0530
+++ kernel/drivers/video/omap2/dss/hdmi.c	2011-06-14 19:54:42.359545312 +0530
@@ -1492,11 +1492,11 @@
 	printk("action ::: %d\n",action);
 	if (action & HDMI_DISCONNECT) {
 		/* cancel auto-notify */
-		mutex_unlock(&hdmi.lock_aux);
-		mutex_unlock(&hdmi.lock);
+		//mutex_unlock(&hdmi.lock_aux);
+		//mutex_unlock(&hdmi.lock);
 		cancel_hot_plug_notify_work();
-		mutex_lock(&hdmi.lock);
-		mutex_lock(&hdmi.lock_aux);
+		//mutex_lock(&hdmi.lock);
+		//mutex_lock(&hdmi.lock_aux);
 	}
 
 	if ((action & HDMI_DISCONNECT) && !(r & HDMI_IN_RESET) &&
@@ -1520,13 +1520,13 @@
 		set_hdmi_hot_plug_status(dssdev, false);
 		/* ignore return value for now */
 
-		mutex_unlock(&hdmi.lock_aux);
-		mutex_unlock(&hdmi.lock);
+		//mutex_unlock(&hdmi.lock_aux);
+		//mutex_unlock(&hdmi.lock);
 		mdelay(100);
-		mutex_lock(&hdmi.lock);
+		//mutex_lock(&hdmi.lock);
 		if (notify)
 			hdmi_notify_pwrchange(HDMI_EVENT_POWEROFF);
-		mutex_lock(&hdmi.lock_aux);
+		//mutex_lock(&hdmi.lock_aux);
 
 		if (dssdev->state != OMAP_DSS_DISPLAY_ACTIVE)
 			/* HDMI is disabled, no need to process */
@@ -1563,12 +1563,12 @@
 	    custom_set) {
 
 		user_hpd_state = false;
-		mutex_unlock(&hdmi.lock_aux);
+		//mutex_unlock(&hdmi.lock_aux);
 		hdmi_notify_pwrchange(HDMI_EVENT_POWERON);
-		mutex_unlock(&hdmi.lock);
+		//mutex_unlock(&hdmi.lock);
 		mdelay(100);
-		mutex_lock(&hdmi.lock);
-		mutex_lock(&hdmi.lock_aux);
+		//mutex_lock(&hdmi.lock);
+		//mutex_lock(&hdmi.lock_aux);
 		set_hdmi_hot_plug_status(dssdev, true);
 	}
 
@@ -1585,11 +1585,11 @@
 		edid_set = false;
 		custom_set = true;
 		hdmi_reconfigure(dssdev);
-		mutex_unlock(&hdmi.lock_aux);
-		mutex_unlock(&hdmi.lock);
+		//mutex_unlock(&hdmi.lock_aux);
+		//mutex_unlock(&hdmi.lock);
 		mdelay(100);
-		mutex_lock(&hdmi.lock);
-		mutex_lock(&hdmi.lock_aux);
+		//mutex_lock(&hdmi.lock);
+		//mutex_lock(&hdmi.lock_aux);
 		if (dssdev->state != OMAP_DSS_DISPLAY_ACTIVE)
 			/* HDMI is disabled, no need to process */
 			goto done;
@@ -1600,14 +1600,14 @@
 done:
 
 	if ((r & HDMI_FIRST_HPD) && (!edid_set) && (!custom_set)) {
-		mutex_unlock(&hdmi.lock_aux);
-		mutex_unlock(&hdmi.lock);
+		//mutex_unlock(&hdmi.lock_aux);
+		//mutex_unlock(&hdmi.lock);
 		/* cancel auto-notify - must be done outside mutex */
 		cancel_hot_plug_notify_work();
 
 		mdelay(100);
-		mutex_lock(&hdmi.lock);
-		mutex_lock(&hdmi.lock_aux);
+		//mutex_lock(&hdmi.lock);
+		//mutex_lock(&hdmi.lock_aux);
 
 		/*
 		 * HDMI should already be full on. We use this to read EDID
@@ -1629,12 +1629,12 @@
 		}
 
 		hdmi_reconfigure(dssdev);
-		mutex_unlock(&hdmi.lock_aux);
+		//mutex_unlock(&hdmi.lock_aux);
 		hdmi_notify_pwrchange(HDMI_EVENT_POWERON);
-		mutex_unlock(&hdmi.lock);
+		//mutex_unlock(&hdmi.lock);
 		mdelay(100);
-		mutex_lock(&hdmi.lock);
-		mutex_lock(&hdmi.lock_aux);
+		//mutex_lock(&hdmi.lock);
+		//mutex_lock(&hdmi.lock_aux);
 
 		set_hdmi_hot_plug_status(dssdev, true);
 

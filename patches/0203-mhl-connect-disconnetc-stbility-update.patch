Index: kernel/arch/arm/mach-omap2/mux_t1_rev_r00.c
===================================================================
--- kernel.orig/arch/arm/mach-omap2/mux_t1_rev_r00.c	2011-04-11 14:49:39.000000000 +0900
+++ kernel/arch/arm/mach-omap2/mux_t1_rev_r00.c	2011-04-14 20:11:13.000000000 +0900
@@ -165,13 +165,13 @@
 	OMAP4_MUX(GPMC_NCS7, OMAP_MUX_MODE3 | OMAP_PIN_OUTPUT),
 
 	/* [-----] hdmi_hpd - gpio_63 - HDMI_HPD */
-	OMAP4_MUX(HDMI_HPD, OMAP_MUX_MODE0 | OMAP_PIN_INPUT),
+	OMAP4_MUX(HDMI_HPD, OMAP_MUX_MODE0 | OMAP_PIN_INPUT | OMAP_PULL_ENA),
 	/* [-----] hdmi_cec - gpio_64 - MHL_WAKE_UP */
 	OMAP4_MUX(HDMI_CEC, OMAP_MUX_MODE7 | OMAP_PIN_INPUT_PULLDOWN),
 	/* [-----] hdmi_ddc_scl - gpio_65 - DDC_SCL_3.3V */
-	OMAP4_MUX(HDMI_DDC_SCL, OMAP_MUX_MODE0 | OMAP_PIN_INPUT | OMAP_PIN_OFF_INPUT_PULLDOWN),
+	OMAP4_MUX(HDMI_DDC_SCL, OMAP_MUX_MODE0 | OMAP_PIN_INPUT ),
 	/* [-----] hdmi_ddc_sda - gpio_66 - DDC_SDA_3.3V */
-	OMAP4_MUX(HDMI_DDC_SDA, OMAP_MUX_MODE0 | OMAP_PIN_INPUT | OMAP_PIN_OFF_INPUT_PULLDOWN),
+	OMAP4_MUX(HDMI_DDC_SDA, OMAP_MUX_MODE0 | OMAP_PIN_INPUT ),
 
 #if 0
 	/* [-----] csi21_dx0 - gpio_67 - 8M_CLK_P */
Index: kernel/drivers/media/video/omap/mhl_v1/sii9234.c
===================================================================
--- kernel.orig/drivers/media/video/omap/mhl_v1/sii9234.c	2011-04-12 11:26:39.000000000 +0900
+++ kernel/drivers/media/video/omap/mhl_v1/sii9234.c	2011-04-14 20:11:13.000000000 +0900
@@ -147,14 +147,11 @@
 			printk(KERN_ERR "[MHL] try %d\n", i+1);
 			msleep(500);
 		}
-		//s3c_gpio_cfgpin(GPIO_MHL_INT, GPIO_MHL_INT_AF);
-		//s3c_gpio_setpull(GPIO_MHL_SEL, S3C_GPIO_PULL_UP);
-		gpio_set_value(GPIO_MHL_SEL, GPIO_LEVEL_HIGH);
 		sii9234_cfg_power(1);
 		sii9234_init();
+		gpio_set_value(GPIO_MHL_SEL, GPIO_LEVEL_HIGH);
 	} else {
 		sii9234_cfg_power(0);
-		//s3c_gpio_setpull(GPIO_MHL_SEL, S3C_GPIO_PULL_NONE);
 		gpio_set_value(GPIO_MHL_SEL, GPIO_LEVEL_LOW);
 	}
 	return size;
@@ -163,14 +160,12 @@
 void MHL_On(bool on)
 {
 	if (on == 1) {
-		//s3c_gpio_cfgpin(GPIO_MHL_INT, GPIO_MHL_INT_AF);
 		sii9234_cfg_power(1);
 		sii9234_init();
+		gpio_direction_output(GPIO_MHL_SEL, GPIO_LEVEL_HIGH); 
 	} else {
-		//sii9234_cfg_power(0);
-		//s3c_gpio_setpull(GPIO_MHL_SEL, S3C_GPIO_PULL_NONE);
-		printk("GPIO_LEVEL_LOW\n");
-		gpio_set_value(GPIO_MHL_SEL, GPIO_LEVEL_LOW); 
+		sii9234_cfg_power(0);
+		gpio_direction_output(GPIO_MHL_SEL, GPIO_LEVEL_LOW); 
 	}
 
 }
@@ -364,7 +359,7 @@
 irqreturn_t mhl_int_irq_handler(int irq, void *dev_id)
 {
 	printk(KERN_ERR "mhl_int_irq_handler() is called\n");
-
+	printk("%s MHL_SEL=%d\n",__func__,gpio_get_value(GPIO_MHL_SEL));
 	if (gpio_get_value(GPIO_MHL_SEL))	
 		mhl_int_irq_handler_sched();
 
@@ -451,7 +446,7 @@
                 return ret;
         }
         printk(KERN_ERR "MHL int request successful %d\n", ret);
-
+#if 0
         ret = request_threaded_irq(MHL_WAKEUP_IRQ, NULL,
                 mhl_wake_up_irq_handler, IRQF_SHARED,
                 "mhl_wake_up", (void *) sii9234c_i2c_client);
@@ -460,6 +455,7 @@
                                         " err:: %d\n", ret);
                 return ret;
         }
+#endif
 		
         return 0;
 
@@ -593,34 +589,41 @@
 
 	if(on)
 	{
+
             if(gpio_direction_output(GPIO_HDMI_EN,GPIO_LEVEL_HIGH))
                 printk("[MHL_TEST]error in making HDMI_EN High\n");
            
-	    printk("[MHL_TEST]HDMI_EN:%d",gpio_get_value(GPIO_HDMI_EN));
+	    printk("[MHL_TEST]HDMI_EN:%d\n",gpio_get_value(GPIO_HDMI_EN));
+	 // Pulling(internal) up the HPD line
+               printk("Before (Powering up  MHL) : HPD-padconfig Read value:%x\n",omap_readl(0x4A100098));
+               omap_writel(0x000F0118,0x4A100098);
+               printk("After (Powering up MHL) : HPD-padconfigRead value:%x\n",omap_readl(0x4A100098));
+
 			
-	   if(gpio_direction_output(GPIO_MHL_RST, GPIO_LEVEL_HIGH))
+ #if 0
+		 if(gpio_direction_output(GPIO_MHL_RST, GPIO_LEVEL_LOW))
                 printk("[MHL_TEST]error in making GPIO_MHL_RST high\n");
-            
 	   printk("[MHL_TEST]MHL_RST:%d",gpio_get_value(GPIO_MHL_RST));
 	   
-           msleep(50);
 
-            if(gpio_direction_output(GPIO_MHL_RST, GPIO_LEVEL_LOW))
+ #endif
+	
+	   msleep(200);
+           if(gpio_direction_output(GPIO_MHL_RST, GPIO_LEVEL_HIGH))
                 printk("[MHL_TEST]error in making GPIO_MHL_RST Low\n");
-           
-	   msleep(50);
-		
-            if(gpio_direction_output(GPIO_MHL_RST, GPIO_LEVEL_HIGH))
-                printk("[MHL_TEST]error in making GPIO_MHL_RST high\n");
-            printk("[MHL_TEST]MHL_RST:%d",gpio_get_value(GPIO_MHL_RST));
-
+           printk("[MHL_TEST]MHL_RST:%d",gpio_get_value(GPIO_MHL_RST));
 	}
 	else
 	{
+
 		printk("sii9234_cfg_power off GPIO_HDMI_EN low\n");
 	  	gpio_direction_output(GPIO_HDMI_EN,GPIO_LEVEL_LOW);
-          	//gpio_direction_output(GPIO_MHL_RST, GPIO_LEVEL_LOW); //smpark
-
+          	gpio_direction_output(GPIO_MHL_RST, GPIO_LEVEL_LOW); 
+               
+		// Pulling(internal) Down the HPD line
+               printk("Before (Powering down MHL) : HPD-padconfig Read value:%x\n",omap_readl(0x4A100098));
+               omap_writel(0x000F0108,0x4A100098);
+               printk("After (Powering down MHL) : HPD-padconfig Read value:%x\n",omap_readl(0x4A100098));
 	}
 	printk(KERN_ERR "[MHL]%s : %d \n",__func__,on);
 
Index: kernel/drivers/media/video/omap/mhl_v1/sii9234_driver.c
===================================================================
--- kernel.orig/drivers/media/video/omap/mhl_v1/sii9234_driver.c	2011-04-11 21:31:48.000000000 +0900
+++ kernel/drivers/media/video/omap/mhl_v1/sii9234_driver.c	2011-04-14 20:11:13.000000000 +0900
@@ -448,13 +448,14 @@
 	TX_DEBUG_PRINT( ("Drv: SiiMhlTxChipInitialize: %02X44\n", (int)I2C_ReadByte(SA_TX_Page0_Primary, 0x03)) );
 
 	// setup device registers. Ensure RGND interrupt would happen.
+	UNMASK_INTR_4_INTERRUPTS;
+	UNMASK_INTR_1_INTERRUPTS;
+
 	WriteInitialRegisterValues();
 
 	// Setup interrupt masks for all those we are interested.
 	MASK_INTR_4_INTERRUPTS;
 	MASK_INTR_1_INTERRUPTS;
-	//MASK_CBUS1_INTERRUPTS; 
-	//MASK_CBUS2_INTERRUPTS;
 
 	SwitchToD3();
 
@@ -757,8 +758,13 @@
 {
 	byte		reg71 = I2C_ReadByte(SA_TX_Page0_Primary, 0x71);
 	byte		rsen  = I2C_ReadByte(SA_TX_Page0_Primary, 0x09) & BIT_2;
-	omap_writel(0x000F0118,0x4A100098);
 	// Look at RSEN interrupt
+	TX_DEBUG_PRINT (("Drv: Got INTR_1: reg71 = %02X, rsen = %02X\n", (int) reg71, (int) rsen));
+	if((0xFF == reg71))
+	{
+		printk(KERN_ERR "RETURN (0xFF == reg71)\n");
+		return;
+	}
 	if(reg71 & BIT_5)
 	{
 		TX_DEBUG_PRINT (("Drv: Got INTR_1: reg71 = %02X, rsen = %02X\n", (int) reg71, (int) rsen));
@@ -795,11 +801,9 @@
 #if defined(CONFIG_S5PC110_DEMPSEY_BOARD)
 	FSA9480_MhlSwitchSel(0);
 #endif
+					dsHpdStatus = 0;
 					sii9234_cfg_power(0);
-					//s3c_gpio_setpull(GPIO_MHL_SEL, S3C_GPIO_PULL_DOWN);
-					//s3c_gpio_cfgpin(GPIO_MHL_INT, S3C_GPIO_INPUT); 
-					gpio_set_value(GPIO_MHL_SEL, GPIO_LEVEL_LOW);
-					printk(KERN_ERR "MHL_SEL to 0\n");
+					gpio_direction_output(GPIO_MHL_SEL,GPIO_LEVEL_LOW);
          			}
         		 	else
         			{
@@ -826,7 +830,7 @@
 				sii9234_cfg_power(0);
 				//s3c_gpio_setpull(GPIO_MHL_SEL, S3C_GPIO_PULL_DOWN);
 				//s3c_gpio_cfgpin(GPIO_MHL_INT, S3C_GPIO_INPUT); 
-				gpio_set_value(GPIO_MHL_SEL, GPIO_LEVEL_LOW);
+				gpio_direction_output(GPIO_MHL_SEL, GPIO_LEVEL_LOW);
 				printk(KERN_ERR "MHL_SEL to 0\n");
 			}
 
@@ -856,6 +860,7 @@
 		cbusInt = ReadByteCBUS(0x0D);
 
 		// CBUS_HPD status bit
+		printk("==================cbusInt = %x dsHpdStatus = %x==========\n",cbusInt,dsHpdStatus);
 		if((BIT_6 & cbusInt) != dsHpdStatus)
 		{
 			// Inform upper layer of change in Downstream HPD
@@ -2232,7 +2237,7 @@
 	{
 		// force upstream source to read the EDID again.
 		// Most likely by appropriate togggling of HDMI HPD
-		//SiiMhlTxDrvNotifyEdidChange ( );
+		SiiMhlTxDrvNotifyEdidChange ( );
 	}
 }
 ///////////////////////////////////////////////////////////////////////////////
Index: kernel/arch/arm/mach-omap2/board-t1.c
===================================================================
--- kernel.orig/arch/arm/mach-omap2/board-t1.c	2011-04-12 11:26:47.000000000 +0900
+++ kernel/arch/arm/mach-omap2/board-t1.c	2011-04-14 20:11:13.000000000 +0900
@@ -555,15 +555,10 @@
 {
 	    /*TODO */
        printk("\nBoard file [FSA9480]: MHL Callback == %d\n", attached);
-       gpio_request(OMAP_GPIO_MHL_SEL, "MHL_SEL");
 	   
 	 if (attached == 1)	{
 	 	mhl_audio_path_info = FALSE;
-       	//gpio_direction_output(OMAP_GPIO_MHL_SEL,1);
-       	gpio_set_value(OMAP_GPIO_MHL_SEL,1);
 
-		 printk("//=== OMAP_GPIO_MHL_SEL = %d\n", gpio_get_value(OMAP_GPIO_MHL_SEL));
-	  	//gpio_direction_output(OMAP_GPIO_MHL_SEL,1);
 		//Clearing the Connect and Disconnect Interrupts of HDMI_WP_IRQ_ENABLE_CLR
 		u32 temp = omap_readl(0x48046030);
 		printk(KERN_ERR"WP_IRQ_ENABLE_CLR..currently reads as:%x",temp);

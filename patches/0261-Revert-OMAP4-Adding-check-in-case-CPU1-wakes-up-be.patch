From fad9da95ce2565e2caf79d2bf64b90d1795c55ec Mon Sep 17 00:00:00 2001
From: Dan Murphy <dmurphy@ti.com>
Date: Fri, 11 Mar 2011 14:56:22 -0600
Subject: Revert "OMAP4: Adding check in case CPU1 wakes up before CPU0 from device off or MPU OFF"

This reverts commit 7855947c923cf0e39f9a1307916f9853ca345a56.

This patch breaks compilation and does not apply cleanly to the build.

Change-Id: I2b8b6e9a35571ff2b47c36fe4836a58d88844257
Signed-off-by: Dan Murphy <dmurphy@ti.com>
---
 arch/arm/mach-omap2/sleep44xx.S |   48 +--------------------------------------
 1 files changed, 1 insertions(+), 47 deletions(-)

diff --git a/arch/arm/mach-omap2/sleep44xx.S b/arch/arm/mach-omap2/sleep44xx.S
index e5437a2..9999c3e 100644
--- a/arch/arm/mach-omap2/sleep44xx.S
+++ b/arch/arm/mach-omap2/sleep44xx.S
@@ -51,54 +51,8 @@ ENTRY(__omap4_cpu_suspend)
 
 restore_context:
         /*
-	 * Available for HS devices only:
-	 * Enable NS access to SMP for CPU1
-	 * CPU0 is setup in PPA
+	 * Check  the wakeup CPU
 	 */
-	ldr	r4, =OMAP44XX_SAR_RAM_BASE
-	ldr	r9, [r4, #OMAP_TYPE_OFFSET]	@ Get DEVICE type
-	cmp	r9, #0x1			@ Check for HS device
-	bne	skip_enable_smp_bit			@ if GP device
-
-	LM_CHECK_IF_CPU0
-	beq	enable_smp_bit				@ if CPU0
-
-	/*
-	 *     Check the WakeUp CPU
-	 * CPU1 must check if CPU0 is alive/awaken;
-	 * if PL310 is OFF, MPUSS was OFF and CPU0 is still off,
-	 * CPU1 must go to sleep and wait for CPU0
-	 */
-	ldr	r2, =OMAP44XX_L2CACHE_BASE
-	ldr	r0, [r2, #L2X0_CTRL]
-	and	r0, #0x0f
-	cmp	r0, #1
-	beq	set_ns_smp_access
-	mov     r0, #0x03		@ CPU1 to OFF state
-	mov     r1, #0x00		@ Secure L1 is already clean
-	ldr	r12, =0x108		@ SCU power state secure API
-	dsb
-	smc	#0
-	dsb				@ Necessary barriers before wfi
-	dmb
-	isb
-	wfi				@ wait for interrupt
-	nop
-	nop
-set_ns_smp_access:
-	mcr	p15, 0, r7, c7, c5, 6	@ invalidate BPIALL
-	isb
-	/* Setup PPA svc call */
-	mov     r0, #PPA_SERVICE_NS_SMP
-	adr	r3, zero_params		@ r3 must contain a pointer to params
-	LM_CALL_PPA_SERVICE_PA
-enable_smp_bit:
-	/* CPUx must join coherency */
-        mrc     p15, 0, r0, c1, c0, 1   @ Read SCTRL
-	orr	r0, r0, #0x40		@ Enable SMP bit
-        mcr     p15, 0, r0, c1, c0, 1
-	isb
-skip_enable_smp_bit:			@ GP device should execute from here
 #ifdef CONFIG_CACHE_L2X0
 	/* FIXME : Add POR register restore as well */
 	ldr	r2, =OMAP44XX_L2CACHE_BASE
-- 
1.6.0.4


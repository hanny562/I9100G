
OMAP4: USB/MHL/TA: usage of DPLL cascading blocker API on cable inserts/removals.

When USB/MHL/TA module inserts, then it sets a constraint and release constraints
when it removals.


Index: kernel/drivers/usb/otg/fsa9480.c
===================================================================
--- kernel.orig/drivers/usb/otg/fsa9480.c	2011-06-06 23:39:39.347098532 +0900
+++ kernel/drivers/usb/otg/fsa9480.c	2011-06-07 01:28:49.477139986 +0900
@@ -37,6 +37,8 @@
 #include <plat/microusbic.h>
 #include <linux/input.h>
 
+#include <mach/omap4-common.h>
+
 /* FSA9480 I2C registers */
 #define FSA9480_REG_DEVID              0x01
 #define FSA9480_REG_CTRL               0x02
@@ -520,6 +522,7 @@
        u8 val1, val2, ctrl,temp;
        struct fsa9480_platform_data *pdata = usbsw->pdata;
        struct i2c_client *client = usbsw->client;
+       int ret = 0;
 
 #if 0
        /*reset except CP USB and AV dock*/
@@ -705,6 +708,23 @@
 
        }
 
+	ret = get_real_usbic_state();
+	if (ret > 0) {
+			/*
+			 * The DPLL sets a constraints to hold DPLL cascade entry
+			 * When USB/MHL/TA module inserts.
+			 */
+			if (dpll_cascading_blocker_hold(&client->dev) < 0)
+				dev_warn(&client->dev, "Error holding DPLL cascading constraint\n");
+	} else {
+			/*
+			 * The DPLL release a constraints to enter DPLL cascade entry 
+			 * for LowPower mode When USB/MHL/TA module removals.
+			 */
+			if (dpll_cascading_blocker_release(&client->dev) < 0)
+				dev_warn(&client->dev, "Error releasing DPLL cascading constraint\n");
+	}
+
        usbsw->dev1 = val1;
        usbsw->dev2 = val2;
 
@@ -746,7 +766,7 @@
 				   ret = MICROUSBIC_MHL_CHARGER;
        }
 
-       return ret;
+      return ret;
 }
 
 static void fsa9480_work_cb(struct work_struct *work)
@@ -920,7 +940,14 @@
 static int __devexit fsa9480_remove(struct i2c_client *client)
 {
        struct fsa9480_usbsw *usbsw = i2c_get_clientdata(client);
-       if (client->irq)
+       
+	/*
+	 * The DPLL releases all constraints to enter Low power mode 
+	 * (DPLL cascade state) When USB/MHL/TA module removals.
+	 */
+	dpll_cascading_blocker_release(&client->dev);
+       
+	if (client->irq)
                free_irq(client->irq, NULL);
        i2c_set_clientdata(client, NULL);
 

Index: Kernel/arch/arm/mach-omap2/Kconfig
===================================================================
--- Kernel.orig/arch/arm/mach-omap2/Kconfig	2011-03-02 10:18:00.149962002 +0900
+++ Kernel/arch/arm/mach-omap2/Kconfig	2011-03-04 14:19:00.789962002 +0900
@@ -82,7 +82,7 @@
 
 config WIFI_CONTROL_FUNC
         bool "Enable WiFi control function abstraction"
-        depends on MACH_OMAP_4430SDP || MACH_OMAP4_TAB_10_1
+        depends on MACH_OMAP_4430SDP || MACH_OMAP4_TAB_10_1 || MACH_SAMSUNG_T1_OMAP4430
         select WIRELESS_EXT
         select WEXT_CORE
         select WEXT_PROC
@@ -251,6 +251,31 @@
         depends on MACH_OMAP4_TAB_10_1
         default 3
 
+config MACH_SAMSUNG_T1_OMAP4430
+	bool "Samsung T1 platform based on OMAP4430"
+	depends on ARCH_OMAP4
+	select HIGHMEM
+	select TWL6030_GPADC
+	select MISC_DEVICES
+	select STAGING
+	select IIO
+	select HWMON
+	select INPUT_MISC
+	select INPUT_KEYBOARD
+	select INPUT_TOUCHSCREEN
+	select POWER_SUPPLY
+	select SECURITY_MIDDLEWARE_COMPONENT
+
+config  SAMSUNG_REL_HW_REV
+        int "Samsung T1 platform  H/W board revision"
+        depends on MACH_SAMSUNG_T1_OMAP4430
+        default 0
+
+config  SAMSUNG_MODEL_NAME
+        string  "GT-I9100G"
+        depends on MACH_SAMSUNG_T1_OMAP4430
+        default "GT-I9100G"
+
 config MACH_OMAP4_PANDA
 	bool "OMAP4 based Panda board"
 	depends on ARCH_OMAP4
Index: Kernel/arch/arm/mach-omap2/Makefile
===================================================================
--- Kernel.orig/arch/arm/mach-omap2/Makefile	2011-03-02 10:18:00.149962002 +0900
+++ Kernel/arch/arm/mach-omap2/Makefile	2011-03-04 15:47:34.599961999 +0900
@@ -196,6 +196,9 @@
 ifeq ($(CONFIG_SAMSUNG_OMAP4_TAB_REV),7)
 						obj-$(CONFIG_MACH_OMAP4_TAB_10_1)   += matchbox-panel.o
 endif	
+obj-$(CONFIG_MACH_SAMSUNG_T1_OMAP4430)	+= board-t1-omap4430.o \
+					   board-4430univ-sensors.o \
+					   hsmmc.o  matchbox-panel.o
 obj-$(CONFIG_MACH_OMAP4_PANDA)		+= board-omap4panda.o \
 					   hsmmc.o
 obj-$(CONFIG_TIWLAN_SDIO)               += board-4430sdp-wifi.o
Index: Kernel/arch/arm/plat-omap/include/plat/uncompress.h
===================================================================
--- Kernel.orig/arch/arm/plat-omap/include/plat/uncompress.h	2011-03-01 19:27:39.979961999 +0900
+++ Kernel/arch/arm/plat-omap/include/plat/uncompress.h	2011-03-04 14:57:32.869961998 +0900
@@ -149,6 +149,8 @@
 		/* DEBUG_LL_OMAP4(3, omap_4430sdp); */
 		/* For Samsung OMAP4 based 10.1' tablet board */
 		DEBUG_LL_OMAP4(4, omap4_tab_10_1);
+		/* For Samsung T1 platform based on OMAP4430 */
+		DEBUG_LL_OMAP4(4, samsung_t1_omap4430);
 		DEBUG_LL_OMAP4(3, omap4_panda);
 
 		/* zoom2/3 external uart */
Index: Kernel/arch/arm/tools/mach-types
===================================================================
--- Kernel.orig/arch/arm/tools/mach-types	2011-03-02 10:18:01.659961999 +0900
+++ Kernel/arch/arm/tools/mach-types	2011-03-04 14:19:00.869961999 +0900
@@ -2951,3 +2951,4 @@
 flexibity		MACH_FLEXIBITY		FLEXIBITY		2965
 wlan_computer		MACH_WLAN_COMPUTER	WLAN_COMPUTER		2966
 omap4_tab_10_1          MACH_OMAP4_TAB_10_1     OMAP4_TAB_10_1          2967
+samsung_t1_omap4430          	MACH_SAMSUNG_T1_OMAP4430     	SAMSUNG_T1_OMAP4430          	2968
Index: Kernel/sound/soc/omap/Kconfig
===================================================================
--- Kernel.orig/sound/soc/omap/Kconfig	2011-03-02 10:19:11.629961998 +0900
+++ Kernel/sound/soc/omap/Kconfig	2011-03-04 14:19:01.079962000 +0900
@@ -109,7 +109,7 @@
 
 config SND_OMAP_SOC_SDP4430
 	tristate "SoC Audio support for Texas Instruments SDP4430 or PandaBoard"
-	depends on (MACH_OMAP_4430SDP || MACH_OMAP4_PANDA || MACH_OMAP4_TAB_10_1)
+	depends on (MACH_OMAP_4430SDP || MACH_OMAP4_PANDA || MACH_OMAP4_TAB_10_1 || MACH_SAMSUNG_T1_OMAP4430)
 	depends on TWL4030_CORE && SND_OMAP_SOC
 	select SND_OMAP_SOC_ABE
 	select SND_OMAP_SOC_MCPDM
Index: Kernel/sound/soc/omap/sdp4430.c
===================================================================
--- Kernel.orig/sound/soc/omap/sdp4430.c	2011-03-02 10:19:11.659961999 +0900
+++ Kernel/sound/soc/omap/sdp4430.c	2011-03-04 14:19:01.209962000 +0900
@@ -431,7 +431,7 @@
 	ret = snd_soc_jack_add_pins(&hs_jack, ARRAY_SIZE(hs_jack_pins),
 				hs_jack_pins);
 
-	if (machine_is_omap_4430sdp() || machine_is_omap4_tab_10_1())
+	if (machine_is_omap_4430sdp() || machine_is_omap4_tab_10_1() || machine_is_samsung_t1_omap4430())
 		twl6040_hs_jack_detect(codec, &hs_jack, SND_JACK_HEADSET);
 	else
 		snd_soc_jack_report(&hs_jack, SND_JACK_HEADSET, SND_JACK_HEADSET);
@@ -912,7 +912,7 @@
 	u8 gpoctl;
 	int ret;
 
-	if (!machine_is_omap_4430sdp() && !machine_is_omap4_panda() && !machine_is_omap4_tab_10_1()) {
+	if (!machine_is_omap_4430sdp() && !machine_is_omap4_panda() && !machine_is_omap4_tab_10_1() &&  !machine_is_samsung_t1_omap4430()) {
 		pr_debug("Not SDP4430 or PandaBoard!\n");
 		return -ENODEV;
 	}
Index: Kernel/arch/arm/configs/android_t1_omap4430_r00_eng_defconfig
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ Kernel/arch/arm/configs/android_t1_omap4430_r00_eng_defconfig	2011-03-04 14:22:08.779962001 +0900
@@ -0,0 +1,2337 @@
+#
+# Automatically generated make config: don't edit
+# Linux kernel version: 2.6.35.7
+# Fri Mar  4 14:21:58 2011
+#
+CONFIG_ARM=y
+CONFIG_SYS_SUPPORTS_APM_EMULATION=y
+CONFIG_GENERIC_GPIO=y
+CONFIG_GENERIC_TIME=y
+# CONFIG_ARCH_USES_GETTIMEOFFSET is not set
+CONFIG_GENERIC_CLOCKEVENTS=y
+CONFIG_GENERIC_CLOCKEVENTS_BROADCAST=y
+CONFIG_HAVE_PROC_CPU=y
+CONFIG_GENERIC_HARDIRQS=y
+CONFIG_STACKTRACE_SUPPORT=y
+CONFIG_LOCKDEP_SUPPORT=y
+CONFIG_TRACE_IRQFLAGS_SUPPORT=y
+CONFIG_HARDIRQS_SW_RESEND=y
+CONFIG_GENERIC_IRQ_PROBE=y
+CONFIG_GENERIC_LOCKBREAK=y
+CONFIG_RWSEM_GENERIC_SPINLOCK=y
+CONFIG_ARCH_HAS_CPUFREQ=y
+CONFIG_GENERIC_HWEIGHT=y
+CONFIG_GENERIC_CALIBRATE_DELAY=y
+CONFIG_NEED_DMA_MAP_STATE=y
+CONFIG_GENERIC_HARDIRQS_NO__DO_IRQ=y
+CONFIG_VECTORS_BASE=0xffff0000
+CONFIG_ARCH_HAS_CPU_IDLE_WAIT=y
+CONFIG_DEFCONFIG_LIST="/lib/modules/$UNAME_RELEASE/.config"
+CONFIG_CONSTRUCTORS=y
+
+#
+# General setup
+#
+CONFIG_EXPERIMENTAL=y
+CONFIG_LOCK_KERNEL=y
+CONFIG_INIT_ENV_ARG_LIMIT=32
+CONFIG_CROSS_COMPILE=""
+CONFIG_LOCALVERSION=""
+CONFIG_LOCALVERSION_AUTO=y
+CONFIG_HAVE_KERNEL_GZIP=y
+CONFIG_HAVE_KERNEL_LZMA=y
+CONFIG_HAVE_KERNEL_LZO=y
+CONFIG_KERNEL_GZIP=y
+# CONFIG_KERNEL_BZIP2 is not set
+# CONFIG_KERNEL_LZMA is not set
+# CONFIG_KERNEL_LZO is not set
+CONFIG_SWAP=y
+CONFIG_SYSVIPC=y
+CONFIG_SYSVIPC_SYSCTL=y
+# CONFIG_POSIX_MQUEUE is not set
+CONFIG_BSD_PROCESS_ACCT=y
+# CONFIG_CONTEXT_SWITCH_COUNTER is not set
+# CONFIG_BSD_PROCESS_ACCT_V3 is not set
+# CONFIG_TASKSTATS is not set
+# CONFIG_AUDIT is not set
+
+#
+# RCU Subsystem
+#
+CONFIG_TREE_RCU=y
+# CONFIG_TREE_PREEMPT_RCU is not set
+# CONFIG_TINY_RCU is not set
+# CONFIG_RCU_TRACE is not set
+CONFIG_RCU_FANOUT=32
+# CONFIG_RCU_FANOUT_EXACT is not set
+# CONFIG_RCU_FAST_NO_HZ is not set
+# CONFIG_TREE_RCU_TRACE is not set
+# CONFIG_IKCONFIG is not set
+CONFIG_LOG_BUF_SHIFT=14
+# CONFIG_CGROUPS is not set
+# CONFIG_SYSFS_DEPRECATED_V2 is not set
+# CONFIG_RELAY is not set
+# CONFIG_NAMESPACES is not set
+CONFIG_BLK_DEV_INITRD=y
+CONFIG_INITRAMFS_SOURCE=""
+CONFIG_RD_GZIP=y
+# CONFIG_RD_BZIP2 is not set
+# CONFIG_RD_LZMA is not set
+# CONFIG_RD_LZO is not set
+CONFIG_CC_OPTIMIZE_FOR_SIZE=y
+CONFIG_SYSCTL=y
+CONFIG_ANON_INODES=y
+CONFIG_PANIC_TIMEOUT=0
+CONFIG_EMBEDDED=y
+CONFIG_UID16=y
+# CONFIG_SYSCTL_SYSCALL is not set
+CONFIG_KALLSYMS=y
+# CONFIG_KALLSYMS_ALL is not set
+# CONFIG_KALLSYMS_EXTRA_PASS is not set
+CONFIG_HOTPLUG=y
+CONFIG_PRINTK=y
+CONFIG_BUG=y
+# CONFIG_ELF_CORE is not set
+CONFIG_BASE_FULL=y
+CONFIG_FUTEX=y
+CONFIG_EPOLL=y
+CONFIG_SIGNALFD=y
+CONFIG_TIMERFD=y
+CONFIG_EVENTFD=y
+CONFIG_SHMEM=y
+CONFIG_ASHMEM=y
+CONFIG_AIO=y
+CONFIG_HAVE_PERF_EVENTS=y
+CONFIG_PERF_USE_VMALLOC=y
+
+#
+# Kernel Performance Events And Counters
+#
+# CONFIG_PERF_EVENTS is not set
+# CONFIG_PERF_COUNTERS is not set
+CONFIG_VM_EVENT_COUNTERS=y
+CONFIG_SLUB_DEBUG=y
+CONFIG_COMPAT_BRK=y
+# CONFIG_SLAB is not set
+CONFIG_SLUB=y
+# CONFIG_SLOB is not set
+# CONFIG_PROFILING is not set
+CONFIG_HAVE_OPROFILE=y
+# CONFIG_KPROBES is not set
+CONFIG_HAVE_KPROBES=y
+CONFIG_HAVE_KRETPROBES=y
+CONFIG_USE_GENERIC_SMP_HELPERS=y
+CONFIG_HAVE_CLK=y
+
+#
+# GCOV-based kernel profiling
+#
+# CONFIG_GCOV_KERNEL is not set
+# CONFIG_SLOW_WORK is not set
+CONFIG_HAVE_GENERIC_DMA_COHERENT=y
+CONFIG_SLABINFO=y
+CONFIG_RT_MUTEXES=y
+CONFIG_BASE_SMALL=0
+CONFIG_MODULES=y
+# CONFIG_MODULE_FORCE_LOAD is not set
+CONFIG_MODULE_UNLOAD=y
+# CONFIG_MODULE_FORCE_UNLOAD is not set
+# CONFIG_MODVERSIONS is not set
+CONFIG_MODULE_SRCVERSION_ALL=y
+CONFIG_STOP_MACHINE=y
+CONFIG_BLOCK=y
+CONFIG_LBDAF=y
+# CONFIG_BLK_DEV_BSG is not set
+# CONFIG_BLK_DEV_INTEGRITY is not set
+
+#
+# IO Schedulers
+#
+CONFIG_IOSCHED_NOOP=y
+CONFIG_IOSCHED_DEADLINE=y
+CONFIG_IOSCHED_CFQ=y
+# CONFIG_DEFAULT_DEADLINE is not set
+CONFIG_DEFAULT_CFQ=y
+# CONFIG_DEFAULT_NOOP is not set
+CONFIG_DEFAULT_IOSCHED="cfq"
+# CONFIG_INLINE_SPIN_TRYLOCK is not set
+# CONFIG_INLINE_SPIN_TRYLOCK_BH is not set
+# CONFIG_INLINE_SPIN_LOCK is not set
+# CONFIG_INLINE_SPIN_LOCK_BH is not set
+# CONFIG_INLINE_SPIN_LOCK_IRQ is not set
+# CONFIG_INLINE_SPIN_LOCK_IRQSAVE is not set
+# CONFIG_INLINE_SPIN_UNLOCK is not set
+# CONFIG_INLINE_SPIN_UNLOCK_BH is not set
+# CONFIG_INLINE_SPIN_UNLOCK_IRQ is not set
+# CONFIG_INLINE_SPIN_UNLOCK_IRQRESTORE is not set
+# CONFIG_INLINE_READ_TRYLOCK is not set
+# CONFIG_INLINE_READ_LOCK is not set
+# CONFIG_INLINE_READ_LOCK_BH is not set
+# CONFIG_INLINE_READ_LOCK_IRQ is not set
+# CONFIG_INLINE_READ_LOCK_IRQSAVE is not set
+# CONFIG_INLINE_READ_UNLOCK is not set
+# CONFIG_INLINE_READ_UNLOCK_BH is not set
+# CONFIG_INLINE_READ_UNLOCK_IRQ is not set
+# CONFIG_INLINE_READ_UNLOCK_IRQRESTORE is not set
+# CONFIG_INLINE_WRITE_TRYLOCK is not set
+# CONFIG_INLINE_WRITE_LOCK is not set
+# CONFIG_INLINE_WRITE_LOCK_BH is not set
+# CONFIG_INLINE_WRITE_LOCK_IRQ is not set
+# CONFIG_INLINE_WRITE_LOCK_IRQSAVE is not set
+# CONFIG_INLINE_WRITE_UNLOCK is not set
+# CONFIG_INLINE_WRITE_UNLOCK_BH is not set
+# CONFIG_INLINE_WRITE_UNLOCK_IRQ is not set
+# CONFIG_INLINE_WRITE_UNLOCK_IRQRESTORE is not set
+CONFIG_MUTEX_SPIN_ON_OWNER=y
+CONFIG_FREEZER=y
+
+#
+# System Type
+#
+CONFIG_MMU=y
+# CONFIG_ARCH_AAEC2000 is not set
+# CONFIG_ARCH_INTEGRATOR is not set
+# CONFIG_ARCH_REALVIEW is not set
+# CONFIG_ARCH_VERSATILE is not set
+# CONFIG_ARCH_VEXPRESS is not set
+# CONFIG_ARCH_AT91 is not set
+# CONFIG_ARCH_BCMRING is not set
+# CONFIG_ARCH_CLPS711X is not set
+# CONFIG_ARCH_CNS3XXX is not set
+# CONFIG_ARCH_GEMINI is not set
+# CONFIG_ARCH_EBSA110 is not set
+# CONFIG_ARCH_EP93XX is not set
+# CONFIG_ARCH_FOOTBRIDGE is not set
+# CONFIG_ARCH_MXC is not set
+# CONFIG_ARCH_STMP3XXX is not set
+# CONFIG_ARCH_NETX is not set
+# CONFIG_ARCH_H720X is not set
+# CONFIG_ARCH_IOP13XX is not set
+# CONFIG_ARCH_IOP32X is not set
+# CONFIG_ARCH_IOP33X is not set
+# CONFIG_ARCH_IXP23XX is not set
+# CONFIG_ARCH_IXP2000 is not set
+# CONFIG_ARCH_IXP4XX is not set
+# CONFIG_ARCH_L7200 is not set
+# CONFIG_ARCH_DOVE is not set
+# CONFIG_ARCH_KIRKWOOD is not set
+# CONFIG_ARCH_LOKI is not set
+# CONFIG_ARCH_MV78XX0 is not set
+# CONFIG_ARCH_ORION5X is not set
+# CONFIG_ARCH_MMP is not set
+# CONFIG_ARCH_KS8695 is not set
+# CONFIG_ARCH_NS9XXX is not set
+# CONFIG_ARCH_W90X900 is not set
+# CONFIG_ARCH_NUC93X is not set
+# CONFIG_ARCH_PNX4008 is not set
+# CONFIG_ARCH_PXA is not set
+# CONFIG_ARCH_MSM is not set
+# CONFIG_ARCH_SHMOBILE is not set
+# CONFIG_ARCH_RPC is not set
+# CONFIG_ARCH_SA1100 is not set
+# CONFIG_ARCH_S3C2410 is not set
+# CONFIG_ARCH_S3C64XX is not set
+# CONFIG_ARCH_S5P6440 is not set
+# CONFIG_ARCH_S5P6442 is not set
+# CONFIG_ARCH_S5PC100 is not set
+# CONFIG_ARCH_S5PV210 is not set
+# CONFIG_ARCH_SHARK is not set
+# CONFIG_ARCH_LH7A40X is not set
+# CONFIG_ARCH_U300 is not set
+# CONFIG_ARCH_U8500 is not set
+# CONFIG_ARCH_NOMADIK is not set
+# CONFIG_ARCH_DAVINCI is not set
+CONFIG_ARCH_OMAP=y
+# CONFIG_PLAT_SPEAR is not set
+
+#
+# TI OMAP Implementations
+#
+# CONFIG_ARCH_OMAP1 is not set
+CONFIG_ARCH_OMAP2PLUS=y
+# CONFIG_ARCH_OMAP2 is not set
+# CONFIG_ARCH_OMAP3 is not set
+CONFIG_ARCH_OMAP4=y
+
+#
+# OMAP Feature Selections
+#
+CONFIG_OMAP_SMARTREFLEX=y
+# CONFIG_OMAP_SMARTREFLEX_TESTING is not set
+CONFIG_OMAP_SMARTREFLEX_CLASS3=y
+CONFIG_OMAP_ABB=y
+# CONFIG_OMAP_ABB_DEFAULT_IVA_FBB is not set
+CONFIG_OMAP_RESET_CLOCKS=y
+CONFIG_OMAP_MUX=y
+CONFIG_OMAP_MUX_DEBUG=y
+CONFIG_OMAP_MUX_WARNINGS=y
+CONFIG_OMAP_MCBSP=y
+CONFIG_OMAP_MBOX_FWK=y
+CONFIG_OMAP_REMOTE_PROC=y
+CONFIG_OMAP_IOMMU=y
+CONFIG_OMAP_USER_DMM=y
+# CONFIG_OMAP_IOMMU_DEBUG is not set
+# CONFIG_OMAP_MPU_TIMER is not set
+CONFIG_OMAP_32K_TIMER=y
+CONFIG_OMAP_32K_TIMER_HZ=128
+CONFIG_OMAP_DM_TIMER=y
+# CONFIG_OMAP_DM_TIMER_PWM is not set
+# CONFIG_OMAP_PM_NONE is not set
+# CONFIG_OMAP_PM_NOOP is not set
+CONFIG_OMAP_PM=y
+CONFIG_OMAP_HDMI_AUDIO_WA=y
+
+#
+# OMAP Board Type
+#
+CONFIG_WIFI_CONTROL_FUNC=y
+CONFIG_TIWLAN_SDIO=y
+CONFIG_TIWLAN_MMC_CONTROLLER=5
+# CONFIG_OMAP4_ES1 is not set
+# CONFIG_MACH_OMAP_4430SDP is not set
+# CONFIG_MACH_OMAP4_TAB_10_1 is not set
+CONFIG_MACH_SAMSUNG_T1_OMAP4430=y
+CONFIG_SAMSUNG_REL_HW_REV=0
+CONFIG_SAMSUNG_MODEL_NAME="GT-I9100G"
+# CONFIG_MACH_OMAP4_PANDA is not set
+# CONFIG_ERRATA_OMAP4_AXI2OCP is not set
+CONFIG_INTERCONNECT_IO_POSTING=y
+# CONFIG_ENABLE_L3_ERRORS is not set
+CONFIG_OMAP_ALLOW_OSWR=y
+CONFIG_OMAP4_PMD_CLKS_ENABLE=y
+CONFIG_OMAP4_KEEP_STATIC_DEPENDENCIES=y
+
+#
+# Processor Type
+#
+CONFIG_CPU_32v6K=y
+CONFIG_CPU_V7=y
+CONFIG_CPU_32v7=y
+CONFIG_CPU_ABRT_EV7=y
+CONFIG_CPU_PABRT_V7=y
+CONFIG_CPU_CACHE_V7=y
+CONFIG_CPU_CACHE_VIPT=y
+CONFIG_CPU_COPY_V6=y
+CONFIG_CPU_TLB_V7=y
+CONFIG_CPU_HAS_ASID=y
+CONFIG_CPU_CP15=y
+CONFIG_CPU_CP15_MMU=y
+
+#
+# Processor Features
+#
+CONFIG_ARM_THUMB=y
+CONFIG_ARM_THUMBEE=y
+# CONFIG_CPU_ICACHE_DISABLE is not set
+# CONFIG_CPU_DCACHE_DISABLE is not set
+# CONFIG_CPU_BPREDICT_DISABLE is not set
+CONFIG_HAS_TLS_REG=y
+CONFIG_OUTER_CACHE=y
+CONFIG_OUTER_CACHE_SYNC=y
+CONFIG_CACHE_L2X0=y
+CONFIG_CACHE_PL310=y
+CONFIG_ARM_L1_CACHE_SHIFT=5
+CONFIG_ARM_DMA_MEM_BUFFERABLE=y
+CONFIG_CPU_HAS_PMU=y
+# CONFIG_ARM_ERRATA_430973 is not set
+# CONFIG_ARM_ERRATA_458693 is not set
+# CONFIG_ARM_ERRATA_460075 is not set
+# CONFIG_PL310_ERRATA_588369 is not set
+CONFIG_ARM_ERRATA_720789=y
+CONFIG_ARM_GIC=y
+CONFIG_COMMON_CLKDEV=y
+# CONFIG_FIQ_DEBUGGER is not set
+
+#
+# Bus support
+#
+# CONFIG_PCI_SYSCALL is not set
+# CONFIG_ARCH_SUPPORTS_MSI is not set
+# CONFIG_PCCARD is not set
+
+#
+# Kernel Features
+#
+CONFIG_TICK_ONESHOT=y
+CONFIG_NO_HZ=y
+CONFIG_HIGH_RES_TIMERS=y
+CONFIG_GENERIC_CLOCKEVENTS_BUILD=y
+CONFIG_SMP=y
+CONFIG_HAVE_ARM_SCU=y
+CONFIG_HAVE_ARM_TWD=y
+CONFIG_VMSPLIT_3G=y
+# CONFIG_VMSPLIT_2G is not set
+# CONFIG_VMSPLIT_1G is not set
+CONFIG_PAGE_OFFSET=0xC0000000
+CONFIG_NR_CPUS=2
+CONFIG_HOTPLUG_CPU=y
+CONFIG_LOCAL_TIMERS=y
+# CONFIG_PREEMPT_NONE is not set
+# CONFIG_PREEMPT_VOLUNTARY is not set
+CONFIG_PREEMPT=y
+CONFIG_HZ=128
+# CONFIG_THUMB2_KERNEL is not set
+CONFIG_AEABI=y
+CONFIG_OABI_COMPAT=y
+CONFIG_ARCH_HAS_HOLES_MEMORYMODEL=y
+# CONFIG_ARCH_SPARSEMEM_DEFAULT is not set
+# CONFIG_ARCH_SELECT_MEMORY_MODEL is not set
+CONFIG_HIGHMEM=y
+CONFIG_SELECT_MEMORY_MODEL=y
+CONFIG_FLATMEM_MANUAL=y
+# CONFIG_DISCONTIGMEM_MANUAL is not set
+# CONFIG_SPARSEMEM_MANUAL is not set
+CONFIG_FLATMEM=y
+CONFIG_FLAT_NODE_MEM_MAP=y
+CONFIG_PAGEFLAGS_EXTENDED=y
+CONFIG_SPLIT_PTLOCK_CPUS=4
+# CONFIG_PHYS_ADDR_T_64BIT is not set
+CONFIG_ZONE_DMA_FLAG=0
+CONFIG_BOUNCE=y
+CONFIG_VIRT_TO_BUS=y
+# CONFIG_KSM is not set
+CONFIG_DEFAULT_MMAP_MIN_ADDR=4096
+# CONFIG_LEDS is not set
+CONFIG_ALIGNMENT_TRAP=y
+# CONFIG_UACCESS_WITH_MEMCPY is not set
+
+#
+# Boot options
+#
+CONFIG_ZBOOT_ROM_TEXT=0x0
+CONFIG_ZBOOT_ROM_BSS=0x0
+CONFIG_CMDLINE="root=/dev/ram0 rw mem=128M console=ttyS2,115200n8 initrd=0x81600000,20M ramdisk_size=20480"
+# CONFIG_CMDLINE_FORCE is not set
+# CONFIG_XIP_KERNEL is not set
+# CONFIG_KEXEC is not set
+
+#
+# CPU Power Management
+#
+CONFIG_CPU_FREQ=y
+CONFIG_CPU_FREQ_TABLE=y
+# CONFIG_CPU_FREQ_DEBUG is not set
+CONFIG_CPU_FREQ_STAT=y
+# CONFIG_CPU_FREQ_STAT_DETAILS is not set
+CONFIG_CPU_FREQ_DEFAULT_GOV_PERFORMANCE=y
+# CONFIG_CPU_FREQ_DEFAULT_GOV_POWERSAVE is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_USERSPACE is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_ONDEMAND is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_CONSERVATIVE is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_HOTPLUG is not set
+CONFIG_CPU_FREQ_GOV_PERFORMANCE=y
+CONFIG_CPU_FREQ_GOV_POWERSAVE=y
+CONFIG_CPU_FREQ_GOV_USERSPACE=y
+CONFIG_CPU_FREQ_GOV_ONDEMAND=y
+CONFIG_CPU_FREQ_GOV_CONSERVATIVE=y
+CONFIG_CPU_FREQ_GOV_HOTPLUG=y
+CONFIG_CPU_IDLE=y
+CONFIG_CPU_IDLE_GOV_LADDER=y
+CONFIG_CPU_IDLE_GOV_MENU=y
+
+#
+# Floating point emulation
+#
+
+#
+# At least one emulation must be selected
+#
+# CONFIG_FPE_NWFPE is not set
+# CONFIG_FPE_FASTFPE is not set
+CONFIG_VFP=y
+CONFIG_VFPv3=y
+CONFIG_NEON=y
+
+#
+# Userspace binary formats
+#
+CONFIG_BINFMT_ELF=y
+CONFIG_HAVE_AOUT=y
+# CONFIG_BINFMT_AOUT is not set
+CONFIG_BINFMT_MISC=y
+
+#
+# Power management options
+#
+CONFIG_PM=y
+CONFIG_PM_DEBUG=y
+# CONFIG_PM_ADVANCED_DEBUG is not set
+# CONFIG_PM_VERBOSE is not set
+CONFIG_CAN_PM_TRACE=y
+CONFIG_PM_SLEEP_SMP=y
+CONFIG_PM_SLEEP=y
+CONFIG_SUSPEND_NVS=y
+CONFIG_SUSPEND=y
+# CONFIG_PM_TEST_SUSPEND is not set
+CONFIG_SUSPEND_FREEZER=y
+CONFIG_HAS_WAKELOCK=y
+CONFIG_HAS_EARLYSUSPEND=y
+CONFIG_WAKELOCK=y
+CONFIG_WAKELOCK_STAT=y
+CONFIG_USER_WAKELOCK=y
+CONFIG_EARLYSUSPEND=y
+# CONFIG_NO_USER_SPACE_SCREEN_ACCESS_CONTROL is not set
+# CONFIG_CONSOLE_EARLYSUSPEND is not set
+CONFIG_FB_EARLYSUSPEND=y
+# CONFIG_APM_EMULATION is not set
+CONFIG_PM_RUNTIME=y
+CONFIG_PM_OPS=y
+CONFIG_ARCH_SUSPEND_POSSIBLE=y
+CONFIG_NET=y
+
+#
+# Networking options
+#
+CONFIG_PACKET=y
+CONFIG_UNIX=y
+CONFIG_XFRM=y
+CONFIG_XFRM_USER=y
+# CONFIG_XFRM_SUB_POLICY is not set
+CONFIG_XFRM_MIGRATE=y
+# CONFIG_XFRM_STATISTICS is not set
+CONFIG_XFRM_IPCOMP=y
+CONFIG_NET_KEY=y
+CONFIG_NET_KEY_MIGRATE=y
+CONFIG_INET=y
+CONFIG_IP_MULTICAST=y
+CONFIG_IP_ADVANCED_ROUTER=y
+CONFIG_ASK_IP_FIB_HASH=y
+# CONFIG_IP_FIB_TRIE is not set
+CONFIG_IP_FIB_HASH=y
+# CONFIG_IP_MULTIPLE_TABLES is not set
+# CONFIG_IP_ROUTE_MULTIPATH is not set
+# CONFIG_IP_ROUTE_VERBOSE is not set
+CONFIG_IP_PNP=y
+CONFIG_IP_PNP_DHCP=y
+CONFIG_IP_PNP_BOOTP=y
+CONFIG_IP_PNP_RARP=y
+# CONFIG_NET_IPIP is not set
+# CONFIG_NET_IPGRE is not set
+# CONFIG_IP_MROUTE is not set
+# CONFIG_ARPD is not set
+# CONFIG_SYN_COOKIES is not set
+# CONFIG_INET_AH is not set
+# CONFIG_INET_ESP is not set
+# CONFIG_INET_IPCOMP is not set
+# CONFIG_INET_XFRM_TUNNEL is not set
+CONFIG_INET_TUNNEL=y
+CONFIG_INET_XFRM_MODE_TRANSPORT=y
+CONFIG_INET_XFRM_MODE_TUNNEL=y
+CONFIG_INET_XFRM_MODE_BEET=y
+CONFIG_INET_LRO=y
+CONFIG_INET_DIAG=y
+CONFIG_INET_TCP_DIAG=y
+# CONFIG_TCP_CONG_ADVANCED is not set
+CONFIG_TCP_CONG_CUBIC=y
+CONFIG_DEFAULT_TCP_CONG="cubic"
+# CONFIG_TCP_MD5SIG is not set
+CONFIG_IPV6=y
+CONFIG_IPV6_PRIVACY=y
+CONFIG_IPV6_ROUTER_PREF=y
+# CONFIG_IPV6_ROUTE_INFO is not set
+CONFIG_IPV6_OPTIMISTIC_DAD=y
+CONFIG_INET6_AH=y
+CONFIG_INET6_ESP=y
+CONFIG_INET6_IPCOMP=y
+CONFIG_IPV6_MIP6=y
+CONFIG_INET6_XFRM_TUNNEL=y
+CONFIG_INET6_TUNNEL=y
+CONFIG_INET6_XFRM_MODE_TRANSPORT=y
+CONFIG_INET6_XFRM_MODE_TUNNEL=y
+CONFIG_INET6_XFRM_MODE_BEET=y
+CONFIG_INET6_XFRM_MODE_ROUTEOPTIMIZATION=y
+CONFIG_IPV6_SIT=y
+# CONFIG_IPV6_SIT_6RD is not set
+CONFIG_IPV6_NDISC_NODETYPE=y
+CONFIG_IPV6_TUNNEL=y
+CONFIG_IPV6_MULTIPLE_TABLES=y
+# CONFIG_IPV6_SUBTREES is not set
+# CONFIG_IPV6_MROUTE is not set
+CONFIG_ANDROID_PARANOID_NETWORK=y
+# CONFIG_NET_ACTIVITY_STATS is not set
+# CONFIG_NETWORK_SECMARK is not set
+CONFIG_NETFILTER=y
+# CONFIG_NETFILTER_DEBUG is not set
+CONFIG_NETFILTER_ADVANCED=y
+
+#
+# Core Netfilter Configuration
+#
+CONFIG_NETFILTER_NETLINK=y
+CONFIG_NETFILTER_NETLINK_QUEUE=y
+CONFIG_NETFILTER_NETLINK_LOG=y
+CONFIG_NF_CONNTRACK=y
+CONFIG_NF_CT_ACCT=y
+CONFIG_NF_CONNTRACK_MARK=y
+CONFIG_NF_CONNTRACK_EVENTS=y
+CONFIG_NF_CT_PROTO_DCCP=y
+CONFIG_NF_CT_PROTO_GRE=y
+CONFIG_NF_CT_PROTO_SCTP=y
+CONFIG_NF_CT_PROTO_UDPLITE=y
+CONFIG_NF_CONNTRACK_AMANDA=y
+CONFIG_NF_CONNTRACK_FTP=y
+CONFIG_NF_CONNTRACK_H323=y
+CONFIG_NF_CONNTRACK_IRC=y
+CONFIG_NF_CONNTRACK_NETBIOS_NS=y
+CONFIG_NF_CONNTRACK_PPTP=y
+CONFIG_NF_CONNTRACK_SANE=y
+CONFIG_NF_CONNTRACK_SIP=y
+CONFIG_NF_CONNTRACK_TFTP=y
+CONFIG_NF_CT_NETLINK=y
+# CONFIG_NETFILTER_TPROXY is not set
+CONFIG_NETFILTER_XTABLES=y
+
+#
+# Xtables combined modules
+#
+CONFIG_NETFILTER_XT_MARK=y
+CONFIG_NETFILTER_XT_CONNMARK=y
+
+#
+# Xtables targets
+#
+CONFIG_NETFILTER_XT_TARGET_CLASSIFY=y
+CONFIG_NETFILTER_XT_TARGET_CONNMARK=y
+# CONFIG_NETFILTER_XT_TARGET_CT is not set
+# CONFIG_NETFILTER_XT_TARGET_DSCP is not set
+# CONFIG_NETFILTER_XT_TARGET_HL is not set
+CONFIG_NETFILTER_XT_TARGET_MARK=y
+# CONFIG_NETFILTER_XT_TARGET_NFLOG is not set
+CONFIG_NETFILTER_XT_TARGET_NFQUEUE=y
+# CONFIG_NETFILTER_XT_TARGET_NOTRACK is not set
+# CONFIG_NETFILTER_XT_TARGET_RATEEST is not set
+# CONFIG_NETFILTER_XT_TARGET_TEE is not set
+# CONFIG_NETFILTER_XT_TARGET_TRACE is not set
+# CONFIG_NETFILTER_XT_TARGET_TCPMSS is not set
+# CONFIG_NETFILTER_XT_TARGET_TCPOPTSTRIP is not set
+
+#
+# Xtables matches
+#
+# CONFIG_NETFILTER_XT_MATCH_CLUSTER is not set
+CONFIG_NETFILTER_XT_MATCH_COMMENT=y
+CONFIG_NETFILTER_XT_MATCH_CONNBYTES=y
+CONFIG_NETFILTER_XT_MATCH_CONNLIMIT=y
+CONFIG_NETFILTER_XT_MATCH_CONNMARK=y
+CONFIG_NETFILTER_XT_MATCH_CONNTRACK=y
+# CONFIG_NETFILTER_XT_MATCH_DCCP is not set
+# CONFIG_NETFILTER_XT_MATCH_DSCP is not set
+# CONFIG_NETFILTER_XT_MATCH_ESP is not set
+CONFIG_NETFILTER_XT_MATCH_HASHLIMIT=y
+CONFIG_NETFILTER_XT_MATCH_HELPER=y
+CONFIG_NETFILTER_XT_MATCH_HL=y
+CONFIG_NETFILTER_XT_MATCH_IPRANGE=y
+CONFIG_NETFILTER_XT_MATCH_LENGTH=y
+CONFIG_NETFILTER_XT_MATCH_LIMIT=y
+CONFIG_NETFILTER_XT_MATCH_MAC=y
+CONFIG_NETFILTER_XT_MATCH_MARK=y
+CONFIG_NETFILTER_XT_MATCH_MULTIPORT=y
+# CONFIG_NETFILTER_XT_MATCH_OSF is not set
+CONFIG_NETFILTER_XT_MATCH_OWNER=y
+CONFIG_NETFILTER_XT_MATCH_POLICY=y
+CONFIG_NETFILTER_XT_MATCH_PKTTYPE=y
+CONFIG_NETFILTER_XT_MATCH_QUOTA=y
+# CONFIG_NETFILTER_XT_MATCH_RATEEST is not set
+# CONFIG_NETFILTER_XT_MATCH_REALM is not set
+# CONFIG_NETFILTER_XT_MATCH_RECENT is not set
+# CONFIG_NETFILTER_XT_MATCH_SCTP is not set
+CONFIG_NETFILTER_XT_MATCH_STATE=y
+CONFIG_NETFILTER_XT_MATCH_STATISTIC=y
+CONFIG_NETFILTER_XT_MATCH_STRING=y
+# CONFIG_NETFILTER_XT_MATCH_TCPMSS is not set
+CONFIG_NETFILTER_XT_MATCH_TIME=y
+CONFIG_NETFILTER_XT_MATCH_U32=y
+# CONFIG_IP_VS is not set
+
+#
+# IP: Netfilter Configuration
+#
+CONFIG_NF_DEFRAG_IPV4=y
+CONFIG_NF_CONNTRACK_IPV4=y
+CONFIG_NF_CONNTRACK_PROC_COMPAT=y
+# CONFIG_IP_NF_QUEUE is not set
+CONFIG_IP_NF_IPTABLES=y
+CONFIG_IP_NF_MATCH_ADDRTYPE=y
+CONFIG_IP_NF_MATCH_AH=y
+CONFIG_IP_NF_MATCH_ECN=y
+CONFIG_IP_NF_MATCH_TTL=y
+CONFIG_IP_NF_FILTER=y
+CONFIG_IP_NF_TARGET_REJECT=y
+CONFIG_IP_NF_TARGET_LOG=y
+# CONFIG_IP_NF_TARGET_ULOG is not set
+CONFIG_NF_NAT=y
+CONFIG_NF_NAT_NEEDED=y
+CONFIG_IP_NF_TARGET_MASQUERADE=y
+CONFIG_IP_NF_TARGET_NETMAP=y
+CONFIG_IP_NF_TARGET_REDIRECT=y
+# CONFIG_NF_NAT_SNMP_BASIC is not set
+CONFIG_NF_NAT_PROTO_DCCP=y
+CONFIG_NF_NAT_PROTO_GRE=y
+CONFIG_NF_NAT_PROTO_UDPLITE=y
+CONFIG_NF_NAT_PROTO_SCTP=y
+CONFIG_NF_NAT_FTP=y
+CONFIG_NF_NAT_IRC=y
+CONFIG_NF_NAT_TFTP=y
+CONFIG_NF_NAT_AMANDA=y
+CONFIG_NF_NAT_PPTP=y
+CONFIG_NF_NAT_H323=y
+CONFIG_NF_NAT_SIP=y
+CONFIG_IP_NF_MANGLE=y
+# CONFIG_IP_NF_TARGET_CLUSTERIP is not set
+# CONFIG_IP_NF_TARGET_ECN is not set
+# CONFIG_IP_NF_TARGET_TTL is not set
+CONFIG_IP_NF_RAW=y
+CONFIG_IP_NF_ARPTABLES=y
+CONFIG_IP_NF_ARPFILTER=y
+CONFIG_IP_NF_ARP_MANGLE=y
+
+#
+# IPv6: Netfilter Configuration
+#
+# CONFIG_NF_CONNTRACK_IPV6 is not set
+# CONFIG_IP6_NF_QUEUE is not set
+# CONFIG_IP6_NF_IPTABLES is not set
+# CONFIG_IP_DCCP is not set
+# CONFIG_IP_SCTP is not set
+# CONFIG_RDS is not set
+# CONFIG_TIPC is not set
+# CONFIG_ATM is not set
+# CONFIG_L2TP is not set
+# CONFIG_BRIDGE is not set
+# CONFIG_VLAN_8021Q is not set
+# CONFIG_DECNET is not set
+# CONFIG_LLC2 is not set
+# CONFIG_IPX is not set
+# CONFIG_ATALK is not set
+# CONFIG_X25 is not set
+# CONFIG_LAPB is not set
+# CONFIG_ECONET is not set
+CONFIG_WAN_ROUTER=y
+CONFIG_PHONET=y
+# CONFIG_IEEE802154 is not set
+# CONFIG_NET_SCHED is not set
+# CONFIG_DCB is not set
+CONFIG_RPS=y
+
+#
+# Network testing
+#
+# CONFIG_NET_PKTGEN is not set
+# CONFIG_HAMRADIO is not set
+# CONFIG_CAN is not set
+# CONFIG_IRDA is not set
+CONFIG_BT=y
+CONFIG_BT_L2CAP=y
+# CONFIG_BT_L2CAP_EXT_FEATURES is not set
+CONFIG_BT_SCO=y
+CONFIG_BT_RFCOMM=y
+CONFIG_BT_RFCOMM_TTY=y
+# CONFIG_BT_BNEP is not set
+CONFIG_BT_HIDP=y
+
+#
+# Bluetooth device drivers
+#
+# CONFIG_BT_HCIBTUSB is not set
+# CONFIG_BT_HCIBTSDIO is not set
+# CONFIG_BT_HCIUART is not set
+# CONFIG_BT_HCIBCM203X is not set
+# CONFIG_BT_HCIBPA10X is not set
+# CONFIG_BT_HCIBFUSB is not set
+# CONFIG_BT_HCIVHCI is not set
+# CONFIG_BT_MRVL is not set
+# CONFIG_AF_RXRPC is not set
+CONFIG_FIB_RULES=y
+CONFIG_WIRELESS=y
+CONFIG_WIRELESS_EXT=y
+CONFIG_WEXT_CORE=y
+CONFIG_WEXT_PROC=y
+CONFIG_WEXT_PRIV=y
+# CONFIG_CFG80211 is not set
+CONFIG_WIRELESS_EXT_SYSFS=y
+# CONFIG_LIB80211 is not set
+
+#
+# CFG80211 needs to be enabled for MAC80211
+#
+
+#
+# Some wireless drivers require a rate control algorithm
+#
+# CONFIG_WIMAX is not set
+CONFIG_RFKILL=y
+# CONFIG_RFKILL_PM is not set
+# CONFIG_RFKILL_INPUT is not set
+# CONFIG_NET_9P is not set
+# CONFIG_CAIF is not set
+
+#
+# Device Drivers
+#
+
+#
+# Generic Driver Options
+#
+CONFIG_UEVENT_HELPER_PATH="/sbin/hotplug"
+CONFIG_DEVTMPFS=y
+CONFIG_DEVTMPFS_MOUNT=y
+CONFIG_STANDALONE=y
+CONFIG_PREVENT_FIRMWARE_BUILD=y
+CONFIG_FW_LOADER=y
+CONFIG_FIRMWARE_IN_KERNEL=y
+CONFIG_EXTRA_FIRMWARE=""
+# CONFIG_DEBUG_DRIVER is not set
+# CONFIG_DEBUG_DEVRES is not set
+# CONFIG_SYS_HYPERVISOR is not set
+# CONFIG_CONNECTOR is not set
+# CONFIG_MTD is not set
+# CONFIG_PARPORT is not set
+CONFIG_BLK_DEV=y
+# CONFIG_BLK_DEV_COW_COMMON is not set
+CONFIG_BLK_DEV_LOOP=y
+# CONFIG_BLK_DEV_CRYPTOLOOP is not set
+
+#
+# DRBD disabled because PROC_FS, INET or CONNECTOR not selected
+#
+# CONFIG_BLK_DEV_NBD is not set
+# CONFIG_BLK_DEV_UB is not set
+CONFIG_BLK_DEV_RAM=y
+CONFIG_BLK_DEV_RAM_COUNT=16
+CONFIG_BLK_DEV_RAM_SIZE=16384
+# CONFIG_BLK_DEV_XIP is not set
+# CONFIG_CDROM_PKTCDVD is not set
+# CONFIG_ATA_OVER_ETH is not set
+# CONFIG_MG_DISK is not set
+CONFIG_NEW_SENSORS=y
+CONFIG_OPTICAL=y
+# CONFIG_OPTICAL_ISL29023 is not set
+# CONFIG_OPTICAL_GP2A is not set
+CONFIG_INPUT_CM3663=y
+# CONFIG_ACCEL is not set
+# CONFIG_COMPASS is not set
+# CONFIG_GYRO is not set
+
+#
+# Motion Sensors Support
+#
+# CONFIG_MPU_NONE is not set
+CONFIG_SENSORS_MPU3050=y
+# CONFIG_SENSORS_MPU6000 is not set
+# CONFIG_SENSORS_ACCELEROMETER_NONE is not set
+CONFIG_SENSORS_KXSD9=y
+# CONFIG_SENSORS_COMPASS_NONE is not set
+# CONFIG_SENSORS_YAS529 is not set
+CONFIG_SENSORS_YAS530=y
+# CONFIG_SENSORS_HSCDTD00XX is not set
+CONFIG_SENSORS_PRESSURE_NONE=y
+# CONFIG_SENSORS_BMA085 is not set
+# CONFIG_SENSORS_MPU_DEBUG is not set
+CONFIG_MISC_DEVICES=y
+# CONFIG_AD525X_DPOT is not set
+CONFIG_ANDROID_PMEM=y
+# CONFIG_ICS932S401 is not set
+# CONFIG_ENCLOSURE_SERVICES is not set
+CONFIG_KERNEL_DEBUGGER_CORE=y
+# CONFIG_ISL29003 is not set
+# CONFIG_SENSORS_TSL2550 is not set
+CONFIG_TWL6030_POWER_OFF=y
+# CONFIG_SENSORS_BH1780 is not set
+# CONFIG_SENSORS_AK8975 is not set
+# CONFIG_TWL6040_VIB is not set
+# CONFIG_DS1682 is not set
+# CONFIG_TI_DAC7512 is not set
+CONFIG_UID_STAT=y
+# CONFIG_BMP085 is not set
+# CONFIG_WL127X_RFKILL is not set
+# CONFIG_APANIC is not set
+# CONFIG_LP530AL_GYRO_SENSOR is not set
+CONFIG_PN544_NFC=y
+# CONFIG_C2PORT is not set
+
+#
+# EEPROM support
+#
+# CONFIG_EEPROM_AT24 is not set
+# CONFIG_EEPROM_AT25 is not set
+# CONFIG_EEPROM_LEGACY is not set
+# CONFIG_EEPROM_MAX6875 is not set
+# CONFIG_EEPROM_93CX6 is not set
+# CONFIG_IWMC3200TOP is not set
+CONFIG_HAVE_IDE=y
+# CONFIG_IDE is not set
+
+#
+# SCSI device support
+#
+CONFIG_SCSI_MOD=y
+# CONFIG_RAID_ATTRS is not set
+# CONFIG_SCSI is not set
+# CONFIG_SCSI_DMA is not set
+# CONFIG_SCSI_NETLINK is not set
+# CONFIG_ATA is not set
+# CONFIG_MD is not set
+CONFIG_NETDEVICES=y
+# CONFIG_DUMMY is not set
+# CONFIG_BONDING is not set
+# CONFIG_MACVLAN is not set
+# CONFIG_EQUALIZER is not set
+# CONFIG_TUN is not set
+# CONFIG_VETH is not set
+# CONFIG_NET_ETHERNET is not set
+CONFIG_NETDEV_1000=y
+CONFIG_NETDEV_10000=y
+CONFIG_WLAN=y
+# CONFIG_USB_ZD1201 is not set
+# CONFIG_BCM4329 is not set
+# CONFIG_HOSTAP is not set
+
+#
+# Enable WiMAX (Networking options) to see the WiMAX drivers
+#
+
+#
+# USB Network Adapters
+#
+# CONFIG_USB_CATC is not set
+# CONFIG_USB_KAWETH is not set
+# CONFIG_USB_PEGASUS is not set
+# CONFIG_USB_RTL8150 is not set
+# CONFIG_USB_USBNET is not set
+# CONFIG_USB_HSO is not set
+# CONFIG_USB_CDC_PHONET is not set
+# CONFIG_USB_IPHETH is not set
+# CONFIG_WAN is not set
+# CONFIG_PPP is not set
+# CONFIG_SLIP is not set
+# CONFIG_NETCONSOLE is not set
+# CONFIG_NETPOLL is not set
+# CONFIG_NET_POLL_CONTROLLER is not set
+# CONFIG_ISDN is not set
+# CONFIG_PHONE is not set
+
+#
+# Input device support
+#
+CONFIG_INPUT=y
+# CONFIG_INPUT_FF_MEMLESS is not set
+CONFIG_INPUT_POLLDEV=y
+# CONFIG_INPUT_SPARSEKMAP is not set
+
+#
+# Userland interfaces
+#
+# CONFIG_INPUT_MOUSEDEV is not set
+# CONFIG_INPUT_JOYDEV is not set
+CONFIG_INPUT_EVDEV=y
+# CONFIG_INPUT_EVBUG is not set
+CONFIG_INPUT_KEYRESET=y
+
+#
+# Input Device Drivers
+#
+CONFIG_INPUT_KEYBOARD=y
+# CONFIG_KEYBOARD_ADP5588 is not set
+CONFIG_KEYBOARD_ATKBD=y
+# CONFIG_KEYBOARD_QT2160 is not set
+# CONFIG_KEYBOARD_LKKBD is not set
+# CONFIG_KEYBOARD_GPIO is not set
+# CONFIG_KEYBOARD_TCA6416 is not set
+# CONFIG_KEYBOARD_MATRIX is not set
+# CONFIG_KEYBOARD_LM8323 is not set
+# CONFIG_KEYBOARD_MAX7359 is not set
+# CONFIG_KEYBOARD_NEWTON is not set
+# CONFIG_KEYBOARD_OPENCORES is not set
+# CONFIG_KEYBOARD_STOWAWAY is not set
+# CONFIG_KEYBOARD_SUNKBD is not set
+CONFIG_KEYBOARD_OMAP4=y
+# CONFIG_KEYBOARD_TWL4030 is not set
+# CONFIG_KEYBOARD_XTKBD is not set
+CONFIG_KEYPAD_CYPRESS_TOUCH=y
+# CONFIG_INPUT_MOUSE is not set
+# CONFIG_INPUT_JOYSTICK is not set
+# CONFIG_INPUT_TABLET is not set
+CONFIG_INPUT_TOUCHSCREEN=y
+# CONFIG_TOUCHSCREEN_ADS7846 is not set
+# CONFIG_TOUCHSCREEN_AD7877 is not set
+# CONFIG_TOUCHSCREEN_AD7879_I2C is not set
+# CONFIG_TOUCHSCREEN_AD7879_SPI is not set
+# CONFIG_TOUCHSCREEN_AD7879 is not set
+# CONFIG_TOUCHSCREEN_ATMEL_MAXTOUCH is not set
+# CONFIG_TOUCHSCREEN_DYNAPRO is not set
+# CONFIG_TOUCHSCREEN_HAMPSHIRE is not set
+# CONFIG_TOUCHSCREEN_EETI is not set
+# CONFIG_TOUCHSCREEN_FUJITSU is not set
+# CONFIG_TOUCHSCREEN_GUNZE is not set
+# CONFIG_TOUCHSCREEN_ELO is not set
+# CONFIG_TOUCHSCREEN_WACOM_W8001 is not set
+# CONFIG_TOUCHSCREEN_MCS5000 is not set
+# CONFIG_TOUCHSCREEN_MTOUCH is not set
+# CONFIG_TOUCHSCREEN_INEXIO is not set
+# CONFIG_TOUCHSCREEN_MK712 is not set
+# CONFIG_TOUCHSCREEN_PENMOUNT is not set
+# CONFIG_TOUCHSCREEN_SYNAPTICS_I2C_RMI is not set
+# CONFIG_TOUCHSCREEN_TOUCHRIGHT is not set
+# CONFIG_TOUCHSCREEN_TOUCHWIN is not set
+# CONFIG_TOUCHSCREEN_USB_COMPOSITE is not set
+# CONFIG_TOUCHSCREEN_TOUCHIT213 is not set
+# CONFIG_TOUCHSCREEN_TSC2007 is not set
+# CONFIG_TOUCHSCREEN_W90X900 is not set
+# CONFIG_TOUCHSCREEN_SYNTM12XX is not set
+# CONFIG_TOUCHSCREEN_AT42QT602240 is not set
+# CONFIG_TOUCHSCREEN_TPS6507X is not set
+CONFIG_TOUCHSCREEN_ATMEL_MXT224E=y
+CONFIG_INPUT_MISC=y
+# CONFIG_INPUT_AD714X is not set
+# CONFIG_INPUT_BH1780 is not set
+# CONFIG_INPUT_ATI_REMOTE is not set
+# CONFIG_INPUT_ATI_REMOTE2 is not set
+# CONFIG_INPUT_KEYCHORD is not set
+# CONFIG_INPUT_KEYSPAN_REMOTE is not set
+# CONFIG_INPUT_POWERMATE is not set
+# CONFIG_INPUT_YEALINK is not set
+# CONFIG_INPUT_CM109 is not set
+CONFIG_SAMSUNG_OMAP4_PWRBUTTON=y
+# CONFIG_INPUT_TWL4030_PWRBUTTON is not set
+# CONFIG_INPUT_TWL4030_VIBRA is not set
+# CONFIG_INPUT_TWL6040_VIBRA is not set
+CONFIG_INPUT_UINPUT=y
+CONFIG_INPUT_GPIO=y
+# CONFIG_INPUT_PCF8574 is not set
+# CONFIG_INPUT_GPIO_ROTARY_ENCODER is not set
+# CONFIG_INPUT_SFH7741 is not set
+# CONFIG_INPUT_CMA3000_I2C is not set
+# CONFIG_INPUT_HMC5843 is not set
+# CONFIG_INPUT_BMP085 is not set
+
+#
+# Hardware I/O ports
+#
+CONFIG_SERIO=y
+CONFIG_SERIO_SERPORT=y
+CONFIG_SERIO_LIBPS2=y
+# CONFIG_SERIO_RAW is not set
+# CONFIG_SERIO_ALTERA_PS2 is not set
+# CONFIG_GAMEPORT is not set
+
+#
+# Character devices
+#
+CONFIG_VT=y
+CONFIG_CONSOLE_TRANSLATIONS=y
+CONFIG_VT_CONSOLE=y
+CONFIG_HW_CONSOLE=y
+# CONFIG_VT_HW_CONSOLE_BINDING is not set
+CONFIG_DEVMEM=y
+CONFIG_DEVKMEM=y
+# CONFIG_SERIAL_NONSTANDARD is not set
+# CONFIG_N_GSM is not set
+
+#
+# Serial drivers
+#
+# CONFIG_SERIAL_8250 is not set
+
+#
+# Non-8250 serial port support
+#
+# CONFIG_SERIAL_MAX3100 is not set
+CONFIG_SERIAL_CORE=y
+CONFIG_SERIAL_CORE_CONSOLE=y
+CONFIG_SERIAL_OMAP=y
+CONFIG_SERIAL_OMAP_CONSOLE=y
+# CONFIG_SERIAL_TIMBERDALE is not set
+# CONFIG_SERIAL_ALTERA_JTAGUART is not set
+# CONFIG_SERIAL_ALTERA_UART is not set
+CONFIG_UNIX98_PTYS=y
+# CONFIG_DEVPTS_MULTIPLE_INSTANCES is not set
+# CONFIG_LEGACY_PTYS is not set
+# CONFIG_IPMI_HANDLER is not set
+CONFIG_HW_RANDOM=y
+# CONFIG_HW_RANDOM_TIMERIOMEM is not set
+# CONFIG_R3964 is not set
+# CONFIG_RAW_DRIVER is not set
+# CONFIG_TCG_TPM is not set
+# CONFIG_DCC_TTY is not set
+# CONFIG_RAMOOPS is not set
+CONFIG_I2C=y
+CONFIG_I2C_BOARDINFO=y
+CONFIG_I2C_COMPAT=y
+CONFIG_I2C_CHARDEV=y
+CONFIG_I2C_HELPER_AUTO=y
+
+#
+# I2C Hardware Bus support
+#
+
+#
+# I2C system bus drivers (mostly embedded / system-on-chip)
+#
+# CONFIG_I2C_DESIGNWARE is not set
+# CONFIG_I2C_GPIO is not set
+# CONFIG_I2C_OCORES is not set
+CONFIG_I2C_OMAP=y
+# CONFIG_I2C_PCA_PLATFORM is not set
+# CONFIG_I2C_SIMTEC is not set
+# CONFIG_I2C_XILINX is not set
+
+#
+# External I2C/SMBus adapter drivers
+#
+# CONFIG_I2C_PARPORT_LIGHT is not set
+# CONFIG_I2C_TAOS_EVM is not set
+# CONFIG_I2C_TINY_USB is not set
+
+#
+# Other I2C/SMBus bus drivers
+#
+# CONFIG_I2C_STUB is not set
+# CONFIG_I2C_DEBUG_CORE is not set
+# CONFIG_I2C_DEBUG_ALGO is not set
+# CONFIG_I2C_DEBUG_BUS is not set
+CONFIG_SPI=y
+# CONFIG_SPI_DEBUG is not set
+CONFIG_SPI_MASTER=y
+
+#
+# SPI Master Controller Drivers
+#
+# CONFIG_SPI_BITBANG is not set
+# CONFIG_SPI_GPIO is not set
+CONFIG_SPI_OMAP24XX=y
+# CONFIG_SPI_XILINX is not set
+# CONFIG_SPI_DESIGNWARE is not set
+
+#
+# SPI Protocol Masters
+#
+# CONFIG_SPI_SPIDEV is not set
+# CONFIG_SPI_TLE62X0 is not set
+
+#
+# PPS support
+#
+# CONFIG_PPS is not set
+CONFIG_ARCH_REQUIRE_GPIOLIB=y
+CONFIG_GPIOLIB=y
+# CONFIG_DEBUG_GPIO is not set
+# CONFIG_GPIO_SYSFS is not set
+
+#
+# Memory mapped GPIO expanders:
+#
+# CONFIG_GPIO_IT8761E is not set
+
+#
+# I2C GPIO expanders:
+#
+# CONFIG_GPIO_MAX7300 is not set
+# CONFIG_GPIO_MAX732X is not set
+# CONFIG_GPIO_PCA953X is not set
+# CONFIG_GPIO_PCF857X is not set
+# CONFIG_GPIO_TWL4030 is not set
+# CONFIG_GPIO_ADP5588 is not set
+
+#
+# PCI GPIO expanders:
+#
+
+#
+# SPI GPIO expanders:
+#
+# CONFIG_GPIO_MAX7301 is not set
+# CONFIG_GPIO_MCP23S08 is not set
+# CONFIG_GPIO_MC33880 is not set
+
+#
+# AC97 GPIO expanders:
+#
+
+#
+# MODULbus GPIO expanders:
+#
+# CONFIG_W1 is not set
+CONFIG_POWER_SUPPLY=y
+# CONFIG_POWER_SUPPLY_DEBUG is not set
+# CONFIG_PDA_POWER is not set
+# CONFIG_TEST_POWER is not set
+# CONFIG_BATTERY_DS2760 is not set
+# CONFIG_BATTERY_DS2782 is not set
+CONFIG_TWL6030_BCI_BATTERY=y
+# CONFIG_CHARGER_BQ2415x is not set
+# CONFIG_BATTERY_BQ27x00 is not set
+CONFIG_BATTERY_MAX17040=y
+# CONFIG_BATTERY_MONITOR is not set
+CONFIG_HWMON=y
+# CONFIG_HWMON_VID is not set
+# CONFIG_HWMON_DEBUG_CHIP is not set
+
+#
+# Native drivers
+#
+# CONFIG_SENSORS_AD7414 is not set
+# CONFIG_SENSORS_AD7418 is not set
+# CONFIG_SENSORS_ADCXX is not set
+# CONFIG_SENSORS_ADM1021 is not set
+# CONFIG_SENSORS_ADM1025 is not set
+# CONFIG_SENSORS_ADM1026 is not set
+# CONFIG_SENSORS_ADM1029 is not set
+# CONFIG_SENSORS_ADM1031 is not set
+# CONFIG_SENSORS_ADM9240 is not set
+# CONFIG_SENSORS_ADT7411 is not set
+# CONFIG_SENSORS_ADT7462 is not set
+# CONFIG_SENSORS_ADT7470 is not set
+# CONFIG_SENSORS_ADT7475 is not set
+# CONFIG_SENSORS_ASC7621 is not set
+# CONFIG_SENSORS_ATXP1 is not set
+# CONFIG_SENSORS_DS1621 is not set
+# CONFIG_SENSORS_F71805F is not set
+# CONFIG_SENSORS_F71882FG is not set
+# CONFIG_SENSORS_F75375S is not set
+# CONFIG_SENSORS_G760A is not set
+# CONFIG_SENSORS_GL518SM is not set
+# CONFIG_SENSORS_GL520SM is not set
+# CONFIG_SENSORS_IT87 is not set
+# CONFIG_SENSORS_LM63 is not set
+# CONFIG_SENSORS_LM70 is not set
+# CONFIG_SENSORS_LM73 is not set
+# CONFIG_SENSORS_LM75 is not set
+# CONFIG_SENSORS_LM77 is not set
+# CONFIG_SENSORS_LM78 is not set
+# CONFIG_SENSORS_LM80 is not set
+# CONFIG_SENSORS_LM83 is not set
+# CONFIG_SENSORS_LM85 is not set
+# CONFIG_SENSORS_LM87 is not set
+# CONFIG_SENSORS_LM90 is not set
+# CONFIG_SENSORS_LM92 is not set
+# CONFIG_SENSORS_LM93 is not set
+# CONFIG_SENSORS_LTC4215 is not set
+# CONFIG_SENSORS_LTC4245 is not set
+# CONFIG_SENSORS_LM95241 is not set
+# CONFIG_SENSORS_MAX1111 is not set
+# CONFIG_SENSORS_MAX1619 is not set
+# CONFIG_SENSORS_MAX6650 is not set
+# CONFIG_SENSORS_PC87360 is not set
+# CONFIG_SENSORS_PC87427 is not set
+# CONFIG_SENSORS_PCF8591 is not set
+# CONFIG_SENSORS_SHT15 is not set
+# CONFIG_SENSORS_DME1737 is not set
+# CONFIG_SENSORS_EMC1403 is not set
+# CONFIG_SENSORS_SMSC47M1 is not set
+# CONFIG_SENSORS_SMSC47M192 is not set
+# CONFIG_SENSORS_SMSC47B397 is not set
+# CONFIG_SENSORS_ADS7828 is not set
+# CONFIG_SENSORS_ADS7871 is not set
+# CONFIG_SENSORS_AMC6821 is not set
+# CONFIG_SENSORS_THMC50 is not set
+# CONFIG_SENSORS_TMP102 is not set
+# CONFIG_SENSORS_TMP401 is not set
+# CONFIG_SENSORS_TMP421 is not set
+# CONFIG_SENSORS_VT1211 is not set
+# CONFIG_SENSORS_W83781D is not set
+# CONFIG_SENSORS_W83791D is not set
+# CONFIG_SENSORS_W83792D is not set
+# CONFIG_SENSORS_W83793 is not set
+# CONFIG_SENSORS_W83L785TS is not set
+# CONFIG_SENSORS_W83L786NG is not set
+# CONFIG_SENSORS_W83627HF is not set
+# CONFIG_SENSORS_W83627EHF is not set
+# CONFIG_SENSORS_LIS3_SPI is not set
+# CONFIG_SENSORS_LIS3_I2C is not set
+# CONFIG_THERMAL is not set
+CONFIG_WATCHDOG=y
+# CONFIG_WATCHDOG_NOWAYOUT is not set
+
+#
+# Watchdog Device Drivers
+#
+# CONFIG_SOFT_WATCHDOG is not set
+# CONFIG_MPCORE_WATCHDOG is not set
+CONFIG_OMAP_WATCHDOG=y
+# CONFIG_TWL4030_WATCHDOG is not set
+# CONFIG_MAX63XX_WATCHDOG is not set
+
+#
+# USB-based Watchdog Cards
+#
+# CONFIG_USBPCWATCHDOG is not set
+CONFIG_SSB_POSSIBLE=y
+
+#
+# Sonics Silicon Backplane
+#
+# CONFIG_SSB is not set
+CONFIG_MFD_SUPPORT=y
+CONFIG_MFD_CORE=y
+# CONFIG_MFD_88PM860X is not set
+# CONFIG_MFD_SM501 is not set
+# CONFIG_MFD_ASIC3 is not set
+# CONFIG_HTC_EGPIO is not set
+# CONFIG_HTC_PASIC3 is not set
+# CONFIG_HTC_I2CPLD is not set
+# CONFIG_TPS65010 is not set
+# CONFIG_TPS6507X is not set
+CONFIG_TWL4030_CORE=y
+# CONFIG_TWL4030_POWER is not set
+# CONFIG_TWL4030_CODEC is not set
+# CONFIG_MFD_TC35892 is not set
+# CONFIG_TWL6030_PWM is not set
+CONFIG_TWL6030_GPADC=y
+CONFIG_TWL6040_CODEC=y
+# CONFIG_MFD_TMIO is not set
+# CONFIG_MFD_T7L66XB is not set
+# CONFIG_MFD_TC6387XB is not set
+# CONFIG_MFD_TC6393XB is not set
+# CONFIG_PMIC_DA903X is not set
+# CONFIG_PMIC_ADP5520 is not set
+# CONFIG_MFD_MAX8925 is not set
+# CONFIG_MFD_WM8400 is not set
+# CONFIG_MFD_WM831X is not set
+# CONFIG_MFD_WM8350_I2C is not set
+# CONFIG_MFD_WM8994 is not set
+# CONFIG_MFD_PCF50633 is not set
+# CONFIG_MFD_MC13783 is not set
+# CONFIG_ABX500_CORE is not set
+# CONFIG_EZX_PCAP is not set
+# CONFIG_AB8500_CORE is not set
+CONFIG_REGULATOR=y
+# CONFIG_REGULATOR_DEBUG is not set
+# CONFIG_REGULATOR_DUMMY is not set
+# CONFIG_REGULATOR_FIXED_VOLTAGE is not set
+# CONFIG_REGULATOR_VIRTUAL_CONSUMER is not set
+# CONFIG_REGULATOR_USERSPACE_CONSUMER is not set
+# CONFIG_REGULATOR_BQ24022 is not set
+# CONFIG_REGULATOR_MAX1586 is not set
+# CONFIG_REGULATOR_MAX8649 is not set
+# CONFIG_REGULATOR_MAX8660 is not set
+CONFIG_REGULATOR_TWL4030=y
+# CONFIG_REGULATOR_LP3971 is not set
+# CONFIG_REGULATOR_TPS65023 is not set
+# CONFIG_REGULATOR_TPS6507X is not set
+CONFIG_MEDIA_SUPPORT=y
+
+#
+# Multimedia core support
+#
+CONFIG_VIDEO_DEV=y
+CONFIG_VIDEO_V4L2_COMMON=y
+# CONFIG_VIDEO_ALLOW_V4L1 is not set
+CONFIG_VIDEO_V4L1_COMPAT=y
+# CONFIG_DVB_CORE is not set
+CONFIG_VIDEO_MEDIA=y
+
+#
+# Multimedia drivers
+#
+# CONFIG_IR_CORE is not set
+# CONFIG_MEDIA_ATTACH is not set
+CONFIG_MEDIA_TUNER=y
+# CONFIG_MEDIA_TUNER_CUSTOMISE is not set
+CONFIG_MEDIA_TUNER_SIMPLE=y
+CONFIG_MEDIA_TUNER_TDA8290=y
+CONFIG_MEDIA_TUNER_TDA9887=y
+CONFIG_MEDIA_TUNER_TEA5761=y
+CONFIG_MEDIA_TUNER_TEA5767=y
+CONFIG_MEDIA_TUNER_MT20XX=y
+CONFIG_MEDIA_TUNER_XC2028=y
+CONFIG_MEDIA_TUNER_XC5000=y
+CONFIG_MEDIA_TUNER_MC44S803=y
+CONFIG_VIDEO_V4L2=y
+CONFIG_VIDEOBUF_GEN=y
+CONFIG_VIDEOBUF_DMA_CONTIG=y
+CONFIG_VIDEO_CAPTURE_DRIVERS=y
+# CONFIG_VIDEO_ADV_DEBUG is not set
+# CONFIG_VIDEO_FIXED_MINOR_RANGES is not set
+CONFIG_VIDEO_HELPER_CHIPS_AUTO=y
+# CONFIG_VIDEO_VIVI is not set
+CONFIG_VIDEO_OMAP2_VOUT=y
+# CONFIG_VIDEO_MHL_V1 is not set
+CONFIG_VIDEO_OMAP_GFX=m
+# CONFIG_VIDEO_SAA5246A is not set
+# CONFIG_VIDEO_SAA5249 is not set
+# CONFIG_SOC_CAMERA is not set
+CONFIG_V4L_USB_DRIVERS=y
+# CONFIG_USB_VIDEO_CLASS is not set
+CONFIG_USB_VIDEO_CLASS_INPUT_EVDEV=y
+CONFIG_USB_GSPCA=m
+# CONFIG_USB_M5602 is not set
+# CONFIG_USB_STV06XX is not set
+# CONFIG_USB_GL860 is not set
+# CONFIG_USB_GSPCA_BENQ is not set
+# CONFIG_USB_GSPCA_CONEX is not set
+# CONFIG_USB_GSPCA_CPIA1 is not set
+# CONFIG_USB_GSPCA_ETOMS is not set
+# CONFIG_USB_GSPCA_FINEPIX is not set
+# CONFIG_USB_GSPCA_JEILINJ is not set
+# CONFIG_USB_GSPCA_MARS is not set
+# CONFIG_USB_GSPCA_MR97310A is not set
+# CONFIG_USB_GSPCA_OV519 is not set
+# CONFIG_USB_GSPCA_OV534 is not set
+# CONFIG_USB_GSPCA_OV534_9 is not set
+# CONFIG_USB_GSPCA_PAC207 is not set
+# CONFIG_USB_GSPCA_PAC7302 is not set
+# CONFIG_USB_GSPCA_PAC7311 is not set
+# CONFIG_USB_GSPCA_SN9C2028 is not set
+# CONFIG_USB_GSPCA_SN9C20X is not set
+# CONFIG_USB_GSPCA_SONIXB is not set
+# CONFIG_USB_GSPCA_SONIXJ is not set
+# CONFIG_USB_GSPCA_SPCA500 is not set
+# CONFIG_USB_GSPCA_SPCA501 is not set
+# CONFIG_USB_GSPCA_SPCA505 is not set
+# CONFIG_USB_GSPCA_SPCA506 is not set
+# CONFIG_USB_GSPCA_SPCA508 is not set
+# CONFIG_USB_GSPCA_SPCA561 is not set
+# CONFIG_USB_GSPCA_SQ905 is not set
+# CONFIG_USB_GSPCA_SQ905C is not set
+# CONFIG_USB_GSPCA_STK014 is not set
+# CONFIG_USB_GSPCA_STV0680 is not set
+# CONFIG_USB_GSPCA_SUNPLUS is not set
+# CONFIG_USB_GSPCA_T613 is not set
+# CONFIG_USB_GSPCA_TV8532 is not set
+# CONFIG_USB_GSPCA_VC032X is not set
+# CONFIG_USB_GSPCA_ZC3XX is not set
+# CONFIG_VIDEO_PVRUSB2 is not set
+# CONFIG_VIDEO_HDPVR is not set
+# CONFIG_VIDEO_EM28XX is not set
+# CONFIG_VIDEO_CX231XX is not set
+# CONFIG_VIDEO_USBVISION is not set
+# CONFIG_USB_ET61X251 is not set
+# CONFIG_USB_SN9C102 is not set
+# CONFIG_VIDEO_CAM_PMIC is not set
+# CONFIG_VIDEO_M5MO is not set
+# CONFIG_USB_ZC0301 is not set
+# CONFIG_USB_ZR364XX is not set
+# CONFIG_USB_STKWEBCAM is not set
+# CONFIG_USB_S2255 is not set
+# CONFIG_V4L_MEM2MEM_DRIVERS is not set
+# CONFIG_RADIO_ADAPTERS is not set
+# CONFIG_DAB is not set
+CONFIG_DMM_OMAP=y
+CONFIG_TILER_OMAP=y
+
+#
+# Graphics support
+#
+CONFIG_SGX540=y
+# CONFIG_VIRTUAL_DISPLAY_SUPPORT is not set
+# CONFIG_SGX_REV110 is not set
+CONFIG_SGX_REV120=y
+CONFIG_SGX_540_BUILD_RELEASE=y
+# CONFIG_SGX_540_BUILD_DEBUG is not set
+# CONFIG_SGX_PDUMP is not set
+# CONFIG_VGASTATE is not set
+# CONFIG_VIDEO_OUTPUT_CONTROL is not set
+CONFIG_FB=y
+# CONFIG_FIRMWARE_EDID is not set
+# CONFIG_FB_DDC is not set
+# CONFIG_FB_BOOT_VESA_SUPPORT is not set
+CONFIG_FB_CFB_FILLRECT=y
+CONFIG_FB_CFB_COPYAREA=y
+CONFIG_FB_CFB_IMAGEBLIT=y
+# CONFIG_FB_CFB_REV_PIXELS_IN_BYTE is not set
+# CONFIG_FB_SYS_FILLRECT is not set
+# CONFIG_FB_SYS_COPYAREA is not set
+# CONFIG_FB_SYS_IMAGEBLIT is not set
+# CONFIG_FB_FOREIGN_ENDIAN is not set
+# CONFIG_FB_SYS_FOPS is not set
+# CONFIG_FB_SVGALIB is not set
+# CONFIG_FB_MACMODES is not set
+# CONFIG_FB_BACKLIGHT is not set
+# CONFIG_FB_MODE_HELPERS is not set
+# CONFIG_FB_TILEBLITTING is not set
+
+#
+# Frame buffer hardware drivers
+#
+# CONFIG_FB_S1D13XXX is not set
+# CONFIG_FB_TMIO is not set
+# CONFIG_FB_VIRTUAL is not set
+# CONFIG_FB_METRONOME is not set
+# CONFIG_FB_MB862XX is not set
+# CONFIG_FB_BROADSHEET is not set
+CONFIG_FB_OMAP_BOOTLOADER_INIT=y
+CONFIG_OMAP2_VRAM=y
+CONFIG_OMAP2_DSS=y
+CONFIG_OMAP2_VRAM_SIZE=4
+CONFIG_OMAP2_DSS_DEBUG_SUPPORT=y
+# CONFIG_OMAP2_DSS_COLLECT_IRQ_STATS is not set
+CONFIG_OMAP2_DSS_DPI=y
+# CONFIG_OMAP2_DSS_RFBI is not set
+# CONFIG_OMAP2_DSS_VENC is not set
+CONFIG_OMAP2_DSS_HDMI=y
+# CONFIG_OMAP2_DSS_DSI is not set
+CONFIG_OMAP2_DSS_FAKE_VSYNC=y
+CONFIG_OMAP2_DSS_MIN_FCK_PER_PCK=0
+CONFIG_FB_OMAP2=y
+CONFIG_FB_OMAP2_DEBUG_SUPPORT=y
+CONFIG_FB_OMAP2_NUM_FBS=2
+
+#
+# OMAP2/3 Display Device Drivers
+#
+# CONFIG_PANEL_GENERIC is not set
+# CONFIG_PANEL_SAMSUNG_LTN121AT is not set
+# CONFIG_PANEL_SAMSUNG_D10E50T6332 is not set
+# CONFIG_PANEL_SHARP_LS037V7DW01 is not set
+# CONFIG_PANEL_SHARP_LQ043T1DG01 is not set
+# CONFIG_PANEL_PICO_DLP is not set
+# CONFIG_PANEL_NEC_NL8048HL11_01B is not set
+# CONFIG_PANEL_TOPPOLY_TDO35S is not set
+# CONFIG_PANEL_TPO_TD043MTEA1 is not set
+# CONFIG_PANEL_AMS353 is not set
+CONFIG_PANEL_LD9040=y
+CONFIG_BACKLIGHT_LCD_SUPPORT=y
+CONFIG_LCD_CLASS_DEVICE=y
+# CONFIG_LCD_L4F00242T03 is not set
+# CONFIG_LCD_LMS283GF05 is not set
+# CONFIG_LCD_LTV350QV is not set
+# CONFIG_LCD_TDO24M is not set
+# CONFIG_LCD_VGG2432A4 is not set
+# CONFIG_LCD_PLATFORM is not set
+# CONFIG_LCD_S6E63M0 is not set
+CONFIG_BACKLIGHT_CLASS_DEVICE=y
+# CONFIG_BACKLIGHT_GENERIC is not set
+# CONFIG_BACKLIGHT_ADP8860 is not set
+
+#
+# Display device support
+#
+# CONFIG_DISPLAY_SUPPORT is not set
+
+#
+# Console display driver support
+#
+# CONFIG_VGA_CONSOLE is not set
+CONFIG_DUMMY_CONSOLE=y
+CONFIG_FRAMEBUFFER_CONSOLE=y
+# CONFIG_FRAMEBUFFER_CONSOLE_DETECT_PRIMARY is not set
+# CONFIG_FRAMEBUFFER_CONSOLE_ROTATION is not set
+CONFIG_FONTS=y
+CONFIG_FONT_8x8=y
+CONFIG_FONT_8x16=y
+# CONFIG_FONT_6x11 is not set
+# CONFIG_FONT_7x14 is not set
+# CONFIG_FONT_PEARL_8x8 is not set
+# CONFIG_FONT_ACORN_8x8 is not set
+# CONFIG_FONT_MINI_4x6 is not set
+# CONFIG_FONT_SUN8x16 is not set
+# CONFIG_FONT_SUN12x22 is not set
+# CONFIG_FONT_10x18 is not set
+CONFIG_LOGO=y
+CONFIG_LOGO_LINUX_MONO=y
+CONFIG_LOGO_LINUX_VGA16=y
+CONFIG_LOGO_LINUX_CLUT224=y
+CONFIG_SOUND=y
+# CONFIG_SOUND_OSS_CORE is not set
+CONFIG_SND=y
+CONFIG_SND_TIMER=y
+CONFIG_SND_PCM=y
+CONFIG_SND_JACK=y
+# CONFIG_SND_SEQUENCER is not set
+# CONFIG_SND_MIXER_OSS is not set
+# CONFIG_SND_PCM_OSS is not set
+# CONFIG_SND_HRTIMER is not set
+CONFIG_SND_DYNAMIC_MINORS=y
+CONFIG_SND_SUPPORT_OLD_API=y
+CONFIG_SND_VERBOSE_PROCFS=y
+# CONFIG_SND_VERBOSE_PRINTK is not set
+# CONFIG_SND_DEBUG is not set
+# CONFIG_SND_RAWMIDI_SEQ is not set
+# CONFIG_SND_OPL3_LIB_SEQ is not set
+# CONFIG_SND_OPL4_LIB_SEQ is not set
+# CONFIG_SND_SBAWE_SEQ is not set
+# CONFIG_SND_EMU10K1_SEQ is not set
+CONFIG_SND_DRIVERS=y
+# CONFIG_SND_DUMMY is not set
+# CONFIG_SND_MTPAV is not set
+# CONFIG_SND_SERIAL_U16550 is not set
+# CONFIG_SND_MPU401 is not set
+CONFIG_SND_ARM=y
+CONFIG_SND_SPI=y
+CONFIG_SND_USB=y
+# CONFIG_SND_USB_AUDIO is not set
+# CONFIG_SND_USB_UA101 is not set
+# CONFIG_SND_USB_CAIAQ is not set
+CONFIG_SND_SOC=y
+CONFIG_SND_OMAP_SOC=y
+CONFIG_SND_OMAP_SOC_ABE_DSP=y
+CONFIG_SND_OMAP_SOC_MCBSP=y
+CONFIG_SND_OMAP_SOC_MCPDM=y
+CONFIG_SND_OMAP_SOC_ABE=y
+CONFIG_SND_OMAP_SOC_DMIC=y
+CONFIG_SND_OMAP_SOC_SDP4430=y
+CONFIG_SND_OMAP_SOC_HDMI=y
+CONFIG_SND_SOC_I2C_AND_SPI=y
+# CONFIG_SND_SOC_ALL_CODECS is not set
+CONFIG_SND_SOC_DMIC=y
+CONFIG_SND_SOC_TWL6040=y
+# CONFIG_SND_SOC_MIC_A1026 is not set
+# CONFIG_SOUND_PRIME is not set
+# CONFIG_HID_SUPPORT is not set
+CONFIG_HID=y
+CONFIG_USB_SUPPORT=y
+CONFIG_USB_ARCH_HAS_HCD=y
+CONFIG_USB_ARCH_HAS_OHCI=y
+CONFIG_USB_ARCH_HAS_EHCI=y
+CONFIG_USB=y
+# CONFIG_USB_DEBUG is not set
+# CONFIG_USB_ANNOUNCE_NEW_DEVICES is not set
+
+#
+# Miscellaneous USB options
+#
+# CONFIG_USB_DEVICEFS is not set
+CONFIG_USB_DEVICE_CLASS=y
+# CONFIG_USB_DYNAMIC_MINORS is not set
+CONFIG_USB_SUSPEND=y
+CONFIG_USB_OTG=y
+# CONFIG_USB_OTG_WHITELIST is not set
+# CONFIG_USB_OTG_BLACKLIST_HUB is not set
+# CONFIG_USB_MON is not set
+# CONFIG_USB_WUSB is not set
+# CONFIG_USB_WUSB_CBAF is not set
+
+#
+# USB Host Controller Drivers
+#
+# CONFIG_USB_C67X00_HCD is not set
+# CONFIG_USB_EHCI_HCD is not set
+# CONFIG_USB_OXU210HP_HCD is not set
+# CONFIG_USB_ISP116X_HCD is not set
+# CONFIG_USB_ISP1760_HCD is not set
+# CONFIG_USB_ISP1362_HCD is not set
+CONFIG_USB_OHCI_HCD=y
+CONFIG_USB_OHCI_HCD_OMAP3=y
+# CONFIG_USB_OHCI_BIG_ENDIAN_DESC is not set
+# CONFIG_USB_OHCI_BIG_ENDIAN_MMIO is not set
+CONFIG_USB_OHCI_LITTLE_ENDIAN=y
+# CONFIG_USB_SL811_HCD is not set
+# CONFIG_USB_R8A66597_HCD is not set
+# CONFIG_USB_HWA_HCD is not set
+CONFIG_USB_MUSB_HDRC=y
+CONFIG_USB_MUSB_SOC=y
+
+#
+# OMAP 44xx high speed USB support
+#
+# CONFIG_USB_MUSB_HOST is not set
+# CONFIG_USB_MUSB_PERIPHERAL is not set
+CONFIG_USB_MUSB_OTG=y
+CONFIG_USB_GADGET_MUSB_HDRC=y
+CONFIG_USB_MUSB_HDRC_HCD=y
+# CONFIG_MUSB_PIO_ONLY is not set
+CONFIG_USB_INVENTRA_DMA=y
+# CONFIG_USB_TI_CPPI_DMA is not set
+# CONFIG_USB_MUSB_DEBUG is not set
+
+#
+# USB Device Class drivers
+#
+# CONFIG_USB_ACM is not set
+# CONFIG_USB_PRINTER is not set
+# CONFIG_USB_WDM is not set
+# CONFIG_USB_TMC is not set
+
+#
+# NOTE: USB_STORAGE depends on SCSI but BLK_DEV_SD may
+#
+
+#
+# also be needed; see USB_STORAGE Help for more info
+#
+# CONFIG_USB_LIBUSUAL is not set
+
+#
+# USB Imaging devices
+#
+# CONFIG_USB_MDC800 is not set
+
+#
+# USB port drivers
+#
+# CONFIG_USB_SERIAL is not set
+
+#
+# USB Miscellaneous drivers
+#
+# CONFIG_USB_EMI62 is not set
+# CONFIG_USB_EMI26 is not set
+# CONFIG_USB_ADUTUX is not set
+# CONFIG_USB_SEVSEG is not set
+# CONFIG_USB_RIO500 is not set
+# CONFIG_USB_LEGOTOWER is not set
+# CONFIG_USB_LCD is not set
+# CONFIG_USB_LED is not set
+# CONFIG_USB_CYPRESS_CY7C63 is not set
+# CONFIG_USB_CYTHERM is not set
+# CONFIG_USB_IDMOUSE is not set
+# CONFIG_USB_FTDI_ELAN is not set
+# CONFIG_USB_APPLEDISPLAY is not set
+# CONFIG_USB_SISUSBVGA is not set
+# CONFIG_USB_LD is not set
+# CONFIG_USB_TRANCEVIBRATOR is not set
+# CONFIG_USB_IOWARRIOR is not set
+# CONFIG_USB_TEST is not set
+# CONFIG_USB_ISIGHTFW is not set
+CONFIG_USB_GADGET=y
+# CONFIG_SAMSUNG_DEVGURU_USB is not set
+# CONFIG_USB_GADGET_DEBUG is not set
+# CONFIG_USB_GADGET_DEBUG_FILES is not set
+# CONFIG_USB_GADGET_DEBUG_FS is not set
+CONFIG_USB_GADGET_VBUS_DRAW=2
+CONFIG_USB_GADGET_SELECTED=y
+# CONFIG_USB_GADGET_AT91 is not set
+# CONFIG_USB_GADGET_ATMEL_USBA is not set
+# CONFIG_USB_GADGET_FSL_USB2 is not set
+# CONFIG_USB_GADGET_LH7A40X is not set
+# CONFIG_USB_GADGET_OMAP is not set
+# CONFIG_USB_GADGET_PXA25X is not set
+# CONFIG_USB_GADGET_R8A66597 is not set
+# CONFIG_USB_GADGET_PXA27X is not set
+# CONFIG_USB_GADGET_S3C_HSOTG is not set
+# CONFIG_USB_GADGET_IMX is not set
+# CONFIG_USB_GADGET_S3C2410 is not set
+# CONFIG_USB_GADGET_M66592 is not set
+# CONFIG_USB_GADGET_AMD5536UDC is not set
+# CONFIG_USB_GADGET_FSL_QE is not set
+# CONFIG_USB_GADGET_CI13XXX is not set
+# CONFIG_USB_GADGET_NET2280 is not set
+# CONFIG_USB_GADGET_GOKU is not set
+# CONFIG_USB_GADGET_LANGWELL is not set
+# CONFIG_USB_GADGET_DUMMY_HCD is not set
+CONFIG_USB_GADGET_DUALSPEED=y
+# CONFIG_USB_ZERO is not set
+# CONFIG_USB_AUDIO is not set
+# CONFIG_USB_ETH is not set
+# CONFIG_USB_GADGETFS is not set
+# CONFIG_USB_FUNCTIONFS is not set
+# CONFIG_USB_FILE_STORAGE is not set
+# CONFIG_USB_MASS_STORAGE is not set
+# CONFIG_USB_G_SERIAL is not set
+# CONFIG_USB_MIDI_GADGET is not set
+# CONFIG_USB_G_PRINTER is not set
+CONFIG_USB_ANDROID=y
+CONFIG_USB_ANDROID_ACM=y
+CONFIG_USB_DUN_SUPPORT=y
+CONFIG_USB_ANDROID_ADB=y
+CONFIG_USB_ANDROID_MASS_STORAGE=y
+# CONFIG_USB_ANDROID_MTP is not set
+CONFIG_USB_ANDROID_RNDIS=y
+# CONFIG_USB_ANDROID_RNDIS_WCEIS is not set
+CONFIG_USB_ANDROID_SAMSUNG_COMPOSITE=y
+# CONFIG_USB_ANDROID_SAMSUNG_ESCAPE is not set
+# CONFIG_CONFIG_USB_ANDROID_SAMSUNG_RNDIS_WITH_MS_COMPOSITE is not set
+CONFIG_USB_ANDROID_SAMSUNG_MTP=y
+# CONFIG_USB_CDC_COMPOSITE is not set
+# CONFIG_USB_G_NOKIA is not set
+# CONFIG_USB_G_MULTI is not set
+# CONFIG_USB_G_HID is not set
+# CONFIG_USB_G_DBGP is not set
+# CONFIG_USB_G_WEBCAM is not set
+
+#
+# OTG and related infrastructure
+#
+CONFIG_USB_OTG_UTILS=y
+# CONFIG_USB_GPIO_VBUS is not set
+# CONFIG_USB_ULPI is not set
+# CONFIG_TWL4030_USB is not set
+CONFIG_TWL6030_USB=y
+# CONFIG_NOP_USB_XCEIV is not set
+CONFIG_FSA9480_MICROUSB=y
+CONFIG_MMC=y
+# CONFIG_MMC_DEBUG is not set
+CONFIG_MMC_UNSAFE_RESUME=y
+CONFIG_MMC_EMBEDDED_SDIO=y
+# CONFIG_MMC_PARANOID_SD_INIT is not set
+
+#
+# MMC/SD/SDIO Card Drivers
+#
+CONFIG_MMC_BLOCK=y
+CONFIG_MMC_BLOCK_BOUNCE=y
+# CONFIG_MMC_BLOCK_DEFERRED_RESUME is not set
+# CONFIG_SDIO_UART is not set
+# CONFIG_MMC_TEST is not set
+
+#
+# MMC/SD/SDIO Host Controller Drivers
+#
+# CONFIG_MMC_SDHCI is not set
+# CONFIG_MMC_OMAP is not set
+CONFIG_MMC_OMAP_HS=y
+# CONFIG_MEMSTICK is not set
+CONFIG_NEW_LEDS=y
+CONFIG_LEDS_CLASS=y
+
+#
+# LED drivers
+#
+# CONFIG_LEDS_PCA9532 is not set
+# CONFIG_LEDS_GPIO is not set
+# CONFIG_LEDS_LP3944 is not set
+# CONFIG_LEDS_PCA955X is not set
+# CONFIG_LEDS_DAC124S085 is not set
+# CONFIG_LEDS_REGULATOR is not set
+# CONFIG_LEDS_BD2802 is not set
+# CONFIG_LEDS_LT3593 is not set
+# CONFIG_LEDS_OMAP4430_SDP_DISPLAY is not set
+# CONFIG_LEDS_OMAP4430_SDP_KEYPAD is not set
+# CONFIG_LEDS_TRIGGERS is not set
+CONFIG_SWITCH=y
+# CONFIG_SWITCH_GPIO is not set
+CONFIG_EAR_MIC_ADC=y
+# CONFIG_INPUT_EAR_KEY is not set
+# CONFIG_EXTRA_DOCK_SPEAKER is not set
+# CONFIG_ACCESSIBILITY is not set
+CONFIG_RTC_LIB=y
+CONFIG_RTC_CLASS=y
+CONFIG_RTC_HCTOSYS=y
+CONFIG_RTC_HCTOSYS_DEVICE="rtc0"
+# CONFIG_RTC_DEBUG is not set
+
+#
+# RTC interfaces
+#
+CONFIG_RTC_INTF_SYSFS=y
+CONFIG_RTC_INTF_PROC=y
+CONFIG_RTC_INTF_DEV=y
+# CONFIG_RTC_INTF_DEV_UIE_EMUL is not set
+CONFIG_RTC_INTF_ALARM=y
+CONFIG_RTC_INTF_ALARM_DEV=y
+# CONFIG_RTC_DRV_TEST is not set
+
+#
+# I2C RTC drivers
+#
+# CONFIG_RTC_DRV_DS1307 is not set
+# CONFIG_RTC_DRV_DS1374 is not set
+# CONFIG_RTC_DRV_DS1672 is not set
+# CONFIG_RTC_DRV_MAX6900 is not set
+# CONFIG_RTC_DRV_RS5C372 is not set
+# CONFIG_RTC_DRV_ISL1208 is not set
+# CONFIG_RTC_DRV_X1205 is not set
+# CONFIG_RTC_DRV_PCF8563 is not set
+# CONFIG_RTC_DRV_PCF8583 is not set
+# CONFIG_RTC_DRV_M41T80 is not set
+# CONFIG_RTC_DRV_BQ32K is not set
+CONFIG_RTC_DRV_TWL4030=y
+# CONFIG_RTC_DRV_S35390A is not set
+# CONFIG_RTC_DRV_FM3130 is not set
+# CONFIG_RTC_DRV_RX8581 is not set
+# CONFIG_RTC_DRV_RX8025 is not set
+
+#
+# SPI RTC drivers
+#
+# CONFIG_RTC_DRV_M41T94 is not set
+# CONFIG_RTC_DRV_DS1305 is not set
+# CONFIG_RTC_DRV_DS1390 is not set
+# CONFIG_RTC_DRV_MAX6902 is not set
+# CONFIG_RTC_DRV_R9701 is not set
+# CONFIG_RTC_DRV_RS5C348 is not set
+# CONFIG_RTC_DRV_DS3234 is not set
+# CONFIG_RTC_DRV_PCF2123 is not set
+
+#
+# Platform RTC drivers
+#
+# CONFIG_RTC_DRV_CMOS is not set
+# CONFIG_RTC_DRV_DS1286 is not set
+# CONFIG_RTC_DRV_DS1511 is not set
+# CONFIG_RTC_DRV_DS1553 is not set
+# CONFIG_RTC_DRV_DS1742 is not set
+# CONFIG_RTC_DRV_STK17TA8 is not set
+# CONFIG_RTC_DRV_M48T86 is not set
+# CONFIG_RTC_DRV_M48T35 is not set
+# CONFIG_RTC_DRV_M48T59 is not set
+# CONFIG_RTC_DRV_MSM6242 is not set
+# CONFIG_RTC_DRV_BQ4802 is not set
+# CONFIG_RTC_DRV_RP5C01 is not set
+# CONFIG_RTC_DRV_V3020 is not set
+
+#
+# on-CPU RTC drivers
+#
+# CONFIG_DMADEVICES is not set
+# CONFIG_AUXDISPLAY is not set
+# CONFIG_UIO is not set
+CONFIG_STAGING=y
+# CONFIG_STAGING_EXCLUDE_BUILD is not set
+# CONFIG_VIDEO_TM6000 is not set
+# CONFIG_USB_IP_COMMON is not set
+# CONFIG_PRISM2_USB is not set
+# CONFIG_ECHO is not set
+# CONFIG_RT2870 is not set
+# CONFIG_COMEDI is not set
+# CONFIG_ASUS_OLED is not set
+# CONFIG_TRANZPORT is not set
+
+#
+# Android
+#
+CONFIG_ANDROID=y
+CONFIG_ANDROID_BINDER_IPC=y
+CONFIG_ANDROID_LOGGER=y
+CONFIG_ANDROID_RAM_CONSOLE=y
+CONFIG_ANDROID_RAM_CONSOLE_ENABLE_VERBOSE=y
+# CONFIG_ANDROID_RAM_CONSOLE_ERROR_CORRECTION is not set
+# CONFIG_ANDROID_RAM_CONSOLE_EARLY_INIT is not set
+CONFIG_ANDROID_TIMED_OUTPUT=y
+CONFIG_ANDROID_TIMED_GPIO=y
+CONFIG_ANDROID_LOW_MEMORY_KILLER=y
+# CONFIG_POHMELFS is not set
+# CONFIG_LINE6_USB is not set
+# CONFIG_VT6656 is not set
+# CONFIG_FB_UDL is not set
+
+#
+# RAR Register Driver
+#
+CONFIG_IIO=y
+# CONFIG_IIO_RING_BUFFER is not set
+# CONFIG_IIO_TRIGGER is not set
+
+#
+# Accelerometers
+#
+# CONFIG_ADIS16209 is not set
+# CONFIG_ADIS16220 is not set
+# CONFIG_ADIS16240 is not set
+# CONFIG_KXSD9 is not set
+# CONFIG_LIS3L02DQ is not set
+
+#
+# Analog to digital convertors
+#
+# CONFIG_MAX1363 is not set
+
+#
+# Digital gyroscope sensors
+#
+# CONFIG_ADIS16260 is not set
+
+#
+# Inertial measurement units
+#
+# CONFIG_ADIS16300 is not set
+# CONFIG_ADIS16350 is not set
+# CONFIG_ADIS16400 is not set
+
+#
+# Light sensors
+#
+# CONFIG_SENSORS_TSL2563 is not set
+
+#
+# Magnetometer sensors
+#
+# CONFIG_SENSORS_HMC5843 is not set
+
+#
+# Triggers - standalone
+#
+# CONFIG_RAMZSWAP is not set
+# CONFIG_BATMAN_ADV is not set
+# CONFIG_FB_SM7XX is not set
+
+#
+# Texas Instruments shared transport line discipline
+#
+CONFIG_TI_ST=m
+CONFIG_ST_BT=m
+CONFIG_ST_FM=m
+CONFIG_ST_GPS=m
+# CONFIG_ADIS16255 is not set
+CONFIG_OMAP_HSI=y
+CONFIG_OMAP_HSI_DEVICE=y
+# CONFIG_OMAP_SSI_DEVICE is not set
+CONFIG_OMAP_HSI_CHAR=m
+CONFIG_OMAP_HSI_PROTOCOL=y
+CONFIG_Sys_Link=y
+CONFIG_SYSLINK_PROC=y
+CONFIG_SYSLINK_PROC4430=y
+CONFIG_DUCATI_BASEIMAGE_PHYS_ADDR=0x9CF00000
+CONFIG_SYSLINK_DUCATI_PM=y
+CONFIG_SYSLINK_IPU_SELF_HIBERNATION=y
+# CONFIG_DUCATI_WATCH_DOG is not set
+# CONFIG_SYSLINK_IPU_PM_TRACES is not set
+CONFIG_OMAP_DEVICE_HANDLER=y
+CONFIG_MPU_SYSLINK_PLATFORM=y
+CONFIG_MPU_SYSLINK_IPC=y
+CONFIG_SYSLINK_USE_SYSMGR=y
+CONFIG_SYSLINK_IOMMU_ENABLE=y
+CONFIG_SYSLINK_RECOVERY=y
+# CONFIG_DMM_DMA_API is not set
+CONFIG_HAPTIC=y
+CONFIG_HAPTIC_CLASS=y
+# CONFIG_HAPTIC_SAMSUNG_PWM is not set
+CONFIG_SAMSUNG_PHONE_SVNET=y
+CONFIG_PHONE_MODEMCTL=m
+# CONFIG_PHONE_ONEDRAM is not set
+# CONFIG_PHONE_IPC_SPI is not set
+CONFIG_PHONE_IPC_HSI=y
+CONFIG_PHONE_SVNET=m
+# CONFIG_PHONE_LOOPBACK_TEST is not set
+# CONFIG_PHONE_STORAGE is not set
+# CONFIG_SVNET_WHITELIST is not set
+
+#
+# File systems
+#
+CONFIG_EXT2_FS=y
+# CONFIG_EXT2_FS_XATTR is not set
+# CONFIG_EXT2_FS_XIP is not set
+CONFIG_EXT3_FS=y
+# CONFIG_EXT3_DEFAULTS_TO_ORDERED is not set
+# CONFIG_EXT3_FS_XATTR is not set
+CONFIG_EXT4_FS=y
+CONFIG_EXT4_FS_XATTR=y
+# CONFIG_EXT4_FS_POSIX_ACL is not set
+# CONFIG_EXT4_FS_SECURITY is not set
+# CONFIG_EXT4_DEBUG is not set
+CONFIG_JBD=y
+# CONFIG_JBD_DEBUG is not set
+CONFIG_JBD2=y
+# CONFIG_JBD2_DEBUG is not set
+CONFIG_FS_MBCACHE=y
+# CONFIG_REISERFS_FS is not set
+# CONFIG_JFS_FS is not set
+# CONFIG_FS_POSIX_ACL is not set
+# CONFIG_XFS_FS is not set
+# CONFIG_GFS2_FS is not set
+# CONFIG_OCFS2_FS is not set
+# CONFIG_BTRFS_FS is not set
+# CONFIG_NILFS2_FS is not set
+CONFIG_FILE_LOCKING=y
+CONFIG_FSNOTIFY=y
+CONFIG_DNOTIFY=y
+CONFIG_INOTIFY=y
+CONFIG_INOTIFY_USER=y
+CONFIG_QUOTA=y
+# CONFIG_QUOTA_NETLINK_INTERFACE is not set
+CONFIG_PRINT_QUOTA_WARNING=y
+# CONFIG_QUOTA_DEBUG is not set
+CONFIG_QUOTA_TREE=y
+# CONFIG_QFMT_V1 is not set
+CONFIG_QFMT_V2=y
+CONFIG_QUOTACTL=y
+# CONFIG_AUTOFS_FS is not set
+# CONFIG_AUTOFS4_FS is not set
+# CONFIG_FUSE_FS is not set
+
+#
+# Caches
+#
+# CONFIG_FSCACHE is not set
+
+#
+# CD-ROM/DVD Filesystems
+#
+# CONFIG_ISO9660_FS is not set
+# CONFIG_UDF_FS is not set
+
+#
+# DOS/FAT/NT Filesystems
+#
+CONFIG_FAT_FS=y
+CONFIG_MSDOS_FS=y
+CONFIG_VFAT_FS=y
+CONFIG_FAT_DEFAULT_CODEPAGE=437
+CONFIG_FAT_DEFAULT_IOCHARSET="iso8859-1"
+# CONFIG_NTFS_FS is not set
+
+#
+# Pseudo filesystems
+#
+CONFIG_PROC_FS=y
+CONFIG_PROC_SYSCTL=y
+CONFIG_PROC_PAGE_MONITOR=y
+CONFIG_SYSFS=y
+CONFIG_TMPFS=y
+# CONFIG_TMPFS_POSIX_ACL is not set
+# CONFIG_HUGETLB_PAGE is not set
+# CONFIG_CONFIGFS_FS is not set
+# CONFIG_MISC_FILESYSTEMS is not set
+# CONFIG_NETWORK_FILESYSTEMS is not set
+
+#
+# Partition Types
+#
+CONFIG_PARTITION_ADVANCED=y
+# CONFIG_ACORN_PARTITION is not set
+# CONFIG_OSF_PARTITION is not set
+# CONFIG_AMIGA_PARTITION is not set
+# CONFIG_ATARI_PARTITION is not set
+# CONFIG_MAC_PARTITION is not set
+CONFIG_MSDOS_PARTITION=y
+# CONFIG_BSD_DISKLABEL is not set
+# CONFIG_MINIX_SUBPARTITION is not set
+# CONFIG_SOLARIS_X86_PARTITION is not set
+# CONFIG_UNIXWARE_DISKLABEL is not set
+# CONFIG_LDM_PARTITION is not set
+# CONFIG_SGI_PARTITION is not set
+# CONFIG_ULTRIX_PARTITION is not set
+# CONFIG_SUN_PARTITION is not set
+# CONFIG_KARMA_PARTITION is not set
+CONFIG_EFI_PARTITION=y
+# CONFIG_SYSV68_PARTITION is not set
+CONFIG_NLS=y
+CONFIG_NLS_DEFAULT="iso8859-1"
+CONFIG_NLS_CODEPAGE_437=y
+# CONFIG_NLS_CODEPAGE_737 is not set
+# CONFIG_NLS_CODEPAGE_775 is not set
+# CONFIG_NLS_CODEPAGE_850 is not set
+# CONFIG_NLS_CODEPAGE_852 is not set
+# CONFIG_NLS_CODEPAGE_855 is not set
+# CONFIG_NLS_CODEPAGE_857 is not set
+# CONFIG_NLS_CODEPAGE_860 is not set
+# CONFIG_NLS_CODEPAGE_861 is not set
+# CONFIG_NLS_CODEPAGE_862 is not set
+# CONFIG_NLS_CODEPAGE_863 is not set
+# CONFIG_NLS_CODEPAGE_864 is not set
+# CONFIG_NLS_CODEPAGE_865 is not set
+# CONFIG_NLS_CODEPAGE_866 is not set
+# CONFIG_NLS_CODEPAGE_869 is not set
+# CONFIG_NLS_CODEPAGE_936 is not set
+# CONFIG_NLS_CODEPAGE_950 is not set
+# CONFIG_NLS_CODEPAGE_932 is not set
+# CONFIG_NLS_CODEPAGE_949 is not set
+# CONFIG_NLS_CODEPAGE_874 is not set
+# CONFIG_NLS_ISO8859_8 is not set
+# CONFIG_NLS_CODEPAGE_1250 is not set
+# CONFIG_NLS_CODEPAGE_1251 is not set
+# CONFIG_NLS_ASCII is not set
+CONFIG_NLS_ISO8859_1=y
+# CONFIG_NLS_ISO8859_2 is not set
+# CONFIG_NLS_ISO8859_3 is not set
+# CONFIG_NLS_ISO8859_4 is not set
+# CONFIG_NLS_ISO8859_5 is not set
+# CONFIG_NLS_ISO8859_6 is not set
+# CONFIG_NLS_ISO8859_7 is not set
+# CONFIG_NLS_ISO8859_9 is not set
+# CONFIG_NLS_ISO8859_13 is not set
+# CONFIG_NLS_ISO8859_14 is not set
+# CONFIG_NLS_ISO8859_15 is not set
+# CONFIG_NLS_KOI8_R is not set
+# CONFIG_NLS_KOI8_U is not set
+# CONFIG_NLS_UTF8 is not set
+# CONFIG_DLM is not set
+
+#
+# Kernel hacking
+#
+# CONFIG_KERNEL_LOGGING is not set
+# CONFIG_PRINTK_TIME is not set
+# CONFIG_ENABLE_WARN_DEPRECATED is not set
+# CONFIG_ENABLE_MUST_CHECK is not set
+CONFIG_FRAME_WARN=1024
+CONFIG_MAGIC_SYSRQ=y
+# CONFIG_STRIP_ASM_SYMS is not set
+# CONFIG_UNUSED_SYMBOLS is not set
+CONFIG_DEBUG_FS=y
+# CONFIG_HEADERS_CHECK is not set
+CONFIG_DEBUG_KERNEL=y
+# CONFIG_DEBUG_SHIRQ is not set
+# CONFIG_DETECT_SOFTLOCKUP is not set
+CONFIG_DETECT_HUNG_TASK=y
+# CONFIG_BOOTPARAM_HUNG_TASK_PANIC is not set
+CONFIG_BOOTPARAM_HUNG_TASK_PANIC_VALUE=0
+# CONFIG_SCHED_DEBUG is not set
+# CONFIG_SCHEDSTATS is not set
+# CONFIG_TIMER_STATS is not set
+# CONFIG_DEBUG_OBJECTS is not set
+# CONFIG_SLUB_DEBUG_ON is not set
+# CONFIG_SLUB_STATS is not set
+# CONFIG_DEBUG_KMEMLEAK is not set
+# CONFIG_DEBUG_PREEMPT is not set
+# CONFIG_DEBUG_RT_MUTEXES is not set
+# CONFIG_RT_MUTEX_TESTER is not set
+# CONFIG_DEBUG_SPINLOCK is not set
+# CONFIG_DEBUG_MUTEXES is not set
+# CONFIG_DEBUG_LOCK_ALLOC is not set
+# CONFIG_PROVE_LOCKING is not set
+# CONFIG_LOCK_STAT is not set
+# CONFIG_DEBUG_SPINLOCK_SLEEP is not set
+# CONFIG_DEBUG_LOCKING_API_SELFTESTS is not set
+CONFIG_STACKTRACE=y
+# CONFIG_DEBUG_KOBJECT is not set
+# CONFIG_DEBUG_HIGHMEM is not set
+# CONFIG_DEBUG_BUGVERBOSE is not set
+CONFIG_DEBUG_INFO=y
+# CONFIG_DEBUG_VM is not set
+# CONFIG_DEBUG_WRITECOUNT is not set
+# CONFIG_DEBUG_MEMORY_INIT is not set
+# CONFIG_DEBUG_LIST is not set
+# CONFIG_DEBUG_SG is not set
+# CONFIG_DEBUG_NOTIFIERS is not set
+# CONFIG_DEBUG_CREDENTIALS is not set
+CONFIG_FRAME_POINTER=y
+# CONFIG_BOOT_PRINTK_DELAY is not set
+# CONFIG_RCU_TORTURE_TEST is not set
+# CONFIG_RCU_CPU_STALL_DETECTOR is not set
+# CONFIG_BACKTRACE_SELF_TEST is not set
+# CONFIG_DEBUG_BLOCK_EXT_DEVT is not set
+# CONFIG_DEBUG_FORCE_WEAK_PER_CPU is not set
+# CONFIG_LKDTM is not set
+# CONFIG_CPU_NOTIFIER_ERROR_INJECT is not set
+# CONFIG_FAULT_INJECTION is not set
+# CONFIG_SYSCTL_SYSCALL_CHECK is not set
+# CONFIG_PAGE_POISONING is not set
+CONFIG_HAVE_FUNCTION_TRACER=y
+CONFIG_TRACING_SUPPORT=y
+# CONFIG_FTRACE is not set
+# CONFIG_DYNAMIC_DEBUG is not set
+# CONFIG_ATOMIC64_SELFTEST is not set
+# CONFIG_SAMPLES is not set
+CONFIG_HAVE_ARCH_KGDB=y
+# CONFIG_KGDB is not set
+# CONFIG_ARM_UNWIND is not set
+# CONFIG_DEBUG_USER is not set
+# CONFIG_DEBUG_ERRORS is not set
+# CONFIG_DEBUG_STACK_USAGE is not set
+# CONFIG_DEBUG_LL is not set
+# CONFIG_OC_ETM is not set
+
+#
+# Security options
+#
+# CONFIG_KEYS is not set
+# CONFIG_SECURITY is not set
+# CONFIG_SECURITYFS is not set
+CONFIG_TF_MSHIELD=y
+CONFIG_SECURITY_MIDDLEWARE_COMPONENT=y
+# CONFIG_DYNAMIC_SDP_STORAGE_ALLOC is not set
+CONFIG_SECURE_TRACE=y
+# CONFIG_TF_DRIVER_DEBUG_SUPPORT is not set
+# CONFIG_DEFAULT_SECURITY_SELINUX is not set
+# CONFIG_DEFAULT_SECURITY_SMACK is not set
+# CONFIG_DEFAULT_SECURITY_TOMOYO is not set
+CONFIG_DEFAULT_SECURITY_DAC=y
+CONFIG_DEFAULT_SECURITY=""
+CONFIG_CRYPTO=y
+
+#
+# Crypto core or helper
+#
+CONFIG_CRYPTO_ALGAPI=y
+CONFIG_CRYPTO_ALGAPI2=y
+CONFIG_CRYPTO_AEAD=y
+CONFIG_CRYPTO_AEAD2=y
+CONFIG_CRYPTO_BLKCIPHER=y
+CONFIG_CRYPTO_BLKCIPHER2=y
+CONFIG_CRYPTO_HASH=y
+CONFIG_CRYPTO_HASH2=y
+CONFIG_CRYPTO_RNG2=y
+CONFIG_CRYPTO_PCOMP=y
+CONFIG_CRYPTO_MANAGER=y
+CONFIG_CRYPTO_MANAGER2=y
+CONFIG_CRYPTO_MANAGER_TESTS=y
+# CONFIG_CRYPTO_GF128MUL is not set
+# CONFIG_CRYPTO_NULL is not set
+# CONFIG_CRYPTO_PCRYPT is not set
+CONFIG_CRYPTO_WORKQUEUE=y
+# CONFIG_CRYPTO_CRYPTD is not set
+CONFIG_CRYPTO_AUTHENC=y
+# CONFIG_CRYPTO_TEST is not set
+
+#
+# Authenticated Encryption with Associated Data
+#
+# CONFIG_CRYPTO_CCM is not set
+# CONFIG_CRYPTO_GCM is not set
+# CONFIG_CRYPTO_SEQIV is not set
+
+#
+# Block modes
+#
+CONFIG_CRYPTO_CBC=y
+# CONFIG_CRYPTO_CTR is not set
+# CONFIG_CRYPTO_CTS is not set
+CONFIG_CRYPTO_ECB=m
+# CONFIG_CRYPTO_LRW is not set
+CONFIG_CRYPTO_PCBC=m
+# CONFIG_CRYPTO_XTS is not set
+
+#
+# Hash modes
+#
+CONFIG_CRYPTO_HMAC=y
+# CONFIG_CRYPTO_XCBC is not set
+# CONFIG_CRYPTO_VMAC is not set
+
+#
+# Digest
+#
+CONFIG_CRYPTO_CRC32C=y
+# CONFIG_CRYPTO_GHASH is not set
+# CONFIG_CRYPTO_MD4 is not set
+CONFIG_CRYPTO_MD5=y
+# CONFIG_CRYPTO_MICHAEL_MIC is not set
+# CONFIG_CRYPTO_RMD128 is not set
+# CONFIG_CRYPTO_RMD160 is not set
+# CONFIG_CRYPTO_RMD256 is not set
+# CONFIG_CRYPTO_RMD320 is not set
+CONFIG_CRYPTO_SHA1=y
+# CONFIG_CRYPTO_SHA256 is not set
+# CONFIG_CRYPTO_SHA512 is not set
+# CONFIG_CRYPTO_TGR192 is not set
+# CONFIG_CRYPTO_WP512 is not set
+
+#
+# Ciphers
+#
+# CONFIG_CRYPTO_AES is not set
+# CONFIG_CRYPTO_ANUBIS is not set
+# CONFIG_CRYPTO_ARC4 is not set
+# CONFIG_CRYPTO_BLOWFISH is not set
+# CONFIG_CRYPTO_CAMELLIA is not set
+# CONFIG_CRYPTO_CAST5 is not set
+# CONFIG_CRYPTO_CAST6 is not set
+CONFIG_CRYPTO_DES=y
+# CONFIG_CRYPTO_FCRYPT is not set
+# CONFIG_CRYPTO_KHAZAD is not set
+# CONFIG_CRYPTO_SALSA20 is not set
+# CONFIG_CRYPTO_SEED is not set
+# CONFIG_CRYPTO_SERPENT is not set
+# CONFIG_CRYPTO_TEA is not set
+# CONFIG_CRYPTO_TWOFISH is not set
+
+#
+# Compression
+#
+CONFIG_CRYPTO_DEFLATE=y
+# CONFIG_CRYPTO_ZLIB is not set
+# CONFIG_CRYPTO_LZO is not set
+
+#
+# Random Number Generation
+#
+# CONFIG_CRYPTO_ANSI_CPRNG is not set
+CONFIG_CRYPTO_HW=y
+# CONFIG_BINARY_PRINTF is not set
+
+#
+# Library routines
+#
+CONFIG_BITREVERSE=y
+CONFIG_GENERIC_FIND_LAST_BIT=y
+CONFIG_CRC_CCITT=y
+CONFIG_CRC16=y
+CONFIG_CRC_T10DIF=y
+# CONFIG_CRC_ITU_T is not set
+CONFIG_CRC32=y
+# CONFIG_CRC7 is not set
+CONFIG_LIBCRC32C=y
+CONFIG_ZLIB_INFLATE=y
+CONFIG_ZLIB_DEFLATE=y
+CONFIG_DECOMPRESS_GZIP=y
+CONFIG_GENERIC_ALLOCATOR=y
+CONFIG_TEXTSEARCH=y
+CONFIG_TEXTSEARCH_KMP=y
+CONFIG_TEXTSEARCH_BM=y
+CONFIG_TEXTSEARCH_FSM=y
+CONFIG_HAS_IOMEM=y
+CONFIG_HAS_IOPORT=y
+CONFIG_HAS_DMA=y
+CONFIG_NLATTR=y
Index: Kernel/arch/arm/mach-omap2/board-t1-omap4430.c
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ Kernel/arch/arm/mach-omap2/board-t1-omap4430.c	2011-03-04 22:03:29.639962000 +0900
@@ -0,0 +1,1993 @@
+/*
+ * Board support file for Samsung OMAP4 10.1' tablelet Board.
+ *
+ * Copyright (C) 2010 Samsung Electronics
+ *
+ * Author: Shankar Bandal <shankar.b@samsung.com>
+ *
+ * Based on mach-omap2/board-4430sdp.c
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+
+#include <linux/kernel.h>
+#include <linux/init.h>
+#include <linux/platform_device.h>
+#include <linux/io.h>
+#include <linux/gpio.h>
+#include <linux/usb/otg.h>
+#include <linux/spi/spi.h>
+#include <linux/i2c/twl.h>
+#include <linux/i2c/cma3000.h>
+#include <linux/regulator/machine.h>
+#include <linux/input/sfh7741.h>
+#include <linux/leds.h>
+#include <linux/leds_pwm.h>
+#include <linux/leds-omap4430sdp-display.h>
+#include <linux/interrupt.h>
+#include <linux/delay.h>
+#include <linux/twl6040-vib.h>
+#include <linux/pwm_backlight.h>
+#include <linux/leds_pwm.h>
+
+#include <mach/hardware.h>
+#include <mach/omap4-common.h>
+#include <mach/emif.h>
+#include <mach/lpddr2-elpida.h>
+#include <asm/mach-types.h>
+#include <asm/mach/arch.h>
+#include <asm/mach/map.h>
+
+#include <plat/board.h>
+#include <plat/common.h>
+#include <plat/control.h>
+#include <plat/timer-gp.h>
+#include <plat/display.h>
+#include <plat/usb.h>
+#include <plat/omap_device.h>
+#include <plat/omap_hwmod.h>
+#ifdef CONFIG_SERIAL_OMAP
+#include <plat/omap-serial.h>
+#include <plat/serial.h>
+#endif
+#include <linux/wakelock.h>
+#include <plat/mmc.h>
+#include <plat/syntm12xx.h>
+#include <plat/omap4-keypad.h>
+#include <plat/hwspinlock.h>
+#include <plat/nokia-dsi-panel.h>
+#include "hsmmc.h"
+#include "smartreflex-class3.h"
+#include <linux/haptic.h>
+#include <plat/opp_twl_tps.h>
+#include <linux/fsa9480.h>
+#include <linux/gp2a.h>
+#include <linux/cm3663.h>
+#include <linux/mpu.h>
+#include <linux/switch.h>
+
+#include <linux/i2c/twl6030-gpadc.h>
+#include "board-4430sdp-wifi.h"
+
+#if (CONFIG_SAMSUNG_REL_HW_REV == 0)
+#include <linux/lcd.h>
+#include <linux/ld9040.h>
+#include <linux/pn544.h>
+#endif
+
+
+#include <linux/atmel_mxt224E.h>
+#include "mux.h"
+
+#if defined( CONFIG_SAMSUNG_PHONE_SVNET )
+#include <linux/phone_svn/modemctl.h>
+#include <linux/phone_svn/ipc_hsi.h>
+#include <linux/irq.h>
+#endif // CONFIG_SAMSUNG_PHONE_SVNET
+
+struct class *sec_class;
+EXPORT_SYMBOL(sec_class);
+#define _OMAP_MUX_SETTING
+
+#if (CONFIG_SAMSUNG_REL_HW_REV == 0)
+#define T1_OMAP4430_LCD_EN_GPIO                         40
+#define T1_OMAP4430_MLCD_RST_GPIO                       35
+#define T1_OMAP4430_TOUCH_EN_GPIO			54
+#define T1_OMAP4430_TOUCH_nINT_GPIO                     46
+
+#define T1_OMAP4430_KXSD9_INT_GPIO			122
+#define T1_OMAP4430_AKM_INT_GPIO				157
+#define T1_OMAP4430_MPU3050_INT_GPIO			45
+#define T1_OMAP4430_GP2A_PS_ON				37
+#define T1_OMAP4430_GP2A_PS_VOUT				33
+
+/*PN544 GPIOs*/
+#define OMAP4430_GPIO_NFC_IRQ				59
+#define OMAP4430_GPIO_NFC_FIRM				135
+#define OMAP4430_GPIO_NFC_VEN				136
+
+#define DISABLE_I2C2_HW_SPINLOCK
+#else
+#undef DISABLE_I2C2_HW_SPINLOCK
+#endif /* end of (CONFIG_SAMSUNG_REL_HW_REV == 0) */
+
+#define CONTROL_CORE_PAD0_I2C3_SDA_PAD1_I2C4_SCL	0x4A10012C
+#define CONTROL_CORE_PAD0_I2C4_SDA_PAD1_MCSPI1_CLK	0x4A100130
+
+#define OMAP4430_GPIO_USBSW_NINT			44
+
+
+
+/* For uUSB Switch */
+#define OMAP4430_GPIO_JACK_NINT                121
+
+/* For MIPI_HSI */
+#if defined( CONFIG_SAMSUNG_PHONE_SVNET )
+#define OMAP4430_GPIO_MIPI_HSI_RESET_REQ_N			50
+#define OMAP4430_GPIO_MIPI_HSI_CP_ON				36
+#define OMAP4430_GPIO_MIPI_HSI_CP_RST				2	//wk2
+#define OMAP4430_GPIO_MIPI_HSI_SUSPEND_REQUEST			56
+#define OMAP4430_GPIO_MIPI_HSI_PDA_ACTIVE			119
+#define OMAP4430_GPIO_MIPI_HSI_PHONE_ACTIVE			120
+#endif  //CONFIG_SAMSUNG_PHONE_SVNET
+
+
+/* For Audio */
+#define T1_OMAP4430_MICBIAS_EN_GPIO 	48
+#define T1_OMAP4430_MICBIAS_EN2_GPIO 	49
+#define T1_OMAP4430_DET_35_GPIO 		0	/* GPIO_WK0 */
+#define T1_OMAP4430_EAR_SEND_END_GPIO 	94
+
+static void omap4_usb_cb(u8 attached);
+static void omap4_charger_cb(u8 attached);
+static void omap4_jig_cb(u8 attached);
+static void omap4_fsa9480_reset_cb(void);
+
+static struct wake_lock uart_lock;
+#define TWL6030_RTC_GPIO 6
+#define BLUETOOTH_UART UART2
+
+#if (CONFIG_SAMSUNG_REL_HW_REV == 0)
+static unsigned lcd_en_gpio;
+static unsigned mlcd_rst_gpio;
+extern void set_offmode_padconfig(void);
+extern struct ld9040_panel_data matchbox_panel_data;
+#else
+#error "define H/W revision"
+#endif
+
+static int lcd_enabled;
+
+void omap4430univ_sensors_init(void);
+
+static struct platform_device t1_omap4_hdmi_audio_device = {
+	.name		= "hdmi-dai",
+	.id		= -1,
+};
+
+#ifdef CONFIG_SWITCH_GPIO
+void ear_mic_bias_cb(bool value)
+{
+	printk(KERN_ERR "ear_mic_bias_cb %d\n", value);
+	if(value)
+		gpio_set_value(T1_OMAP4430_MICBIAS_EN2_GPIO, 1);
+	else
+		gpio_set_value(T1_OMAP4430_MICBIAS_EN2_GPIO, 0);
+}
+static struct gpio_switch_platform_data headset_switch_data = {
+	.name = "h2w",
+	.gpio = T1_OMAP4430_DET_35_GPIO,	/* Omap3430 GPIO_27 For samsung zeus */
+	.ear_mic_bias_cb = ear_mic_bias_cb
+};
+static struct platform_device headset_switch_device = {
+	.name = "switch-gpio",
+	.dev = {
+		.platform_data = &headset_switch_data,
+		}
+};
+#endif
+#ifdef CONFIG_INPUT_EAR_KEY
+static struct resource board_ear_key_resource = {
+	.end = 0,
+	.flags = IORESOURCE_IRQ | IORESOURCE_IRQ_HIGHLEVEL,
+};
+static struct gpio_switch_platform_data ear_key_switch_data = {
+	.name = "send_end",
+	.gpio = T1_OMAP4430_EAR_SEND_END_GPIO,	/* Omap3430 GPIO_27 For samsung zeus */
+};
+static struct platform_device board_ear_key_device = {
+	.name = "ear_key_device",
+	.id = -1,
+	.num_resources = 1,
+	.resource = &board_ear_key_resource,
+	.dev = {
+		.platform_data = &ear_key_switch_data,
+	} 
+};
+#endif
+#ifdef CONFIG_EAR_MIC_ADC
+static struct resource t1_omap4_ear_mic_adc_resource = {
+	.start  = 0,
+	.end    = 0,
+	.flags  = IORESOURCE_IRQ | IORESOURCE_IRQ_HIGHLEVEL,
+};
+
+static struct platform_device t1_omap4_ear_mic_adc_device = {
+	.name           = "ear_mic_adc",
+	.id             = -1,
+	.num_resources  = 1,
+	.resource       = &t1_omap4_ear_mic_adc_resource,
+};
+#endif
+
+static int t1_omap4_keymap[] = {
+	/* TODO: The row and column coded here are based on what is detected by
+	 * OMAP4. It is different from the one shown in schematic. Need the
+	 * identify the root cause of the problem */
+	/* row, col, key */
+#if (CONFIG_SAMSUNG_REL_HW_REV == 0)
+        KEY(2, 1, KEY_VOLUMEUP),        //Volume up
+        KEY(1, 1, KEY_VOLUMEDOWN),      //volume down
+#endif
+	0,
+};
+
+/* For uUSB Switch */
+static struct fsa9480_platform_data omap4_fsa9480_pdata = {
+       .intb_gpio      = OMAP4430_GPIO_JACK_NINT,
+       .usb_cb         = omap4_usb_cb,
+       .uart_cb        = NULL,
+       .charger_cb     = omap4_charger_cb,
+       .jig_cb         = omap4_jig_cb,
+       .reset_cb       = omap4_fsa9480_reset_cb,
+};
+
+
+#define SENSOR_MPU_NAME "mpu3050"
+
+static struct mpu3050_platform_data mpu_data = {
+	.int_config  = 0x12,
+	.orientation = {   0, 1,  0, 
+			  -1,  0,  0, 
+			   0,  0, 1 },
+	/* accel */
+	.accel = {
+	.get_slave_descr = get_accel_slave_descr,
+	.adapt_num   = 4,
+	.bus         = EXT_SLAVE_BUS_SECONDARY,
+	.address     = 0x19,
+	.orientation = {   -1,  0,  0, 
+			   0, -1,  0, 
+			   0,  0,  1 },
+	 },
+	/* compass */
+	.compass = {
+	.get_slave_descr = yas530_get_slave_descr,
+	.adapt_num   = 4,
+	.bus         = EXT_SLAVE_BUS_PRIMARY,
+	.address     = 0x2E,
+	.orientation = {  0,  1,  0, 
+			 -1,  0,  0, 
+			  0,  0,  1 },
+	 },
+};
+
+#ifdef CONFIG_OPTICAL_GP2A
+/* For gp2a light/proximity sensor */
+
+static int gp2a_power(bool on)
+{
+	/* this controls the power supply rail to the gp2a IC */
+	gpio_direction_output(T1_OMAP4430_GP2A_PS_ON, on);
+	return 0;
+}
+
+static struct twl6030_gpadc_request conv_request = {
+        .channels = (0x1 << 3),
+        .do_avg = 0,
+	.method = TWL6030_GPADC_SW2,
+	.type = 0,
+	.active = 0,
+	.result_pending = 0,
+	.func_cb = NULL,
+
+};
+
+static int gp2a_light_adc_value(void)
+{
+	// Ambient Light sensing
+        twl6030_gpadc_conversion(&conv_request);
+	return (conv_request.rbuf[3]);
+
+}
+
+static struct gp2a_platform_data gp2a_pdata = {
+	.power = gp2a_power,
+	.p_out = T1_OMAP4430_GP2A_PS_VOUT,
+	.light_adc_value = gp2a_light_adc_value
+};
+#endif
+
+#ifdef CONFIG_INPUT_CM3663
+/* For gp2a light/proximity sensor */
+
+static int cm3663_power(bool on)
+{
+	/* this controls the power supply rail to the gp2a IC */
+	gpio_direction_output(T1_OMAP4430_GP2A_PS_ON, on);
+	return 0;
+}
+
+
+static struct cm3663_platform_data cm3663_pdata = {
+	.proximity_power = cm3663_power,
+	.irq = T1_OMAP4430_GP2A_PS_VOUT,
+};
+
+void cm3663_gpio_request(void)
+{
+	int ret = -ENODEV;
+	ret = gpio_request(T1_OMAP4430_GP2A_PS_ON, "gpio_ps_on");
+	if (ret < 0) {
+		pr_err("%s: gpio %d request failed (%d)\n",
+			__func__, T1_OMAP4430_GP2A_PS_ON, ret);
+		return ret;
+	}
+	ret = gpio_direction_input(T1_OMAP4430_GP2A_PS_ON);
+	if (ret < 0) {
+		pr_err("%s: failed to set gpio %d as input (%d)\n",
+			__func__, T1_OMAP4430_GP2A_PS_ON, ret);
+		return ret;
+	}
+}
+#endif
+
+static void omap4_usb_cb(u8 attached)
+{
+       /* TODO: need to implement this once uUSB charging available in HW */
+       printk("\nBoard file [FSA9480]: USB Callback \n");
+}
+
+static void omap4_charger_cb(u8 attached)
+{
+       /* TODO: need to implement this once uUSB charging available in HW */
+       printk("\nBoard file [FSA9480]: Charger Callback \n");
+}
+
+static void omap4_jig_cb(u8 attached)
+{
+       /* TODO: need to implement this once uUSB charging available in HW */
+       printk("\nBoard file [FSA9480]: Jig Callback \n");
+}
+
+static void omap4_fsa9480_reset_cb(void)
+{
+       /* TODO: need to implement this once uUSB charging available in HW */
+       printk("\nBoard file [FSA9480]: Reset Callback \n");
+}
+
+
+static struct matrix_keymap_data t1_omap4_keymap_data = {
+	.keymap			= t1_omap4_keymap,
+	.keymap_size		= ARRAY_SIZE(t1_omap4_keymap),
+};
+
+static struct omap4_keypad_platform_data t1_omap4_keypad_data = {
+	.keymap_data		= &t1_omap4_keymap_data,
+	.rows			= 8,
+	.cols			= 8,
+	.rep                    = 0,
+};
+
+static struct platform_device t1_omap4_keypad_led = {
+	.name	=	"keypad_led",
+	.id	=	-1,
+	.dev	= {
+		.platform_data = NULL,
+	},
+};
+
+void keyboard_mux_init(void)
+{
+#if (CONFIG_SAMSUNG_REL_HW_REV == 0 )
+        omap_mux_init_signal("kpd_col1.kpd_col1",
+                                OMAP_WAKEUP_EN | OMAP_MUX_MODE0);
+        omap_mux_init_signal("kpd_row1.kpd_row1",
+                                OMAP_PULL_ENA | OMAP_PULL_UP |
+                                OMAP_WAKEUP_EN | OMAP_MUX_MODE0 |
+                                OMAP_INPUT_EN);
+        omap_mux_init_signal("kpd_row2.kpd_row2",
+                                OMAP_PULL_ENA | OMAP_PULL_UP |
+                                OMAP_WAKEUP_EN | OMAP_MUX_MODE0 |
+                                OMAP_INPUT_EN);
+#endif
+}
+
+
+static int t1_omap4_panel_enable_hdmi(struct omap_dss_device *dssdev)
+{
+	gpio_request(HDMI_GPIO_60 , "hdmi_gpio_60");
+	gpio_request(HDMI_GPIO_41 , "hdmi_gpio_41");
+	gpio_direction_output(HDMI_GPIO_60, 0);
+	gpio_direction_output(HDMI_GPIO_41, 0);
+	gpio_set_value(HDMI_GPIO_60, 1);
+	gpio_set_value(HDMI_GPIO_41, 1);
+	gpio_set_value(HDMI_GPIO_60, 0);
+	gpio_set_value(HDMI_GPIO_41, 0);
+	gpio_set_value(HDMI_GPIO_60, 1);
+	gpio_set_value(HDMI_GPIO_41, 1);
+	return 0;
+}
+
+static void t1_omap4_panel_disable_hdmi(struct omap_dss_device *dssdev)
+{
+	gpio_set_value(HDMI_GPIO_60, 1);
+	gpio_set_value(HDMI_GPIO_41, 1);
+}
+
+static __attribute__ ((unused)) void __init t1_omap4_hdmi_init(void)
+{
+	return;
+}
+
+static int ld9040_panel_enable_lcd(struct omap_dss_device *dssdev)
+{
+        struct regulator *regulator;
+
+        regulator = regulator_get(&dssdev->dev, "vusim");
+        if (IS_ERR(regulator)) {
+               printk("[SHANKAR] %s [%d] failed to get VUSIM regulator. \n", __func__, __LINE__);
+                return 0;
+        }
+        regulator_enable(regulator);
+        regulator_put(regulator);
+        return 0;
+}
+
+static void ld9040_panel_disable_lcd(struct omap_dss_device *dssdev)
+{
+        struct regulator *regulator;
+
+        regulator = regulator_get(&dssdev->dev, "vusim");
+        if (IS_ERR(regulator)) {
+               printk("[SHANKAR] %s [%d] failed to get VUSIM regulator. \n", __func__, __LINE__);
+                return ;
+        }
+        if (regulator_is_enabled(regulator))
+                regulator_force_disable(regulator);
+        regulator_put(regulator);
+
+        return;
+
+ }
+
+
+static struct omap_dss_device t1_omap4_lcd_device = {
+        .name                   = "lcd",
+        .driver_name            = "ld9040_panel",
+        .type                   = OMAP_DISPLAY_TYPE_DPI,
+        .phy.dpi.data_lines     = 24,
+        .platform_enable        = ld9040_panel_enable_lcd,
+        .platform_disable       = ld9040_panel_disable_lcd,
+       .channel                = OMAP_DSS_CHANNEL_LCD2,
+};
+
+static int lcd_power_on(struct lcd_device *ld, int enable)
+{
+    return 1;
+}
+static int reset_lcd(struct lcd_device *ld)
+{
+    mdelay(10);
+    gpio_set_value(mlcd_rst_gpio, 0);
+    mdelay(10);
+    gpio_set_value(mlcd_rst_gpio, 1);
+    return 1;
+}
+
+static int lcd_gpio_cfg_earlysuspend(struct lcd_device *ld)
+{
+    int reset_gpio = -1;
+    int err;
+#if 0
+    reset_gpio = S5PV310_GPY4(5);
+
+    err = gpio_request(reset_gpio, "MLCD_RST");
+    if (err) {
+        printk(KERN_ERR "failed to request MLCD_RST for "
+                "lcd reset control\n");
+        return err;
+    }
+
+    mdelay(10);
+    gpio_direction_output(reset_gpio, 0);
+
+    gpio_free(reset_gpio);
+#endif
+    return 0;
+}
+static int lcd_gpio_cfg_lateresume(struct lcd_device *ld)
+{
+#if 0	
+    /* MLCD_RST */
+    s3c_gpio_cfgpin(S5PV310_GPY4(5), S3C_GPIO_OUTPUT);
+    s3c_gpio_setpull(S5PV310_GPY4(5), S3C_GPIO_PULL_NONE);
+
+    /* LCD_nCS */
+    s3c_gpio_cfgpin(S5PV310_GPY4(3), S3C_GPIO_OUTPUT);
+    s3c_gpio_setpull(S5PV310_GPY4(3), S3C_GPIO_PULL_NONE);
+    /* LCD_SCLK */
+    s3c_gpio_cfgpin(S5PV310_GPY3(1), S3C_GPIO_OUTPUT);
+    s3c_gpio_setpull(S5PV310_GPY3(1), S3C_GPIO_PULL_NONE);
+    /* LCD_SDI */
+    s3c_gpio_cfgpin(S5PV310_GPY3(3), S3C_GPIO_OUTPUT);
+    s3c_gpio_setpull(S5PV310_GPY3(3), S3C_GPIO_PULL_NONE);
+#endif
+    return 0;
+}
+
+/*   : Fix me regarding ADC kernel Panic
+static void lcd_register_callback(void* function)
+{
+    sec_battery_cbs.lcd_set_adc_value = function;
+}
+*/
+
+
+static struct lcd_platform_data ld9040_platform_data = {
+    .reset          = reset_lcd,
+    .power_on       = lcd_power_on,
+    .gpio_cfg_earlysuspend  = lcd_gpio_cfg_earlysuspend,
+    .gpio_cfg_lateresume    = lcd_gpio_cfg_lateresume,
+/*   : Fix me regarding ADC kernel Panic
+    .register_cb    = lcd_register_callback,
+*/
+    /* it indicates whether lcd panel is enabled from u-boot. */
+    .lcd_enabled        = 0,
+    .reset_delay        = 20,   /* 20ms */
+    .power_on_delay     = 20,   /* 20ms */
+    .power_off_delay    = 200,  /* 200ms */
+    .sleep_in_delay     = 160,
+    .pdata          = &matchbox_panel_data,
+};
+
+static struct spi_board_info t1_omap4_spi_board_info[] __initdata = {
+        {
+                .modalias               = "ld9040",
+                .bus_num                = 4,
+                .chip_select            = 0,
+                .max_speed_hz           = 375000,
+                .platform_data		= (void *)&ld9040_platform_data,
+        },
+};
+
+static struct omap_dss_device t1_omap4_hdmi_device = {
+	.name = "hdmi",
+	.driver_name = "hdmi_panel",
+	.type = OMAP_DISPLAY_TYPE_HDMI,
+	.phy.dpi.data_lines = 24,
+	.platform_enable = t1_omap4_panel_enable_hdmi,
+	.platform_disable = t1_omap4_panel_disable_hdmi,
+	.channel = OMAP_DSS_CHANNEL_DIGIT,
+};
+
+
+
+static struct omap_dss_device *t1_omap4_dss_devices[] = {
+	&t1_omap4_lcd_device,
+#ifdef CONFIG_OMAP2_DSS_HDMI
+	&t1_omap4_hdmi_device,
+#endif
+};
+
+static struct omap_dss_board_info t1_omap4_dss_data = {
+	.num_devices	=	ARRAY_SIZE(t1_omap4_dss_devices),
+	.devices	=	t1_omap4_dss_devices,
+	.default_device	=	&t1_omap4_lcd_device,
+};
+
+/* wl128x BT, FM, GPS connectivity chip */
+static int gpios[] = {103, -1, -1};
+static struct platform_device wl128x_device = {
+	.name		= "kim",
+	.id		= -1,
+	.dev.platform_data = &gpios,
+};
+
+static struct resource samsung_omap4_pwr_key_rsc = {
+	.start	= 0,
+	.end	= 0,
+	.flags	= IORESOURCE_IRQ|IORESOURCE_IRQ_LOWLEVEL,
+};
+
+static struct platform_device samsung_omap4_pwr_device = {
+	.name		= "samsung_omap4_pwr_key",
+	.id		= -1,
+	.num_resources	= 1,
+	.resource	= &samsung_omap4_pwr_key_rsc,
+};
+
+static inline void __init samsung_omap4_pwr_key_irq_init(void)
+{
+	/*TODO: Do a gpio_to_irq() and gpio_request() followed by gpio_direction_input() */
+	samsung_omap4_pwr_key_rsc.start = gpio_to_irq(SAMSUNG_OMAP4_PWR_GPIO);
+	printk(KERN_ERR "Got GPIO to IRQ number %d\n", samsung_omap4_pwr_key_rsc.start);
+	if (gpio_request(SAMSUNG_OMAP4_PWR_GPIO, "pwr_key_irq") < 0) {
+		printk("\n Failed to request SAMSUNG_OMAP4_PWR_GPIO %d\n", SAMSUNG_OMAP4_PWR_GPIO);
+		samsung_omap4_pwr_key_rsc.start = 0;
+		return;
+	}
+	gpio_direction_input(SAMSUNG_OMAP4_PWR_GPIO);
+	printk("Configured SAMSUNG_OMAP4_PWR_GPIO\n");
+}
+
+static struct resource samsung_omap4_gyro_lp530al_rsc[3] = {
+	{
+		.start	= 0,
+		.end	= 0,
+		.flags	= IORESOURCE_IRQ|IORESOURCE_IRQ_LOWLEVEL,
+	},
+	{
+		.start	= 1,
+		.end	= 0,
+		.flags	= IORESOURCE_IRQ|IORESOURCE_IRQ_LOWLEVEL,
+	},
+	{
+		.start	= 0x4A31E040,
+		.end	= 0x4A31E044,
+		.flags	= IORESOURCE_MEM,
+	},
+};
+
+static struct platform_device samsung_omap4_gyro_lp530al_device = {
+	.name	= "lp530al_gyro_sensor",
+	.id	= -1,
+	.num_resources	= 3,
+	.resource	= &samsung_omap4_gyro_lp530al_rsc[0],
+};
+
+//haptic device
+static struct haptic_platform_data isa1000_platform_data[] = {
+	[0] = { /* Primary Controller */
+		.gpio = 42,
+		.name = "isa1000",
+		/*.ldo_level = ISA1200_LDOADJ_24V,*/
+		.pwm_timer = 0,
+	},
+	[1] = { /* Secondary Controller */
+		.gpio = 43,
+		.name = "isa1000",
+		/*.ldo_level = ISA1200_LDOADJ_36V,*/
+		.pwm_timer = 1,
+	},
+};
+
+static struct platform_device pwm_haptic_device = {
+	.name	= "samsung_pwm_haptic",
+	.id	= -1,
+	.dev.platform_data = &isa1000_platform_data[0],
+};
+
+
+/* pwm enabled device */
+static const struct platform_device_id pwm_id_table[] = {
+	{ "omap44xx-pwm", 0 },
+};
+
+static struct platform_device pwmbacklight_device = {
+	.name		= "omap44xx-pwm",
+	.id		= 190,
+	.dev.platform_data = &pwm_id_table,
+};
+
+/* lcd-backlight */
+static const struct led_pwm ledpwm = {
+	.name		= "lcd-backlight",
+	.pwm_id		= 190,
+	.active_low	= 1,
+	.max_brightness	= 255,
+	.pwm_period_ns	= 85,
+};
+
+static const struct led_pwm_platform_data pwmblk_platformdata = {
+	1,
+	&ledpwm,
+};
+
+static struct platform_device pwm_bl_device = {
+	.name	= "leds_pwm",
+	.id	= -1,
+	.dev.platform_data = &pwmblk_platformdata,
+};
+
+static struct resource samsung_charger_resources[] = {
+	[0] = { // USB IRQ
+		.start = 0,
+		.end   = 0,
+		.flags = IORESOURCE_IRQ | IORESOURCE_IRQ_SHAREABLE,
+	},
+	[1] = { // TA IRQ
+		.start = 0,
+		.end   = 0,
+		.flags = IORESOURCE_IRQ | IORESOURCE_IRQ_HIGHEDGE | IORESOURCE_IRQ_LOWEDGE,
+	},
+	[2] = { // TA_NCHG
+		.start = 0,
+		.end   = 0,
+		.flags = IORESOURCE_IRQ | IORESOURCE_IRQ_HIGHEDGE | IORESOURCE_IRQ_LOWEDGE,
+	},
+	[3] = { // TA_NSTAT
+		.start = 0,
+		.end   = 0,
+		.flags = IORESOURCE_IRQ | IORESOURCE_IRQ_HIGHEDGE | IORESOURCE_IRQ_LOWEDGE,
+	},
+	[4] = { // TA_EN
+		.start = 0,
+		.end   = 0,
+		.flags = IORESOURCE_IRQ,
+	},
+};
+
+static int samsung_charger_config_data[] = {
+	// [ CHECK VF USING ADC ]
+	/*   1. ENABLE  (true, flase) */
+	true,
+	/*   2. ADCPORT (ADCPORT NUM) */
+	1,
+	// [ SUPPORT TA_NCHG IRQ FOR CHECKING FULL ]
+	/*   1. ENABLE  (true, flase) */
+	true,
+};
+
+static int samsung_battery_config_data[] = {
+	// [ SUPPORT MONITORING CHARGE CURRENT FOR CHECKING FULL ]
+	/* ENABLE  (true, flase) */
+	true,
+
+	// [ SUPPORT MONITORING TEMPERATURE OF THE SYSTEM FOR BLOCKING CHARGE ]
+	/* ENABLE  (true, flase) */
+	false,  // TODO: Need to support this and make this as 'true',
+};
+
+static struct platform_device samsung_charger_device = {
+	.name		= "secChargerDev",
+	.id		= -1,
+	.num_resources	= ARRAY_SIZE(samsung_charger_resources),
+	.resource	= samsung_charger_resources,
+	.dev = {
+		.platform_data = &samsung_charger_config_data,
+	},
+};
+
+static struct platform_device samsung_battery_device = {
+	.name		= "secBattMonitor",
+	.id		= -1,
+	.num_resources	= 0,
+	.dev = {
+		.platform_data = &samsung_battery_config_data,
+	},
+};
+
+
+#if defined( CONFIG_SAMSUNG_PHONE_SVNET )
+
+static void ipc_hsi_cfg_gpio( void );
+
+static struct ipc_hsi_platform_data ipc_hsi_data = {
+	.gpio_suspend_request = OMAP4430_GPIO_MIPI_HSI_SUSPEND_REQUEST,
+
+	.cfg_gpio = ipc_hsi_cfg_gpio,
+};
+
+static struct resource ipc_hsi_res[] = {
+	[ 0 ] = {	 // suspend_request irq
+		.start = OMAP_GPIO_IRQ( OMAP4430_GPIO_MIPI_HSI_SUSPEND_REQUEST ),
+		.end = OMAP_GPIO_IRQ( OMAP4430_GPIO_MIPI_HSI_SUSPEND_REQUEST ),
+		.flags = IORESOURCE_IRQ,
+	},
+};
+#if defined( CONFIG_MIPI_HSI_LOOPBACK_TEST )
+static struct platform_device mipi_hsi_test = {
+	.name = "onedram",
+	.id = -1,
+	.num_resources = ARRAY_SIZE( mipi_hsi_res ),
+	.resource = mipi_hsi_res,
+	.dev = {
+		.platform_data = &mipi_hsi_data,
+	},
+};
+#else
+static struct platform_device ipc_hsi = {
+	.name = "onedram",
+	.id = -1,
+	.num_resources = ARRAY_SIZE( ipc_hsi_res ),
+	.resource = ipc_hsi_res,
+	.dev = {
+		.platform_data = &ipc_hsi_data,
+	},
+};
+#endif
+
+static void ipc_hsi_cfg_gpio( void )
+{
+	int err = 0;
+	
+#ifdef _OMAP_MUX_SETTING
+	void __iomem* gpio_reg_addr;
+	u32 reg_val;
+#endif
+	
+	unsigned gpio_suspend_request = ipc_hsi_data.gpio_suspend_request;
+
+#ifdef _OMAP_MUX_SETTING
+	// gpio_56 ( SUSPEND_REQUEST )
+      	gpio_reg_addr = ( void __iomem* )( OMAP4_CTRL_MODULE_PAD_CORE_MUX_PBASE + OMAP4_CTRL_MODULE_PAD_GPMC_NADV_ALE_OFFSET );
+      	reg_val = omap_readl( ( u32 )gpio_reg_addr );
+      	reg_val &= 0xFFFF0000; // save origin val
+      	reg_val |= 0x0000c10b; // Muxmod 3,  14,15bit set1 : wakeup event
+      	omap_writel( reg_val, ( u32 )gpio_reg_addr );
+	printk( "ipc_hsi_cfg_gpio - %s gpio setting done...\n", "SUSPEND_REQUEST" );
+#endif  //_OMAP_MUX_SETTING
+
+	err = gpio_request( gpio_suspend_request, "SUSPEND_REQUEST" );
+	if( err ) {
+		printk( "ipc_hsi_cfg_gpio - fail to request gpio %s : %d\n", "SUSPEND_REQUEST", err );
+	}
+	else {
+		gpio_direction_input( gpio_suspend_request );
+	}
+	
+	// Irq Setting
+	set_irq_type( OMAP_GPIO_IRQ( OMAP4430_GPIO_MIPI_HSI_SUSPEND_REQUEST ), IRQ_TYPE_EDGE_BOTH );
+}
+
+static void modemctl_cfg_gpio( void );
+
+
+static struct modemctl_platform_data mdmctl_data = {
+	.name = "xmm",
+	
+	.gpio_phone_on = OMAP4430_GPIO_MIPI_HSI_CP_ON,
+	.gpio_phone_active = OMAP4430_GPIO_MIPI_HSI_PHONE_ACTIVE,
+	.gpio_pda_active = OMAP4430_GPIO_MIPI_HSI_PDA_ACTIVE,
+	.gpio_cp_reset = OMAP4430_GPIO_MIPI_HSI_CP_RST,
+	.gpio_reset_req_n = OMAP4430_GPIO_MIPI_HSI_RESET_REQ_N,
+
+	//.gpio_con_cp_sel = OMAP_GPIO_CON_CP_SEL,
+	//.gpio_phone_on = GPIO_PHONE_ON,
+	//.gpio_usim_boot = GPIO_USIM_BOOT,
+	//.gpio_sim_ndetect = GPIO_SIM_nDETECT,
+	
+	.cfg_gpio = modemctl_cfg_gpio,
+};
+
+static struct resource mdmctl_res[] = {
+	[ 0 ] = {
+		.start = OMAP_GPIO_IRQ( OMAP4430_GPIO_MIPI_HSI_PHONE_ACTIVE ), // phone active irq
+		.end = OMAP_GPIO_IRQ( OMAP4430_GPIO_MIPI_HSI_PHONE_ACTIVE ),
+		.flags = IORESOURCE_IRQ,
+	},
+};
+
+static struct platform_device modemctl = {
+	.name = "modemctl",
+	.id = -1,
+	.num_resources = ARRAY_SIZE( mdmctl_res ),
+	.resource = mdmctl_res,
+	.dev = {
+		.platform_data = &mdmctl_data,
+	},
+};
+
+static void modemctl_cfg_gpio( void )
+{
+	int err = 0;
+
+#ifdef _OMAP_MUX_SETTING
+	u32 gpio_reg_addr;
+	u32 reg_val;
+#endif
+
+	unsigned gpio_phone_on = mdmctl_data.gpio_phone_on;
+	unsigned gpio_cp_rst = mdmctl_data.gpio_cp_reset;
+	unsigned gpio_pda_active = mdmctl_data.gpio_pda_active;
+	unsigned gpio_phone_active = mdmctl_data.gpio_phone_active;
+	unsigned gpio_reset_req_n = mdmctl_data.gpio_reset_req_n;
+
+	// Mux Setting
+#ifdef _OMAP_MUX_SETTING
+	// gpio_50 ( RESET_REQ_N )
+     	gpio_reg_addr = ( u32 ) ( OMAP4_CTRL_MODULE_PAD_CORE_MUX_PBASE + OMAP4_CTRL_MODULE_PAD_GPMC_NCS0_OFFSET );
+      	//reg_val = __raw_readl( gpio_reg_addr );
+      	reg_val = omap_readl( gpio_reg_addr );
+      	reg_val &= 0xFFFF0000; // save origin val
+      	reg_val |= 0x0000010b; // Muxmod 3
+       //__raw_writel( reg_val, gpio_reg_addr );
+       omap_writel( reg_val, ( OMAP4_CTRL_MODULE_PAD_CORE_MUX_PBASE + OMAP4_CTRL_MODULE_PAD_GPMC_NCS0_OFFSET ) );
+	printk( "modemctl_cfg_gpio - %s gpio setting done...\n", "RESET_REQ_N" );
+
+	// gpio_36 ( CP_ON )
+      	gpio_reg_addr = ( u32 ) ( OMAP4_CTRL_MODULE_PAD_CORE_MUX_PBASE + OMAP4_CTRL_MODULE_PAD_GPMC_AD12_OFFSET );
+      	reg_val = omap_readl( gpio_reg_addr );
+      	reg_val &= 0xFFFF0000; // save origin val
+      	reg_val |= 0x0000010b; // Muxmod 3
+      	omap_writel( reg_val, gpio_reg_addr );
+	printk( "modemctl_cfg_gpio - %s gpio setting done...\n", "CP_ON" );
+
+	// gpio_wk2 ( CP_RST )
+      	gpio_reg_addr = ( u32 ) ( OMAP4_CTRL_MODULE_PAD_WKUP_MUX_PBASE + OMAP4_CTRL_MODULE_PAD_SIM_RESET_OFFSET );
+      	reg_val = omap_readl( gpio_reg_addr );
+      	reg_val &= 0xFFFF0000; // save origin val
+      	reg_val |= 0x0000011b; // PULLUP (4bit) , Muxmod 3
+      	omap_writel( reg_val, gpio_reg_addr );
+	printk( "modemctl_cfg_gpio - %s gpio setting done...\n", "CP_RST" );
+
+	// gpio_120 ( PHONE_ACTIVE ), gpio_119 ( PDA_ACTIVE )
+      	gpio_reg_addr = ( u32 ) ( OMAP4_CTRL_MODULE_PAD_CORE_MUX_PBASE + OMAP4_CTRL_MODULE_PAD_ABE_DMIC_CLK1_OFFSET );
+      	reg_val = omap_readl( gpio_reg_addr );
+      	reg_val &= 0x00000000; // save origin val
+      	//reg_val |= 0x010b010b; // Muxmod 3, Muxmod 3
+      	reg_val |= 0x01030103; // Muxmod 3, Muxmod 3, pullup/down disabled ( B -> 3)
+      	omap_writel( reg_val, gpio_reg_addr );  
+	printk( "modemctl_cfg_gpio - %s gpio setting done...\n", "PDA_ACTIVE" );
+	printk( "modemctl_cfg_gpio - %s gpio setting done...\n", "PHONE_ACTIVE" );
+#endif  //_OMAP_MUX_SETTING
+
+	err = gpio_request( gpio_reset_req_n, "RESET_REQ_N" );
+	if( err ) {
+		printk( "modemctl_cfg_gpio - fail to request gpio %s : %d\n", "RESET_REQ_N", err );
+	}
+	else {
+		gpio_direction_output( gpio_reset_req_n, 0 );
+	}
+	
+	err = gpio_request( gpio_phone_on, "CP_ON" );
+	if( err ) {
+		printk( "modemctl_cfg_gpio - fail to request gpio %s : %d\n", "CP_ON", err );
+	}
+	else {
+		gpio_direction_output( gpio_phone_on, 0 );
+	}
+
+	err = gpio_request( gpio_cp_rst, "CP_RST" );
+	if( err ) {
+		printk( "modemctl_cfg_gpio - fail to request gpio %s : %d\n", "CP_RST", err );
+	}
+	else {
+		gpio_direction_output( gpio_cp_rst, 0 );
+	}
+
+	err = gpio_request( gpio_pda_active, "PDA_ACTIVE" );
+	if( err ) {
+		printk( "modemctl_cfg_gpio - fail to request gpio %s : %d\n", "PDA_ACTIVE", err );
+	}
+	else {
+		gpio_direction_output( gpio_pda_active, 0 );
+	}
+	
+	err = gpio_request( gpio_phone_active, "PHONE_ACTIVE" );
+	if( err ) {
+		printk( "modemctl_cfg_gpio - fail to request gpio %s : %d\n", "PHONE_ACTIVE", err );
+	}
+	else {
+		gpio_direction_output( gpio_phone_active, 0 );
+	}
+	
+	set_irq_type( OMAP_GPIO_IRQ( OMAP4430_GPIO_MIPI_HSI_PHONE_ACTIVE ), IRQ_TYPE_EDGE_BOTH );
+	//set_irq_type( gpio_sim_ndetect, IRQ_TYPE_EDGE_BOTH );
+}
+#endif // CONFIG_SAMSUNG_PHONE_SVNET
+
+static struct platform_device *t1_omap4_devices[] __initdata = {
+	&wl128x_device,
+	&t1_omap4_hdmi_audio_device,
+	&t1_omap4_keypad_led,
+	&samsung_omap4_pwr_device,
+	&samsung_omap4_gyro_lp530al_device,
+	&pwmbacklight_device,
+	&pwm_bl_device,
+	&samsung_battery_device,
+	&samsung_charger_device,
+	&pwm_haptic_device,
+#ifdef CONFIG_EAR_MIC_ADC
+	&t1_omap4_ear_mic_adc_device,
+#endif
+#ifdef CONFIG_SWITCH_GPIO
+	&headset_switch_device,
+#endif
+#ifdef CONFIG_INPUT_EAR_KEY
+	&board_ear_key_device,
+#endif
+#if defined( CONFIG_SAMSUNG_PHONE_SVNET )
+#if defined( CONFIG_MIPI_HSI_LOOPBACK_TEST )
+	&mipi_hsi_test,
+#else
+	&ipc_hsi,
+#endif
+	&modemctl,
+#endif // CONFIG_SAMSUNG_PHONE_SVNET
+};
+
+static void __init samsung_t1_omap4430_init_irq(void)
+{
+	omap2_init_common_hw(NULL, NULL);
+#ifdef CONFIG_OMAP_32K_TIMER
+	omap2_gp_clockevent_set_gptimer(1);
+#endif
+	gic_init_irq();
+	sr_class3_init();
+}
+
+static struct omap_musb_board_data musb_board_data = {
+	.interface_type		= MUSB_INTERFACE_UTMI,
+#ifdef CONFIG_USB_MUSB_OTG
+	.mode			= MUSB_OTG,
+#elif defined(CONFIG_USB_MUSB_HDRC_HCD)
+	.mode			= MUSB_HOST,
+#elif defined(CONFIG_USB_GADGET_MUSB_HDRC)
+	.mode			= MUSB_PERIPHERAL,
+#endif
+	.power			= 100,
+};
+
+static struct omap2_hsmmc_info mmc[] = {
+	{
+		.mmc		= 2,
+		.caps		= MMC_CAP_8_BIT_DATA,
+		.gpio_cd	= -EINVAL,
+		.gpio_wp	= -EINVAL,
+		.ocr_mask	= MMC_VDD_165_195,
+		.nonremovable   = true,
+#ifdef CONFIG_PM_RUNTIME
+		.power_saving	= true,
+#endif
+	},
+	{
+		.mmc		= 1,
+		.caps		= MMC_CAP_8_BIT_DATA,
+		.gpio_cd	= -EINVAL,
+		.gpio_wp	= -EINVAL,
+#ifdef CONFIG_PM_RUNTIME
+		.power_saving	= true,
+#endif
+	},
+	{
+		.mmc		= 5,
+		.caps		= MMC_CAP_8_BIT_DATA,
+		.gpio_cd	= -EINVAL,
+		.gpio_wp        = 4,
+		.ocr_mask	= MMC_VDD_165_195,
+#ifdef CONFIG_PM_RUNTIME
+		.power_saving	= false,
+#endif
+	},
+	{}	/* Terminator */
+};
+
+
+static int omap4_twl6030_hsmmc_late_init(struct device *dev)
+{
+	int ret = 0;
+	struct platform_device *pdev = container_of(dev,
+				struct platform_device, dev);
+	struct omap_mmc_platform_data *pdata = dev->platform_data;
+
+	/* Setting MMC1 Card detect Irq */
+	if (pdev->id == 0) {
+		ret = twl6030_mmc_card_detect_config();
+		if (ret)
+			pr_err("Failed configuring MMC1 card detect\n");
+		pdata->slots[0].card_detect_irq = TWL6030_IRQ_BASE +
+						MMCDETECT_INTR_OFFSET;
+		pdata->slots[0].card_detect = twl6030_mmc_card_detect;
+	}
+	return ret;
+}
+
+static __init void omap4_twl6030_hsmmc_set_late_init(struct device *dev)
+{
+	struct omap_mmc_platform_data *pdata;
+
+	/* dev can be null if CONFIG_MMC_OMAP_HS is not set */
+	if (!dev)
+		return;
+
+	pdata = dev->platform_data;
+	pdata->init = omap4_twl6030_hsmmc_late_init;
+}
+
+static int __init omap4_twl6030_hsmmc_init(struct omap2_hsmmc_info *controllers)
+{
+	struct omap2_hsmmc_info *c;
+
+	omap2_hsmmc_init(controllers);
+	for (c = controllers; c->mmc; c++)
+		omap4_twl6030_hsmmc_set_late_init(c->dev);
+
+	return 0;
+}
+
+static struct regulator_consumer_supply t1_omap4_vmmc_supply[] = {
+	{
+		.supply = "vmmc",
+		.dev_name = "mmci-omap-hs.0",
+	},
+};
+
+static struct regulator_consumer_supply t1_omap4_cam2_supply[] = {
+	{
+		.supply = "cam2pwr",
+	},
+};
+
+static struct regulator_consumer_supply t1_omap4_vusim_supply[] = {
+	{
+		.supply = "vusim",
+		.dev_name = "display0",
+	},
+};
+
+
+static struct regulator_init_data t1_omap4_vaux1 = {
+	.constraints = {
+		.min_uV			= 1000000,
+		.max_uV			= 3000000,
+		.apply_uV		= true,
+		.valid_modes_mask	= REGULATOR_MODE_NORMAL
+					| REGULATOR_MODE_STANDBY,
+		.valid_ops_mask	 = REGULATOR_CHANGE_VOLTAGE
+					| REGULATOR_CHANGE_MODE
+					| REGULATOR_CHANGE_STATUS,
+	},
+};
+
+static struct regulator_init_data t1_omap4_vaux2 = {
+	.constraints = {
+		.min_uV			= 1200000,
+		.max_uV			= 2800000,
+		.apply_uV		= true,
+		.valid_modes_mask	= REGULATOR_MODE_NORMAL
+					| REGULATOR_MODE_STANDBY,
+		.valid_ops_mask	 = REGULATOR_CHANGE_VOLTAGE
+					| REGULATOR_CHANGE_MODE
+					| REGULATOR_CHANGE_STATUS,
+	},
+};
+
+static struct regulator_init_data t1_omap4_vaux3 = {
+	.constraints = {
+		.min_uV			= 1000000,
+		.max_uV			= 3000000,
+		.apply_uV		= true,
+		.valid_modes_mask	= REGULATOR_MODE_NORMAL
+					| REGULATOR_MODE_STANDBY,
+		.valid_ops_mask	 = REGULATOR_CHANGE_VOLTAGE
+					| REGULATOR_CHANGE_MODE
+					| REGULATOR_CHANGE_STATUS,
+	},
+	.num_consumer_supplies = 1,
+	.consumer_supplies = t1_omap4_cam2_supply,
+};
+
+/* VMMC1 for MMC1 card */
+static struct regulator_init_data t1_omap4_vmmc = {
+	.constraints = {
+		.min_uV			= 1200000,
+		.max_uV			= 3000000,
+		.apply_uV		= true,
+		.valid_modes_mask	= REGULATOR_MODE_NORMAL
+					| REGULATOR_MODE_STANDBY,
+		.valid_ops_mask	 = REGULATOR_CHANGE_VOLTAGE
+					| REGULATOR_CHANGE_MODE
+					| REGULATOR_CHANGE_STATUS,
+	},
+	.num_consumer_supplies  = 1,
+	.consumer_supplies      = t1_omap4_vmmc_supply,
+};
+
+static struct regulator_init_data t1_omap4_vpp = {
+	.constraints = {
+		.min_uV			= 1800000,
+		.max_uV			= 2500000,
+		.apply_uV		= true,
+		.valid_modes_mask	= REGULATOR_MODE_NORMAL
+					| REGULATOR_MODE_STANDBY,
+		.valid_ops_mask	 = REGULATOR_CHANGE_VOLTAGE
+					| REGULATOR_CHANGE_MODE
+					| REGULATOR_CHANGE_STATUS,
+	},
+};
+
+static struct regulator_init_data t1_omap4_vusim = {
+	.constraints = {
+		.min_uV			= 1200000,
+		.max_uV			= 3000000,
+		.apply_uV		= true,
+		.valid_modes_mask	= REGULATOR_MODE_NORMAL
+					| REGULATOR_MODE_STANDBY,
+		.valid_ops_mask	 = REGULATOR_CHANGE_VOLTAGE
+					| REGULATOR_CHANGE_MODE
+					| REGULATOR_CHANGE_STATUS,
+	},
+   .num_consumer_supplies  = 1,
+   .consumer_supplies      = &t1_omap4_vusim_supply,
+};
+
+static struct regulator_init_data t1_omap4_vana = {
+	.constraints = {
+		.min_uV			= 2100000,
+		.max_uV			= 2100000,
+		.apply_uV		= true,
+		.valid_modes_mask	= REGULATOR_MODE_NORMAL
+					| REGULATOR_MODE_STANDBY,
+		.valid_ops_mask	 = REGULATOR_CHANGE_MODE
+					| REGULATOR_CHANGE_STATUS,
+	},
+};
+
+static struct regulator_init_data t1_omap4_vcxio = {
+	.constraints = {
+		.min_uV			= 1800000,
+		.max_uV			= 1800000,
+		.apply_uV		= true,
+		.valid_modes_mask	= REGULATOR_MODE_NORMAL
+					| REGULATOR_MODE_STANDBY,
+		.valid_ops_mask	 = REGULATOR_CHANGE_MODE
+					| REGULATOR_CHANGE_STATUS,
+	},
+};
+
+static struct regulator_init_data t1_omap4_vdac = {
+	.constraints = {
+		.min_uV			= 1800000,
+		.max_uV			= 1800000,
+		.apply_uV		= true,
+		.valid_modes_mask	= REGULATOR_MODE_NORMAL
+					| REGULATOR_MODE_STANDBY,
+		.valid_ops_mask	 = REGULATOR_CHANGE_MODE
+					| REGULATOR_CHANGE_STATUS,
+	},
+};
+
+static struct regulator_init_data t1_omap4_vusb = {
+	.constraints = {
+		.min_uV			= 3300000,
+		.max_uV			= 3300000,
+		.apply_uV		= true,
+		.valid_modes_mask	= REGULATOR_MODE_NORMAL
+					| REGULATOR_MODE_STANDBY,
+		.valid_ops_mask	 =	REGULATOR_CHANGE_MODE
+					| REGULATOR_CHANGE_STATUS,
+	},
+};
+
+static struct twl4030_madc_platform_data t1_omap4_gpadc_data = {
+	.irq_line	= 1,
+};
+
+static int t1_omap4_batt_table[] = {
+	/* adc code for temperature in degree C */
+	929, 925, /* -2 ,-1 */
+	920, 917, 912, 908, 904, 899, 895, 890, 885, 880, /* 00 - 09 */
+	875, 869, 864, 858, 853, 847, 841, 835, 829, 823, /* 10 - 19 */
+	816, 810, 804, 797, 790, 783, 776, 769, 762, 755, /* 20 - 29 */
+	748, 740, 732, 725, 718, 710, 703, 695, 687, 679, /* 30 - 39 */
+	671, 663, 655, 647, 639, 631, 623, 615, 607, 599, /* 40 - 49 */
+	591, 583, 575, 567, 559, 551, 543, 535, 527, 519, /* 50 - 59 */
+	511, 504, 496 /* 60 - 62 */
+};
+static struct twl4030_bci_platform_data t1_omap4_bci_data = {
+	.monitoring_interval		= 10,
+	.max_charger_currentmA		= 1500,
+	.max_charger_voltagemV		= 4560,
+	.max_bat_voltagemV		= 4200,
+	.low_bat_voltagemV		= 3300,
+	.termination_currentmA		= 50,
+	.battery_tmp_tbl		= t1_omap4_batt_table,
+	.tblsize			= ARRAY_SIZE(t1_omap4_batt_table),
+};
+
+static void omap4_audio_conf(void)
+{
+    /* twl6040 naudint */
+    omap_mux_init_signal("sys_nirq2.sys_nirq2", \
+			        OMAP_PIN_INPUT_PULLUP);
+}
+
+static struct twl4030_codec_audio_data twl6040_audio = {
+	/* Add audio only data */
+	.mainmic_gpio = T1_OMAP4430_MICBIAS_EN_GPIO,
+};
+
+static struct twl4030_codec_vibra_data twl6040_vibra = {
+	 .max_timeout    = 15000,
+	 .initial_vibrate = 0,
+
+};
+
+static struct twl4030_codec_data twl6040_codec = {
+	.audio_mclk	= 38400000,
+	.audio = &twl6040_audio,
+	.vibra = &twl6040_vibra,
+    .audpwron_gpio  = 127,
+    .naudint_irq    = OMAP44XX_IRQ_SYS_2N,
+    .irq_base   = TWL6040_CODEC_IRQ_BASE,
+};
+
+static struct twl4030_platform_data t1_omap4_twldata = {
+	.irq_base	= TWL6030_IRQ_BASE,
+	.irq_end	= TWL6030_IRQ_END,
+
+	/* Regulators */
+	.vmmc		= &t1_omap4_vmmc,
+	.vpp		= &t1_omap4_vpp,
+	.vusim		= &t1_omap4_vusim,
+	.vana		= &t1_omap4_vana,
+	.vcxio		= &t1_omap4_vcxio,
+	.vdac		= &t1_omap4_vdac,
+	.vusb		= &t1_omap4_vusb,
+	.vaux1		= &t1_omap4_vaux1,
+	.vaux2		= &t1_omap4_vaux2,
+	.vaux3		= &t1_omap4_vaux3,
+	.madc           = &t1_omap4_gpadc_data,
+	.bci            = &t1_omap4_bci_data,
+
+	/* children */
+	.codec          = &twl6040_codec,
+};
+
+static struct i2c_board_info __initdata t1_omap4_i2c_boardinfo[] = {
+	{
+		I2C_BOARD_INFO("twl6030", 0x48),
+		.flags = I2C_CLIENT_WAKE,
+		.irq = OMAP44XX_IRQ_SYS_1N,
+		.platform_data = &t1_omap4_twldata,
+	},
+};
+/*atmel_mxt224E*/
+static void t1_omap_touch_init_hw(struct mxt_platform_data *pdata)
+{
+        int error;
+        pr_info("(%s,%d)\n", __func__, __LINE__);
+
+        /* TSP INT GPIO initialize */
+        error = gpio_request(pdata->irq_gpio, "tsp_int");
+        if (error != 0) {
+                pr_err("tsp_int request FAIL error = %d", error);
+        }
+        gpio_direction_input(pdata->irq_gpio);
+}
+
+static void t1_omap_touch_exit_hw(struct mxt_platform_data *pdata)
+{
+        pr_info("(%s,%d)\n", __func__, __LINE__);
+        gpio_free(pdata->irq_gpio);
+}
+
+static void t1_omap_touch_suspend_hw(struct mxt_platform_data *pdata)
+{
+        pr_info("(%s,%d)\n", __func__, __LINE__);
+        /* first power off (off sequence: avdd -> vdd) */
+        gpio_direction_output(T1_OMAP4430_TOUCH_EN_GPIO, 0);
+        pr_info("[TSP] Power Off!!");
+}
+static void t1_omap_touch_resume_hw(struct mxt_platform_data *pdata)
+{
+        pr_info("(%s,%d)\n", __func__, __LINE__);
+        gpio_direction_output(T1_OMAP4430_TOUCH_EN_GPIO, 1);
+        msleep(100);
+        pr_info("[TSP] Power On!!");
+
+}
+
+static struct mxt_platform_data t1_omap_mxt224E_platform_data = {
+        .platform_name = "mxt224E TSP",
+        .numtouch = 10,
+        .max_x = 800-1,
+        .max_y = 480-1,
+        .init_platform_hw = t1_omap_touch_init_hw,
+        .exit_platform_hw = t1_omap_touch_exit_hw,
+        .suspend_platform_hw = t1_omap_touch_suspend_hw,
+        .resume_platform_hw = t1_omap_touch_resume_hw,
+        .irq_gpio = T1_OMAP4430_TOUCH_nINT_GPIO,
+};
+
+#ifndef DISABLE_I2C2_HW_SPINLOCK
+static struct i2c_board_info __initdata t1_omap4_i2c_2_boardinfo[] = {
+	{
+		I2C_BOARD_INFO("secFuelgaugeDev", 0x34),
+	},
+	{
+		I2C_BOARD_INFO("cam_pmic", 0x7D),
+	},
+	{
+		I2C_BOARD_INFO("M5MO", 0x3E >> 1),
+	}
+};
+#endif
+static struct pn544_i2c_platform_data pn544_data = {
+         .irq_gpio = OMAP4430_GPIO_NFC_IRQ,
+         .ven_gpio = OMAP4430_GPIO_NFC_VEN,
+         .firm_gpio = OMAP4430_GPIO_NFC_FIRM,
+};
+static struct i2c_board_info __initdata t1_omap4_i2c_3_boardinfo[] = {
+	{
+		I2C_BOARD_INFO("cypress_touchkey", 0x20),
+	},
+	{
+		I2C_BOARD_INFO("max17040", 0x36),
+ 	},
+        {
+                I2C_BOARD_INFO("mxt_touch", 0x4a),
+                .irq            = OMAP_GPIO_IRQ(T1_OMAP4430_TOUCH_nINT_GPIO),
+                .platform_data = &t1_omap_mxt224E_platform_data,
+        },
+
+};
+
+static struct i2c_board_info __initdata t1_omap4_i2c_4_boardinfo[] = {
+	{
+		I2C_BOARD_INFO(SENSOR_MPU_NAME, 0x68),
+		.irq = OMAP_GPIO_IRQ(T1_OMAP4430_MPU3050_INT_GPIO),
+		.platform_data = &mpu_data,
+	},
+	{
+		I2C_BOARD_INFO("cm3663",0x11),
+		.platform_data = &cm3663_pdata,
+		//.irq = OMAP_GPIO_IRQ(T1_OMAP4430_GP2A_PS_VOUT),
+
+	},
+	{
+	   I2C_BOARD_INFO("fsa9480", (0x4A >> 1)),
+	   .platform_data = &omap4_fsa9480_pdata,
+	   .irq = OMAP_GPIO_IRQ(OMAP4430_GPIO_JACK_NINT),
+	},
+	{
+	   I2C_BOARD_INFO("pn544",0x2b),
+	   .platform_data = &pn544_data,
+	   .irq = OMAP_GPIO_IRQ(OMAP4430_GPIO_NFC_IRQ),
+	},
+
+
+};
+
+static const struct usbhs_omap_platform_data usbhs_pdata __initconst = {
+	.port_mode[0] = OMAP_OHCI_PORT_MODE_PHY_4PIN_DPDM,
+	.port_mode[1] = OMAP_USBHS_PORT_MODE_UNUSED,
+	.port_mode[2] = OMAP_USBHS_PORT_MODE_UNUSED,
+	.phy_reset  = false,
+	.reset_gpio_port[0]  = -EINVAL,
+	.reset_gpio_port[1]  = -EINVAL,
+	.reset_gpio_port[2]  = -EINVAL
+};
+
+static struct omap_i2c_bus_board_data __initdata t1_omap4_i2c_bus_pdata;
+static struct omap_i2c_bus_board_data __initdata t1_omap4_i2c_2_bus_pdata;
+static struct omap_i2c_bus_board_data __initdata t1_omap4_i2c_3_bus_pdata;
+static struct omap_i2c_bus_board_data __initdata t1_omap4_i2c_4_bus_pdata;
+
+/*
+ * LPDDR2 Configuration Data:
+ * The memory organisation is as below :
+ *	EMIF1 - CS0 -   2 Gb
+ *	CS1 -   NULL
+ *	EMIF2 - CS0 -   2 Gb
+ *	CS1 -    NULL
+ *	--------------------
+ *	TOTAL -         4 Gb
+ *
+ * Same devices installed on EMIF1 and EMIF2
+ */
+static __initdata struct emif_device_details emif_devices = {
+	.cs0_device = &elpida_2G_S4,
+	.cs1_device = NULL
+};
+
+static void __init omap_i2c_hwspinlock_init(int bus_id, unsigned int
+			spinlock_id, struct omap_i2c_bus_board_data *pdata)
+{
+	pdata->handle = hwspinlock_request_specific(spinlock_id);
+	if (pdata->handle != NULL) {
+		pdata->hwspinlock_lock = hwspinlock_lock;
+		pdata->hwspinlock_unlock = hwspinlock_unlock;
+	} else {
+		pr_err("I2C hwspinlock request failed for bus %d\n", bus_id);
+	}
+}
+
+static int __init omap4_i2c_init(void)
+{
+	omap_i2c_hwspinlock_init(1, 0, &t1_omap4_i2c_bus_pdata);
+#ifndef DISABLE_I2C2_HW_SPINLOCK
+	omap_i2c_hwspinlock_init(2, 1, &t1_omap4_i2c_2_bus_pdata);
+#endif
+	omap_i2c_hwspinlock_init(3, 2, &t1_omap4_i2c_3_bus_pdata);
+	omap_i2c_hwspinlock_init(4, 3, &t1_omap4_i2c_4_bus_pdata);
+	/*
+	 * Phoenix Audio IC needs I2C1 to
+	 * start with 400 KHz or less
+	 */
+	omap_register_i2c_bus(1, 400, &t1_omap4_i2c_bus_pdata,
+		t1_omap4_i2c_boardinfo, ARRAY_SIZE(t1_omap4_i2c_boardinfo));
+#ifndef DISABLE_I2C2_HW_SPINLOCK
+	omap_register_i2c_bus(2, 400, &t1_omap4_i2c_2_bus_pdata,
+		t1_omap4_i2c_2_boardinfo, ARRAY_SIZE(t1_omap4_i2c_2_boardinfo));
+#endif
+	omap_register_i2c_bus(3, 400, &t1_omap4_i2c_3_bus_pdata,
+		t1_omap4_i2c_3_boardinfo, ARRAY_SIZE(t1_omap4_i2c_3_boardinfo));
+	omap_register_i2c_bus(4, 400, &t1_omap4_i2c_4_bus_pdata,
+		t1_omap4_i2c_4_boardinfo, ARRAY_SIZE(t1_omap4_i2c_4_boardinfo));
+	return 0;
+}
+
+
+static u16 control_pbias_offset;
+
+void t1_omap4_gpiowk_setup()
+{
+	#define CONTROL_GPIOWK 0x4A31E600
+	u32 val;
+	u32 * ctrl_gpiowk;
+
+	control_pbias_offset = OMAP44XX_CONTROL_PBIAS_LITE;
+	val = omap_ctrl_readl(control_pbias_offset);
+
+	val = val | (1 <<28);
+	omap_ctrl_writel(val, control_pbias_offset);
+
+	val = omap_ctrl_readl(control_pbias_offset);
+
+
+	ctrl_gpiowk = (u32 *) ioremap(CONTROL_GPIOWK, 4);
+	if (!ctrl_gpiowk) {
+		printk(KERN_ERR"OMAP_pad_config: ioremap failed with addr %lx\n",
+			CONTROL_GPIOWK);
+		return;
+	}
+
+	val =  __raw_readl(ctrl_gpiowk);
+
+	val |= (1 <<28);
+	__raw_writel(val, ctrl_gpiowk);
+
+	val =  __raw_readl(ctrl_gpiowk);
+
+	val = omap_ctrl_readl(control_pbias_offset);
+
+	if ((val & (1<<29))!=0)
+	{
+		val = val & ~(1 <<28);
+		omap_ctrl_writel(val, control_pbias_offset);
+
+		val = val & ~(1 <<28);
+		__raw_writel(val, ctrl_gpiowk);
+	}
+
+	val = omap_ctrl_readl(control_pbias_offset);
+ 	if((val & (1<<30)) == 1)
+		printk("SIM_VDDS is set to 3 volt\n");
+	else
+		printk("SIM_VDDS is set to 1.8 volt\n");
+
+	return;
+}
+#ifdef CONFIG_SWITCH_GPIO
+static void __init t1_omap4_headset_init(void)
+{
+	u32 gpio_reg_addr;
+	u32 reg_val;
+	u32 ret;
+       	ret = gpio_request(T1_OMAP4430_MICBIAS_EN2_GPIO, "EAR_MIC_BIAS_GPIO");
+        if (ret) {
+                printk(KERN_ERR "failed to get EAR_MIC_BIAS_GPIO\n");  
+        }
+	gpio_direction_output(T1_OMAP4430_MICBIAS_EN2_GPIO, 0);
+      	gpio_reg_addr = ( u32 ) ( OMAP4_CTRL_MODULE_PAD_WKUP_MUX_PBASE + OMAP4_CTRL_MODULE_PAD_SIM_IO_OFFSET );
+      	reg_val = omap_readl( gpio_reg_addr );
+      	reg_val &= 0xFFFF0000; // save origin val
+      	reg_val |= 0x0000011b; // PULLUP (4bit) , Muxmod 3
+      	printk("0x%x, 0x%x\n", reg_val, gpio_reg_addr);
+      	omap_writel( reg_val, gpio_reg_addr );
+	printk( "t1_omap4_headset_init - DET_3.5 gpio setting done...\n");
+	#ifdef CONFIG_INPUT_EAR_KEY
+	board_ear_key_resource.start = gpio_to_irq(T1_OMAP4430_EAR_SEND_END_GPIO);
+	#endif
+}
+#endif
+
+#if (CONFIG_SAMSUNG_REL_HW_REV == 0)
+static void __init t1_omap4_display_init(void)
+{
+		int r;
+
+		mlcd_rst_gpio	 = T1_OMAP4430_MLCD_RST_GPIO;
+
+		r = gpio_request(mlcd_rst_gpio, "LCD Reset GPIO");
+		if (r) {
+				printk(KERN_ERR "failed to get LCD Reset GPIO\n");
+				goto err1;
+		}
+
+		return;
+
+err1:
+		gpio_free(mlcd_rst_gpio);
+err0:
+		return;
+}
+
+static void t1_omap4_touch_init(void)
+{
+	printk("[SHANKAR] %s[%d] Entry \n", __func__, __LINE__);
+	gpio_request(T1_OMAP4430_TOUCH_EN_GPIO, "TOUCH ENable GPIO");
+	gpio_direction_output(T1_OMAP4430_TOUCH_EN_GPIO, 1);
+	msleep(350);
+	gpio_free(T1_OMAP4430_TOUCH_EN_GPIO);
+	printk("[SHANKAR] %s[%d] exit \n", __func__, __LINE__);
+	t1_omap_touch_init_hw(&t1_omap_mxt224E_platform_data);
+	
+}
+static void t1_omap4_vib_motor_init(void)
+{
+}
+#else
+#endif
+static void enable_board_wakeup_source(void)
+{
+	u16 padconf;
+
+	/* NOTE: Use mx framework when available */
+	/* Enable IO wakeup for the gpio used for primary touchscreen */
+	padconf = omap_readw(CONTROL_CORE_PAD1_GPMC_AD11);
+	padconf |= OMAP44XX_PADCONF_WAKEUPENABLE0;
+	omap_writew(padconf, CONTROL_CORE_PAD1_GPMC_AD11);
+	/* Enabling WKUP capability for TouchKey IRQ GPI0_32 */
+	padconf = omap_readw(CONTROL_CORE_PAD0_GPMC_AD08);
+	padconf |= OMAP44XX_PADCONF_WAKEUPENABLE0;
+	omap_writew(padconf, CONTROL_CORE_PAD0_GPMC_AD08);
+	/* Enabling WKUP capability for TouchScreen IRQ GPI0_43 */
+	padconf = omap_readw(CONTROL_CORE_PAD1_GPMC_AD19);
+	padconf |= OMAP44XX_PADCONF_WAKEUPENABLE1;
+	omap_writew(padconf, CONTROL_CORE_PAD1_GPMC_AD19);
+
+#if (CONFIG_SAMSUNG_REL_HW_REV == 0)
+	/*
+	 * Enable IO daisy for sys_nirq1/2 & HSI CAWAKE line, to be able to
+	 * wakeup from interrupts from PMIC/Audio IC.
+	 * Needed only in Device OFF mode.
+	 */
+	omap_mux_enable_wakeup("sys_nirq1");
+	omap_mux_enable_wakeup("sys_nirq2");
+    	omap_mux_enable_wakeup("usbb1_ulpitll_clk.hsi1_cawake");
+#endif
+}
+
+
+static struct omap_volt_pmic_info omap_pmic_core = {
+	.name = "twl",
+	.slew_rate = 4000,
+	.step_size = 12500,
+	.i2c_addr = 0x12,
+	.i2c_vreg = 0x61,
+	.i2c_cmdreg = 0x62,
+	.vsel_to_uv = omap_twl_vsel_to_uv,
+	.uv_to_vsel = omap_twl_uv_to_vsel,
+	.onforce_cmd = omap_twl_onforce_cmd,
+	.on_cmd = omap_twl_on_cmd,
+	.sleepforce_cmd = omap_twl_sleepforce_cmd,
+	.sleep_cmd = omap_twl_sleep_cmd,
+	.vp_config_erroroffset = 0,
+	.vp_vstepmin_vstepmin = 0x01,
+	.vp_vstepmax_vstepmax = 0x04,
+	.vp_vlimitto_timeout_us = 0x200,
+	.vp_vlimitto_vddmin = 0xA,
+	.vp_vlimitto_vddmax = 0x28,
+};
+
+static struct omap_volt_pmic_info omap_pmic_mpu = {
+	.name = "twl",
+	.slew_rate = 4000,
+	.step_size = 12500,
+	.i2c_addr = 0x12,
+	.i2c_vreg = 0x55,
+	.i2c_cmdreg = 0x56,
+	.vsel_to_uv = omap_twl_vsel_to_uv,
+	.uv_to_vsel = omap_twl_uv_to_vsel,
+	.onforce_cmd = omap_twl_onforce_cmd,
+	.on_cmd = omap_twl_on_cmd,
+	.sleepforce_cmd = omap_twl_sleepforce_cmd,
+	.sleep_cmd = omap_twl_sleep_cmd,
+	.vp_config_erroroffset = 0,
+	.vp_vstepmin_vstepmin = 0x01,
+	.vp_vstepmax_vstepmax = 0x04,
+	.vp_vlimitto_timeout_us = 0x200,
+	.vp_vlimitto_vddmin = 0xA,
+	.vp_vlimitto_vddmax = 0x39,
+};
+
+static struct omap_volt_pmic_info omap_pmic_iva = {
+	.name = "twl",
+	.slew_rate = 4000,
+	.step_size = 12500,
+	.i2c_addr = 0x12,
+	.i2c_vreg = 0x5b,
+	.i2c_cmdreg = 0x5c,
+	.vsel_to_uv = omap_twl_vsel_to_uv,
+	.uv_to_vsel = omap_twl_uv_to_vsel,
+	.onforce_cmd = omap_twl_onforce_cmd,
+	.on_cmd = omap_twl_on_cmd,
+	.sleepforce_cmd = omap_twl_sleepforce_cmd,
+	.sleep_cmd = omap_twl_sleep_cmd,
+	.vp_config_erroroffset = 0,
+	.vp_vstepmin_vstepmin = 0x01,
+	.vp_vstepmax_vstepmax = 0x04,
+	.vp_vlimitto_timeout_us = 0x200,
+	.vp_vlimitto_vddmin = 0xA,
+	.vp_vlimitto_vddmax = 0x2D,
+};
+
+static struct omap_volt_vc_data vc_config = {
+	.vdd0_on = 1350000,        /* 1.35v */
+	.vdd0_onlp = 1350000,      /* 1.35v */
+	.vdd0_ret = 837500,       /* 0.8375v */
+	.vdd0_off = 0,          /* 0 v */
+	.vdd1_on = 1100000,        /* 1.1v */
+	.vdd1_onlp = 1100000,      /* 1.1v */
+	.vdd1_ret = 837500,       /* 0.8375v */
+	.vdd1_off = 0,		/* 0 v */
+	.vdd2_on = 1100000,        /* 1.1v */
+	.vdd2_onlp = 1100000,      /* 1.1v */
+	.vdd2_ret = 837500,       /* .8375v */
+	.vdd2_off = 0,		/* 0 v */
+};
+
+
+void plat_hold_wakelock(void *up, int flag)
+{
+    struct uart_omap_port *up2 = (struct uart_omap_port *)up;
+    /*Specific wakelock for bluetooth usecases*/
+    if ((up2->pdev->id == BLUETOOTH_UART)
+		        && ((flag == WAKELK_TX) || (flag == WAKELK_RX)))
+	        wake_lock_timeout(&uart_lock, 2*HZ);
+
+    /*Specific wakelock for console usecases*/
+    if ((up2->pdev->id != BLUETOOTH_UART)
+		        && ((flag == WAKELK_IRQ) || (flag == WAKELK_RESUME)))
+	        wake_lock_timeout(&uart_lock, 5*HZ);
+    return;
+}
+
+static struct omap_uart_port_info omap_serial_platform_data[] = {
+	{
+		.use_dma        = 0,
+		.dma_rx_buf_size = DEFAULT_RXDMA_BUFSIZE,
+		.dma_rx_poll_rate = DEFAULT_RXDMA_POLLRATE,
+		.dma_rx_timeout = DEFAULT_RXDMA_TIMEOUT,
+		.idle_timeout   = DEFAULT_IDLE_TIMEOUT,
+		.flags          = 1,
+		.plat_hold_wakelock = NULL,
+        .rts_padconf    = 0,
+        .rts_override   = 0,
+        .padconf    = OMAP4_CTRL_MODULE_PAD_SDMMC1_CMD_OFFSET,
+        .padconf_wake_ev = 0,
+        .wk_mask    = 0,
+
+	},
+	{
+		.use_dma        = 0,
+		.dma_rx_buf_size = DEFAULT_RXDMA_BUFSIZE,
+		.dma_rx_poll_rate = DEFAULT_RXDMA_POLLRATE,
+		.dma_rx_timeout = DEFAULT_RXDMA_TIMEOUT,
+		.idle_timeout   = DEFAULT_IDLE_TIMEOUT,
+		.flags          = 1,
+		.plat_hold_wakelock = plat_hold_wakelock,
+        .rts_padconf    = OMAP4_CTRL_MODULE_PAD_UART2_RTS_OFFSET,
+        .rts_override   = 0,
+        .padconf    = OMAP4_CTRL_MODULE_PAD_UART2_RX_OFFSET,
+        .padconf_wake_ev =
+			            OMAP4_CTRL_MODULE_PAD_CORE_PADCONF_WAKEUPEVENT_3,
+        .wk_mask    =
+		            OMAP4_UART2_TX_DUPLICATEWAKEUPEVENT_MASK |
+		            OMAP4_UART2_RX_DUPLICATEWAKEUPEVENT_MASK |
+		            OMAP4_UART2_RTS_DUPLICATEWAKEUPEVENT_MASK |
+		            OMAP4_UART2_CTS_DUPLICATEWAKEUPEVENT_MASK,
+
+	},
+	{
+		.use_dma        = 0,
+		.dma_rx_buf_size = DEFAULT_RXDMA_BUFSIZE,
+		.dma_rx_poll_rate = DEFAULT_RXDMA_POLLRATE,
+		.dma_rx_timeout = DEFAULT_RXDMA_TIMEOUT,
+		.idle_timeout   = DEFAULT_IDLE_TIMEOUT,
+		.flags          = 1,
+		.plat_hold_wakelock = plat_hold_wakelock,
+        .rts_padconf    = 0,
+        .rts_override   = 0,
+        .padconf    = OMAP4_CTRL_MODULE_PAD_UART3_RX_IRRX_OFFSET,
+        .padconf_wake_ev =
+			            OMAP4_CTRL_MODULE_PAD_CORE_PADCONF_WAKEUPEVENT_4,
+        .wk_mask    =
+		            OMAP4_UART3_TX_IRTX_DUPLICATEWAKEUPEVENT_MASK |
+		            OMAP4_UART3_RX_IRRX_DUPLICATEWAKEUPEVENT_MASK |
+		            OMAP4_UART3_RTS_SD_DUPLICATEWAKEUPEVENT_MASK |
+		            OMAP4_UART3_CTS_RCTX_DUPLICATEWAKEUPEVENT_MASK,
+
+	},
+	{
+		.use_dma        = 0,
+		.dma_rx_buf_size = DEFAULT_RXDMA_BUFSIZE,
+		.dma_rx_poll_rate = DEFAULT_RXDMA_POLLRATE,
+		.dma_rx_timeout = DEFAULT_RXDMA_TIMEOUT,
+		.idle_timeout   = DEFAULT_IDLE_TIMEOUT,
+		.flags          = 1,
+		.plat_hold_wakelock = NULL,
+        .rts_padconf    = 0,
+        .rts_override   = 0,
+        .padconf    = OMAP4_CTRL_MODULE_PAD_UART4_RX_OFFSET,
+        .padconf_wake_ev =
+			            OMAP4_CTRL_MODULE_PAD_CORE_PADCONF_WAKEUPEVENT_4,
+        .wk_mask    =
+		            OMAP4_UART4_TX_DUPLICATEWAKEUPEVENT_MASK |
+		            OMAP4_UART4_RX_DUPLICATEWAKEUPEVENT_MASK,
+
+	},
+	{
+		.flags          = 0
+	}
+};
+
+#ifdef CONFIG_OMAP_MUX
+static struct omap_board_mux board_mux[] __initdata = {
+        { .reg_offset = OMAP_MUX_TERMINATOR },
+};
+#else
+#define board_mux       NULL
+#endif
+#ifdef DISABLE_I2C2_HW_SPINLOCK
+void m5mo_fref_start(void)
+{
+    volatile u32 val=0,val2=0;
+    void __iomem *frefclk1_base=NULL, *frefclk2_base=NULL;
+
+    val = 0;
+
+    frefclk1_base = ioremap(0x4A30A314, 4);
+    val = __raw_readl(frefclk1_base);
+    val = val | (1<<8) | (0x01<<2) | (0xF<<16);
+    __raw_writel(val, (frefclk1_base));
+    val = __raw_readl(frefclk1_base);
+    printk(KERN_ERR"\n\t [MBG043 MCLK] AUXCLK1 is %x \n\n",val);
+    iounmap(frefclk1_base);
+      
+	val2 = 0;
+
+    frefclk2_base = ioremap(0x4A30A318, 4);
+    val2 = __raw_readl(frefclk2_base);
+    val2 = val2 | (1<<8) | (0x01<<2) | (0xF<<16);
+    __raw_writel(val2, (frefclk2_base));
+    val2 = __raw_readl(frefclk2_base);
+    printk(KERN_ERR"\n\t [S5KAAFX MCLK] AUXCLK2 is %x \n\n",val2);
+}
+#endif
+
+
+static void enable_rtc_gpio(void){
+        /* To access twl registers we enable gpio6
+         * we need this so the RTC driver can work.
+         */
+        gpio_request(TWL6030_RTC_GPIO, "h_SYS_DRM_MSEC");
+        gpio_direction_output(TWL6030_RTC_GPIO, 1);
+
+        omap_mux_init_signal("fref_clk0_out.gpio_wk6", \
+                OMAP_PIN_OUTPUT | OMAP_PIN_OFF_NONE);
+        return;
+}
+
+/* Disable default configuration of VREF_EN to minimize DDR leakage */
+static void omap4_lpddr2_config(void)
+{
+	int control_io1_3;
+	int control_io2_3;
+
+        control_io1_3 =
+                omap4_ctrl_pad_readl(OMAP4_CTRL_MODULE_PAD_CORE_CONTROL_LPDDR2IO1_3);
+        control_io2_3 =
+                omap4_ctrl_pad_readl(OMAP4_CTRL_MODULE_PAD_CORE_CONTROL_LPDDR2IO2_3);
+        omap4_ctrl_pad_writel(control_io1_3 & 0xFFFFFFF0,
+                OMAP4_CTRL_MODULE_PAD_CORE_CONTROL_LPDDR2IO1_3);
+        omap4_ctrl_pad_writel(control_io2_3 & 0xFFFFFFF0,
+                OMAP4_CTRL_MODULE_PAD_CORE_CONTROL_LPDDR2IO2_3);
+}
+static void omap4_mpl_init(void)
+{
+	gpio_request(T1_OMAP4430_MPU3050_INT_GPIO,"MPUIRQ");
+	gpio_direction_input(T1_OMAP4430_MPU3050_INT_GPIO);
+}
+
+static void __init samsung_t1_omap4430_init(void)
+{
+	int status;
+        int package = OMAP_PACKAGE_CBS;
+
+        if (omap_rev() == OMAP4430_REV_ES1_0)
+                package = OMAP_PACKAGE_CBL;
+        omap4_mux_init(board_mux, package);
+
+	omap_emif_setup_device_details(&emif_devices, &emif_devices);
+	omap4_lpddr2_config();
+	omap_init_emif_timings();
+	enable_rtc_gpio();
+	omap4_audio_conf();
+	t1_omap4_gpiowk_setup();
+	t1_omap4_touch_init();
+	t1_omap4_vib_motor_init();
+	omap4_i2c_init();
+	t1_omap4_display_init();
+	platform_add_devices(t1_omap4_devices, ARRAY_SIZE(t1_omap4_devices));
+	wake_lock_init(&uart_lock, WAKE_LOCK_SUSPEND, "uart_wake_lock");
+	omap_serial_init(omap_serial_platform_data);
+	omap4_twl6030_hsmmc_init(mmc);
+	omap4_mpl_init();
+#ifdef CONFIG_INPUT_CM3663
+	cm3663_gpio_request();
+#endif
+
+#ifdef CONFIG_TIWLAN_SDIO
+	config_wlan_mux();
+#endif
+# if 0
+	usb_uhhtll_init(&usbhs_pdata);
+	usb_ehci_init();
+	usb_ohci_init();
+#endif
+
+	/* OMAP4 SDP uses internal transceiver so register nop transceiver */
+	usb_nop_xceiv_register();
+	usb_musb_init(&musb_board_data);
+
+	status = omap4_keypad_initialization(&t1_omap4_keypad_data);
+	if(status)
+		pr_err("Keypad initialization failed: %d\n", status);
+
+	omap_display_init(&t1_omap4_dss_data);
+	enable_board_wakeup_source();
+
+	omap_voltage_register_pmic(&omap_pmic_core, "core");
+	omap_voltage_register_pmic(&omap_pmic_mpu, "mpu");
+	omap_voltage_register_pmic(&omap_pmic_iva, "iva");
+	omap_voltage_init_vc(&vc_config);
+
+	samsung_omap4_pwr_key_irq_init();
+	spi_register_board_info(t1_omap4_spi_board_info,
+                                ARRAY_SIZE(t1_omap4_spi_board_info));
+	omap4430univ_sensors_init();
+#ifdef DISABLE_I2C2_HW_SPINLOCK
+	m5mo_fref_start();
+#endif
+	set_offmode_padconfig();
+#ifdef CONFIG_SWITCH_GPIO
+	t1_omap4_headset_init();
+#endif
+	sec_class = class_create(THIS_MODULE, "sec");
+	if (IS_ERR(sec_class))
+		pr_err("Class(sec) Creating Fail!!!\n");
+}
+
+static void __init samsung_t1_omap4430_map_io(void)
+{
+	omap2_set_globals_443x();
+	omap44xx_map_common_io();
+}
+
+MACHINE_START(SAMSUNG_T1_OMAP4430, "Samsung OMAP4430 based T1 Platform")
+	/* Maintainer: Shankar Bandal Samsung India (shankar.b@samsung.com) */
+	.phys_io	= 0x48000000,
+	.io_pg_offst	= ((0xfa000000) >> 18) & 0xfffc,
+	.boot_params	= 0x80000100,
+	.map_io		= samsung_t1_omap4430_map_io,
+	.init_irq	= samsung_t1_omap4430_init_irq,
+	.init_machine	= samsung_t1_omap4430_init,
+	.timer		= &omap_timer,
+MACHINE_END
Index: Kernel/arch/arm/mach-omap2/board-4430sdp-wifi.h
===================================================================
--- Kernel.orig/arch/arm/mach-omap2/board-4430sdp-wifi.h	2011-03-02 10:18:00.000000000 +0900
+++ Kernel/arch/arm/mach-omap2/board-4430sdp-wifi.h	2011-03-04 16:46:43.489962001 +0900
@@ -13,6 +13,7 @@
 
 #define SDP4430_WIFI_PMENA_GPIO     104
 
+#ifdef CONFIG_MACH_OMAP4_TAB_10_1
 #if (CONFIG_SAMSUNG_OMAP4_TAB_REV <= 2)
 #define SDP4430_WIFI_IRQ_GPIO       83
 #endif
@@ -20,9 +21,16 @@
 	|| (CONFIG_SAMSUNG_OMAP4_TAB_REV == 4) \
 	|| (CONFIG_SAMSUNG_OMAP4_TAB_REV == 5) \
 	|| (CONFIG_SAMSUNG_OMAP4_TAB_REV == 6) \
-	|| (CONFIG_SAMSUNG_OMAP4_TAB_REV == 7)
+	|| (CONFIG_SAMSUNG_OMAP4_TAB_REV == 7) 
 #define SDP4430_WIFI_IRQ_GPIO       61
 #endif
+#endif /* CONFIG_MACH_OMAP4_TAB_10_1 */
+
+#ifdef CONFIG_MACH_SAMSUNG_T1_OMAP4430
+#if (CONFIG_SAMSUNG_REL_HW_REV == 0)
+#define SDP4430_WIFI_IRQ_GPIO       61
+#endif
+#endif /* CONFIG_MACH_SAMSUNG_T1_OMAP4430 */
 
 void config_wlan_mux(void);
 
Index: Kernel/arch/arm/plat-omap/include/plat/display.h
===================================================================
--- Kernel.orig/arch/arm/plat-omap/include/plat/display.h	2011-03-02 10:18:01.000000000 +0900
+++ Kernel/arch/arm/plat-omap/include/plat/display.h	2011-03-04 16:45:28.139962005 +0900
@@ -393,6 +393,7 @@
 #define PWM2ON			0x03
 #define PWM2OFF			0x04
 #define TOGGLE3			0x92
+#ifdef CONFIG_MACH_OMAP4_TAB_10_1
 #if (CONFIG_SAMSUNG_OMAP4_TAB_REV <= 4)
 #define HDMI_GPIO_60		60
 #define HDMI_GPIO_41		41
@@ -403,6 +404,15 @@
 #define HDMI_GPIO_60		100
 #define HDMI_GPIO_41		60
 #endif
+#endif /* end of CONFIG_MACH_OMAP4_TAB_10_1 */
+
+#ifdef CONFIG_MACH_SAMSUNG_T1_OMAP4430
+#if (CONFIG_SAMSUNG_REL_HW_REV == 0)
+#define HDMI_GPIO_60		100
+#define HDMI_GPIO_41		60
+#endif
+#endif /* end of CONFIG_MACH_SAMSUNG_T1_OMAP4430 */
+
 #define DLP_4430_GPIO_40	40
 #define DLP_4430_GPIO_44	44
 #define DLP_4430_GPIO_45	45
Index: Kernel/drivers/input/keyboard/cypress/cypress-touchkey.c
===================================================================
--- Kernel.orig/drivers/input/keyboard/cypress/cypress-touchkey.c	2011-03-02 10:18:12.000000000 +0900
+++ Kernel/drivers/input/keyboard/cypress/cypress-touchkey.c	2011-03-04 19:27:22.819962002 +0900
@@ -29,6 +29,7 @@
 #include <asm/io.h>
 #include "cypress_common.h"
 
+#ifdef CONFIG_MACH_OMAP4_TAB_10_1
 #if (CONFIG_SAMSUNG_OMAP4_TAB_REV <= 4)
 #define _3_GPIO_TOUCH_EN	51
 #define _3_GPIO_TOUCH_LED_EN	51
@@ -42,7 +43,17 @@
 #define _3_GPIO_TOUCH_LED_EN	102
 #define _3_GPIO_TOUCH_INT       32
 #define HOME_KEY_GPIO           176
+
+#endif
+#endif /* CONFIG_MACH_OMAP4_TAB_10_1 */
+#ifdef CONFIG_MACH_SAMSUNG_T1_OMAP4430
+#if (CONFIG_SAMSUNG_REL_HW_REV == 0)
+#define _3_GPIO_TOUCH_EN        101
+#define _3_GPIO_TOUCH_LED_EN	102
+#define _3_GPIO_TOUCH_INT       32
+#define HOME_KEY_GPIO           176
 #endif
+#endif /* CONFIG_MACH_SAMSUNG_T1_OMAP4430 */
 /*
 Melfas touchkey register
 */
Index: Kernel/drivers/input/keyboard/cypress/issp_defs.h
===================================================================
--- Kernel.orig/drivers/input/keyboard/cypress/issp_defs.h	2011-03-02 10:18:12.000000000 +0900
+++ Kernel/drivers/input/keyboard/cypress/issp_defs.h	2011-03-04 19:30:35.419961990 +0900
@@ -1,6 +1,7 @@
 // filename: ISSP_Defs.h
 #include "issp_revision.h"
 
+#ifdef CONFIG_MACH_OMAP4_TAB_10_1
 #if (CONFIG_SAMSUNG_OMAP4_TAB_REV <= 4)
 #define _3_GPIO_TOUCH_EN	51
 #define _3_GPIO_TOUCH_LED_EN	51
@@ -12,6 +13,15 @@
 #define _3_GPIO_TOUCH_LED_EN	102
 #define _3_GPIO_TOUCH_INT	32
 #endif
+#endif /* CONFIG_MACH_OMAP4_TAB_10_1 */
+
+#ifdef CONFIG_MACH_SAMSUNG_T1_OMAP4430
+#if (CONFIG_SAMSUNG_REL_HW_REV == 0)
+#define _3_GPIO_TOUCH_EN	101
+#define _3_GPIO_TOUCH_LED_EN	102
+#define _3_GPIO_TOUCH_INT	32
+#endif
+#endif /* CONFIG_MACH_SAMSUNG_T1_OMAP4430 */
 
 #ifdef PROJECT_REV_304
 // Copyright 2006-2007, Cypress Semiconductor Corporation.

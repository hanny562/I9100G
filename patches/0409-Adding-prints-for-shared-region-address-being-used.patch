Index: kernel/drivers/dsp/syslink/multicore_ipc/platform.c
===================================================================
--- kernel.orig/drivers/dsp/syslink/multicore_ipc/platform.c	2011-06-17 15:16:29.000000000 +0530
+++ kernel/drivers/dsp/syslink/multicore_ipc/platform.c	2011-06-17 15:35:54.412243091 +0530
@@ -1672,6 +1672,12 @@
 							cache_line_size;
 			entry.create_heap = handle->slave_sr_config[i].
 								create_heap;
+            printk("Platform.c::platform_load_callback entry.base[0x%x]\n",entry.base);
+            printk("Platform.c::platform_load_callback entry.len[%d]\n",entry.len);
+            printk("Platform.c::platform_load_callback entry.owner_proc_id[0x%x]\n",entry.owner_proc_id);
+            printk("Platform.c::platform_load_callback entry.is_valid[0x%x]\n",entry.is_valid);
+            printk("Platform.c::platform_load_callback entry.cache_line_size[%d]\n",entry.cache_line_size);
+            printk("Platform.c::platform_load_callback entry.create_heap[0x%x]\n",entry.create_heap);
 			_sharedregion_set_entry(handle->slave_sr_config[i].id,
 						&entry);
 		}
Index: kernel/drivers/dsp/syslink/multicore_ipc/platform_mem.c
===================================================================
--- kernel.orig/drivers/dsp/syslink/multicore_ipc/platform_mem.c	2011-06-17 15:16:29.000000000 +0530
+++ kernel/drivers/dsp/syslink/multicore_ipc/platform_mem.c	2011-06-17 15:35:54.412243091 +0530
@@ -296,6 +296,7 @@
 				PLATFORM_MEM_MAKE_MAGICSTAMP(0),
 				PLATFORM_MEM_MAKE_MAGICSTAMP(1)) == true) {
 		retval = -ENODEV;
+        printk("Platform_mem.c::platform_mem_translate platform_mem_state.ref_count[%d]\n",platform_mem_state.ref_count.counter);
 		goto exit;
 	}
 
@@ -314,10 +315,13 @@
 			buf = (void *) (to_addr + ((u32)src_addr - frm_addr));
 			break;
 		}
+    printk("Platform_mem.c::platform_mem_translate frm_addr[0x%x]\n",frm_addr);
+    printk("Platform_mem.c::platform_mem_translate to_addr[0x%x]\n",to_addr);
 	}
 	mutex_unlock(platform_mem_state.gate);
 
 exit:
+    printk("Platform_mem.c::platform_mem_translate retval[0x%x]\n",retval);
 	return buf;
 }
 EXPORT_SYMBOL(platform_mem_translate);
Index: kernel/drivers/dsp/syslink/multicore_ipc/sharedregion_ioctl.c
===================================================================
--- kernel.orig/drivers/dsp/syslink/multicore_ipc/sharedregion_ioctl.c	2011-06-17 15:16:29.000000000 +0530
+++ kernel/drivers/dsp/syslink/multicore_ipc/sharedregion_ioctl.c	2011-06-17 15:35:54.412243091 +0530
@@ -119,6 +119,12 @@
 			/*region.entry.base = MemoryOS_translate(
 					(Ptr) region.entry.base,
 					Memory_XltFlags_Virt2Phys);*/
+                printk("Sharedregion_ioctl.c::sharedregion_ioctl_setup region.entry.base[0x%x]\n",region.entry.base);
+                printk("Sharedregion_ioctl.c::sharedregion_ioctl_setup region.entry.len[%d]\n",region.entry.len);
+                printk("Sharedregion_ioctl.c::sharedregion_ioctl_setup region.entry.owner_proc_id[0x%x]\n",region.entry.owner_proc_id);
+                printk("Sharedregion_ioctl.c::sharedregion_ioctl_setup region.entry.is_valid[0x%x]\n",region.entry.is_valid);
+                printk("Sharedregion_ioctl.c::sharedregion_ioctl_setup region.entry.cache_line_size[%d]\n",region.entry.cache_line_size);
+                printk("Sharedregion_ioctl.c::sharedregion_ioctl_setup region.entry.create_heap[0x%x]\n",region.entry.create_heap);
 			region.entry.base = platform_mem_translate(
 					region.entry.base,
 					PLATFORM_MEM_XLT_FLAGS_VIRT2PHYS);

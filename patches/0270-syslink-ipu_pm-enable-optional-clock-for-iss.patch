From c54b5f468b243150635e0a7be095d9bf7980b17d Mon Sep 17 00:00:00 2001
From: Dan Murphy <dmurphy@ti.com>
Date: Mon, 21 Mar 2011 15:52:37 -0500
Subject: syslink: ipu_pm: enable optional clock for iss

Optional clocks for ISS were enabled by cm functions earlier,
this hack has been removed and enbling/disabling the clocks
are now manged through clk FWK apis by using HWMOD data.

Change-Id: I31be8d9cdab89453597cf3bb748200e27331686b
Signed-off-by: Subin K G <subin.kg@ti.com>
Signed-off-by: Dan Murphy <dmurphy@ti.com>
---
 arch/arm/plat-omap/include/plat/ipu_dev.h |    3 +-
 drivers/dsp/syslink/ipu_pm/ipu_pm.c       |   38 +++++++++++++++-------------
 2 files changed, 22 insertions(+), 19 deletions(-)

diff --git a/arch/arm/plat-omap/include/plat/ipu_dev.h b/arch/arm/plat-omap/include/plat/ipu_dev.h
index c7b7959..e7dce31 100644
--- a/arch/arm/plat-omap/include/plat/ipu_dev.h
+++ b/arch/arm/plat-omap/include/plat/ipu_dev.h
@@ -103,5 +103,6 @@ extern int ipu_pm_module_set_latency(unsigned rsrc,
 extern int ipu_pm_module_set_bandwidth(unsigned rsrc,
 				       unsigned target_rsrc,
 				       int bandwidth);
-
+extern struct omap_ipupm_mod_platform_data*
+				ipupm_get_plat_data(void);
 #endif /* IPU_PM_H */
diff --git a/drivers/dsp/syslink/ipu_pm/ipu_pm.c b/drivers/dsp/syslink/ipu_pm/ipu_pm.c
index 834700e..b4a2a7e 100644
--- a/drivers/dsp/syslink/ipu_pm/ipu_pm.c
+++ b/drivers/dsp/syslink/ipu_pm/ipu_pm.c
@@ -334,6 +334,8 @@ static void __iomem *issHandle;
 static void __iomem *fdifHandle;
 #endif
 
+/* ISS optional clock */
+static struct clk *clk_opt_iss;
 /* Ducati Interrupt Capable Gptimers */
 static int ipu_timer_list[NUM_IPU_TIMERS] = {
 	GP_TIMER_9,
@@ -1432,6 +1434,7 @@ static inline int ipu_pm_get_iss(struct ipu_pm_object *handle,
 				 struct ipu_pm_params *params)
 {
 	int retval;
+	struct omap_ipupm_mod_platform_data *pd = ipupm_get_plat_data();
 
 	if (params->pm_iss_counter) {
 		pr_err("%s %d ISS already requested\n", __func__, __LINE__);
@@ -1449,15 +1452,19 @@ static inline int ipu_pm_get_iss(struct ipu_pm_object *handle,
 		return PM_UNSUPPORTED;
 	}
 
-	/* FIXME:
-	 * enable OPTFCLKEN_CTRLCLK for camera sensors
-	 * should be moved to a separate function for
-	 * independent control this also duplicates the
-	 * above call to avoid read modify write locking.
-	 */
-	cm_write_mod_reg((OPTFCLKEN | CAM_ENABLED),
-					OMAP4430_CM2_CAM_MOD,
-					OMAP4_CM_CAM_ISS_CLKCTRL_OFFSET);
+	clk_opt_iss = clk_get(pd[rcb_p->sub_type].dev, "ctrlclk");
+	if (!clk_opt_iss) {
+		pr_err("%s %d failed to get the iss ctrl clock\n",
+						__func__, __LINE__);
+		return PM_UNSUPPORTED;
+	}
+
+	retval = clk_enable(clk_opt_iss);
+	if (retval != 0) {
+		pr_err("%s %d failed to enable the iss opt clock\n",
+							__func__, __LINE__);
+		return PM_UNSUPPORTED;
+	}
 
 #ifdef CONFIG_OMAP_PM
 	pr_debug("Request MPU wakeup latency\n");
@@ -1958,16 +1965,11 @@ static inline int ipu_pm_rel_iss(struct ipu_pm_object *handle,
 							issHandle + 0x10);
 	}
 #endif
+	if (clk_opt_iss) {
+		clk_disable(clk_opt_iss);
+		clk_put(clk_opt_iss);
+	}
 
-	/* FIXME:
-	 * disable OPTFCLKEN_CTRLCLK for camera sensors
-	 * should be moved to a separate function for
-	 * independent control this also duplicates the
-	 * above call to avoid read modify write locking
-	 */
-	cm_write_mod_reg(CAM_DISABLED,
-				OMAP4430_CM2_CAM_MOD,
-				OMAP4_CM_CAM_ISS_CLKCTRL_OFFSET);
 	params->pm_iss_counter--;
 	pr_debug("Release ISS\n");
 
-- 
1.6.0.4


From 6da7e093ad4827478be024f221b3a7f61d4089c0 Mon Sep 17 00:00:00 2001
From: ninad walvekar <ninad.walvekar@ti.com>
Date: Wed, 16 Mar 2011 16:18:18 +0530
Subject: USB: musb: gadget: fix MUSB_TXMAXP and MUSB_RXMAXP configuration

Commit 9f445cb29918dc488b7a9a92ef018599cce33df7[USB: musb: disable
double buffering for older RTL versions] tries to disable double
buffer mode by writing endpoint hw max packet size to TXMAP/RXMAP.

First the approach can break full speed and cause overflow problems.
We should always set those registers with the actual max packet size
from endpoint descriptor.

Second,the problem in commit 9f445cb29918dc488b7a9a92ef018599cce33df7
was caused by musb gadget driver; nothing to do with RTL revision as
originaly suspected.

Third, with the commit 9f445cb29918dc488b7a9a92ef018599cce33df7
USB tethering in Windows PC becomes non-functional.When USB tethering
is turned on the device manager of windows OS will show "!" mark on the
Ethernet/RNDIS driver after a short while.This happens because the TXMAXP
is programmed with a packet size of 512 and whereas in RNDIS Interrupt
endpoint is of Size 8.So during interrupt transfers as the data bytes to
be sent is less than the maxpacket size the data is never transmitted to
the host causing the above problem.

Original-Author:Ming Lei <tom.leiming@gmail.com>
Signed-off-by: Ninad Walvekar<ninad.walvekar@ti.com>
---
 drivers/usb/musb/musb_gadget.c |   23 ++---------------------
 1 files changed, 2 insertions(+), 21 deletions(-)

diff --git a/drivers/usb/musb/musb_gadget.c b/drivers/usb/musb/musb_gadget.c
index 0c8d052..11e9050 100644
--- a/drivers/usb/musb/musb_gadget.c
+++ b/drivers/usb/musb/musb_gadget.c
@@ -1002,17 +1002,7 @@ static int musb_gadget_enable(struct usb_ep *ep,
 		int_txe |= (1 << epnum);
 		musb_writew(mbase, MUSB_INTRTXE, int_txe);
 
-		/* REVISIT if can_bulk_split(), use by updating "tmp";
-		 * likewise high bandwidth periodic tx
-		 */
-		/* Set TXMAXP with the FIFO size of the endpoint
-		 * to disable double buffering mode. Currently, It seems that double
-		 * buffering has problem if musb RTL revision number < 2.0.
-		 */
-		if (musb->hwvers < MUSB_HWVERS_2000)
-			musb_writew(regs, MUSB_TXMAXP, hw_ep->max_packet_sz_tx);
-		else
-			musb_writew(regs, MUSB_TXMAXP, tmp);
+		musb_writew(regs, MUSB_TXMAXP, tmp);
 
 		csr = MUSB_TXCSR_MODE | MUSB_TXCSR_CLRDATATOG;
 		if (musb_readw(regs, MUSB_TXCSR)
@@ -1039,16 +1029,7 @@ static int musb_gadget_enable(struct usb_ep *ep,
 		int_rxe |= (1 << epnum);
 		musb_writew(mbase, MUSB_INTRRXE, int_rxe);
 
-		/* REVISIT if can_bulk_combine() use by updating "tmp"
-		 * likewise high bandwidth periodic rx
-		 */
-		/* Set RXMAXP with the FIFO size of the endpoint
-		 * to disable double buffering mode.
-		 */
-		if (musb->hwvers < MUSB_HWVERS_2000)
-			musb_writew(regs, MUSB_RXMAXP, hw_ep->max_packet_sz_rx);
-		else
-			musb_writew(regs, MUSB_RXMAXP, tmp);
+		musb_writew(regs, MUSB_RXMAXP, tmp);
 
 		/* force shared fifo to OUT-only mode */
 		if (hw_ep->is_shared_fifo) {
-- 
1.6.0.4


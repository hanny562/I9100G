From a68144fc89d29c0c3c464fa04edd07b79912111a Mon Sep 17 00:00:00 2001
From: Sebastien Guiriec <s-guiriec@ti.com>
Date: Sat, 7 May 2011 18:13:26 +0200
Subject: [PATCH 7/7] ASoC: McPDM: Link control of UL and DL channels for Downlink streams.

In order to work around noise issue when Uplink is started in middle
of playback. Uplink path must be opened when DL is starded.

Signed-off-by: Sebastien Guiriec <s-guiriec@ti.com>
---
 sound/soc/omap/omap-mcpdm.c |   37 +++++++++++++++++++++++++++++++++----
 1 files changed, 33 insertions(+), 4 deletions(-)

Index: kernel/sound/soc/omap/omap-mcpdm.c
===================================================================
--- kernel.orig/sound/soc/omap/omap-mcpdm.c	2011-05-10 15:51:53.789605439 +0900
+++ kernel/sound/soc/omap/omap-mcpdm.c	2011-05-10 17:07:44.469645372 +0900
@@ -703,10 +703,16 @@
 
 	if (!dai->active) {
 		if (!mcpdm->ul_active && substream->stream == SNDRV_PCM_STREAM_CAPTURE) {
-			omap_mcpdm_capture_close(mcpdm, mcpdm->uplink);
+			if (!mcpdm->dn_channels) {
+				abe_disable_data_transfer(PDM_UL_PORT);
+				udelay(250);
+				omap_mcpdm_stop(mcpdm, SNDRV_PCM_STREAM_CAPTURE);
+				omap_mcpdm_capture_close(mcpdm, mcpdm->uplink);
+			}
 			if (!mcpdm->free && !mcpdm->dn_channels &&
 			    !mcpdm->dl_active)
 				omap_mcpdm_free(mcpdm);
+
 		}
 		if (!mcpdm->dl_active && substream->stream == SNDRV_PCM_STREAM_PLAYBACK) {
 			wake_lock_timeout(&mcpdm->wake_lock, 2 * HZ);
@@ -728,9 +734,15 @@
 	mutex_lock(&mcpdm->mutex);
 	if (!mcpdm->dl_active && mcpdm->dn_channels) {
 		abe_disable_data_transfer(PDM_DL_PORT);
+		if (!mcpdm->ul_active && mcpdm->up_channels)
+			abe_disable_data_transfer(PDM_UL_PORT);
 		udelay(250);
 		omap_mcpdm_stop(mcpdm, SNDRV_PCM_STREAM_PLAYBACK);
 		omap_mcpdm_playback_close(mcpdm, mcpdm->downlink);
+		if (!mcpdm->ul_active && mcpdm->up_channels) {
+			omap_mcpdm_stop(mcpdm, SNDRV_PCM_STREAM_CAPTURE);
+			omap_mcpdm_capture_close(mcpdm, mcpdm->uplink);
+		}
 		abe_dsp_mcpdm_shutdown();
 		abe_dsp_pm_put();
 	}
@@ -759,8 +771,15 @@
 		if (!mcpdm->dn_channels) {
 			abe_dsp_pm_get();
 			/* start ATC before McPDM IP */
+			if (!mcpdm->up_channels)
+				abe_enable_data_transfer(PDM_UL_PORT);
 			abe_enable_data_transfer(PDM_DL_PORT);
 			udelay(250);
+			if (!mcpdm->up_channels) {
+				mcpdm->uplink->channels = PDM_UP1_EN | PDM_UP2_EN;
+				ret = omap_mcpdm_capture_open(mcpdm, &omap_mcpdm_links[1]);
+				omap_mcpdm_start(mcpdm, SNDRV_PCM_STREAM_CAPTURE);
+			}
 			mcpdm->downlink->channels = (PDM_DN_MASK | PDM_CMD_MASK);
 			ret = omap_mcpdm_playback_open(mcpdm, &omap_mcpdm_links[0]);
 			if (ret < 0) {
@@ -771,8 +790,16 @@
 			omap_mcpdm_start(mcpdm, stream);
 		}
 	} else {
-		mcpdm->uplink->channels = PDM_UP1_EN | PDM_UP2_EN;
-		ret = omap_mcpdm_capture_open(mcpdm, &omap_mcpdm_links[1]);
+		if (!mcpdm->dn_channels) {
+			if (!mcpdm->up_channels) {
+				abe_enable_data_transfer(PDM_UL_PORT);
+				udelay(250);
+				mcpdm->uplink->channels = PDM_UP1_EN | PDM_UP2_EN;
+				ret = omap_mcpdm_capture_open(mcpdm, &omap_mcpdm_links[1]);
+
+				omap_mcpdm_start(mcpdm, stream);
+			}
+		}
 	}
 
 	mutex_unlock(&mcpdm->mutex);
@@ -784,9 +811,10 @@
 static int omap_mcpdm_abe_dai_trigger(struct snd_pcm_substream *substream,
 				  int cmd, struct snd_soc_dai *dai)
 {
+#if 0
 	if (substream->stream == SNDRV_PCM_STREAM_CAPTURE)
 		omap_mcpdm_dai_trigger(substream, cmd,  dai);
-
+#endif
 	return 0;
 }
 
Index: kernel/sound/soc/omap/omap-abe.c
===================================================================
--- kernel.orig/sound/soc/omap/omap-abe.c	2011-05-10 15:51:53.789605439 +0900
+++ kernel/sound/soc/omap/omap-abe.c	2011-05-10 17:07:11.428394954 +0900
@@ -1020,7 +1020,7 @@
 static inline void abe_dai_enable_data_transfer(int port)
 {
 	pr_debug("%s : port %d\n", __func__, port);
-	if (port != PDM_DL_PORT)
+	if ((port != PDM_DL_PORT) && (port != PDM_UL_PORT))
 		abe_enable_data_transfer(port);
 }
 
@@ -1211,7 +1211,7 @@
 static inline void abe_dai_disable_data_transfer(int port)
 {
 	pr_debug("%s : port %d\n", __func__, port);
-	if (port != PDM_DL_PORT)
+	if ((port != PDM_DL_PORT) && (port != PDM_UL_PORT))
 		abe_disable_data_transfer(port);
 }
 

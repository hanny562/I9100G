From 488d7729dc5f7ebc03513bfdcf2ff5765dc077bf Mon Sep 17 00:00:00 2001
From: Andy Gross <andy.gross@ti.com>
Date: Tue, 12 Jul 2011 17:19:34 -0500
Subject: [PATCH] OMAP: TILER: Restore PAT entries when resuming from DEVICE OFF

Added function to iterate over the Tiler allocations.  Each allocation
will have its PAT entries refreshed.

Added hook in power management code to call tiler restore function.

Signed-off-by: Andy Gross <andy.gross@ti.com>
---
 arch/arm/mach-omap2/include/mach/tiler.h |    1 +
 arch/arm/mach-omap2/pm44xx.c             |    2 ++
 drivers/media/video/tiler/tiler.c        |   13 +++++++++++++
 3 files changed, 16 insertions(+), 0 deletions(-)

Index: kernel/arch/arm/mach-omap2/include/mach/tiler.h
===================================================================
--- kernel.orig/arch/arm/mach-omap2/include/mach/tiler.h	2011-03-09 11:43:25.000000000 +0530
+++ kernel/arch/arm/mach-omap2/include/mach/tiler.h	2011-07-13 19:04:16.392253119 +0530
@@ -233,5 +233,6 @@
 				void **uv_sysptr, void **y_allocptr,
 				void **uv_allocptr, s32 aligned);
 
+int tiler_restore_pat_entry(void);
 #endif
 
Index: kernel/arch/arm/mach-omap2/pm44xx.c
===================================================================
--- kernel.orig/arch/arm/mach-omap2/pm44xx.c	2011-07-04 12:16:01.000000000 +0530
+++ kernel/arch/arm/mach-omap2/pm44xx.c	2011-07-13 19:05:47.411012207 +0530
@@ -44,6 +44,7 @@
 
 #include <mach/omap4-common.h>
 #include <mach/omap4-wakeupgen.h>
+#include <mach/tiler.h>
 #include "mach/omap_hsi.h"
 #include <linux/i2c/twl.h>
 
@@ -704,8 +705,10 @@
 	omap_hsi_prepare_suspend();
 
 	/* Enable Device OFF */
-	if (enable_off_mode)
+	if (enable_off_mode){
 		omap4_device_off_set_state(1);
+		tiler_restore_pat_entry();
+	}
 
 	gic_dist_pending_show_all();
 
Index: kernel/drivers/media/video/tiler/tiler.c
===================================================================
--- kernel.orig/drivers/media/video/tiler/tiler.c	2011-06-15 20:52:08.000000000 +0530
+++ kernel/drivers/media/video/tiler/tiler.c	2011-07-13 19:08:10.849761821 +0530
@@ -1235,6 +1235,22 @@
 	return res;
 }
 
+int tiler_restore_pat_entry(void)
+{
+   struct mem_info *mi;
+
+   /* iterate over all the blocks and refresh the PAT entries */
+   list_for_each_entry(mi, &blocks, global) {
+       if (refill_pat(TMM_SS(mi->sys_addr), &mi->area, mi->mem))
+           printk(KERN_ERR "Failed to reinitialize PAT for %08x\n",
+           mi->sys_addr);
+   }
+   return 0;
+}
+
+EXPORT_SYMBOL(tiler_restore_pat_entry);
+
+
 s32 tiler_mapx(enum tiler_fmt fmt, u32 width, u32 height, u32 gid,
 		       pid_t pid, u32 *sys_addr, u32 usr_addr)
 {

From a9687a29fcf3c8cee5a1be7cabc11eb398709999 Mon Sep 17 00:00:00 2001
From: Ricardo Neri <ricardo.neri@ti.com>
Date: Sun, 13 Mar 2011 22:37:55 -0600
Subject: OMAP4: HDMI: Rework ACR workaround for configurable CTS interval

Notify event to start/stop the ACR workaround needs to be sent
once the sample HDMI DAI hw_params are known. This is needed as
the CTS interval depends on both the pixel clock and the audio
sample rate. Functionality for dynamic configuration of the audio
sample rate will be added later.

Also, relinquish CPU after sending the the notify event. The task
will wake up when the event ACK arrives. A timeout is used in
case SYSM3 does not ACK the notify event.

Change-Id: Idcab8c4814a121a56e05fc2a41b870b77765c521
Signed-off-by: Ricardo Neri <ricardo.neri@ti.com>
---
 arch/arm/plat-omap/hdmi_lib.c              |   61 ++++++++++++++++++----------
 arch/arm/plat-omap/include/plat/hdmi_lib.h |    4 ++
 sound/soc/omap/omap-hdmi.c                 |   12 +++++
 3 files changed, 55 insertions(+), 22 deletions(-)

Index: kernel/arch/arm/plat-omap/hdmi_lib.c
===================================================================
--- kernel.orig/arch/arm/plat-omap/hdmi_lib.c	2011-04-07 11:23:20.000000000 +0900
+++ kernel/arch/arm/plat-omap/hdmi_lib.c	2011-04-07 11:29:11.000000000 +0900
@@ -49,6 +49,7 @@
 #include <syslink/notify_driver.h>
 #include <syslink/notifydefs.h>
 #include <syslink/notify_driverdefs.h>
+#include <linux/sched.h>
 
 #define SYS_M3 2
 #define HDMI_AUDIO_WA_EVENT 5
@@ -224,6 +225,8 @@
 	u32 notify_event_reg;
 	u32 cts_interval;
 	struct omap_chip_id audio_wa_chip_ids;
+	struct task_struct *wa_task;
+	u32 ack_payload;
 #endif
 } hdmi;
 
@@ -1328,13 +1331,45 @@
 }
 
 #ifdef CONFIG_OMAP_HDMI_AUDIO_WA
+int hdmi_lib_acr_wa_send_event(u32 payload)
+{
+	long tout;
+	if (omap_chip_is(hdmi.audio_wa_chip_ids)) {
+		if (hdmi.notify_event_reg == HDMI_NOTIFY_EVENT_REG) {
+			notify_send_event(SYS_M3, 0, HDMI_AUDIO_WA_EVENT,
+					payload, 0);
+			if (signal_pending(current))
+				return -ERESTARTSYS;
+			hdmi.wa_task = current;
+			set_current_state(TASK_INTERRUPTIBLE);
+			tout = schedule_timeout(msecs_to_jiffies(5000));
+			if (!tout)
+				return -EIO;
+			if (payload != hdmi.ack_payload)
+				return -EBADE;
+			return 0;
+		}
+		return -ENODEV;
+	}
+	return 0;
+}
+int hdmi_lib_start_acr_wa(void)
+{
+	return hdmi_lib_acr_wa_send_event(hdmi.cts_interval);
+}
+int hdmi_lib_stop_acr_wa(void)
+{
+	return hdmi_lib_acr_wa_send_event(0);
+}
+
 void hdmi_notify_event_ack_func(u16 proc_id, u16 line_id, u32 event_id,
 							u32 *arg, u32 payload)
 {
-	if (payload && (event_id == HDMI_AUDIO_WA_EVENT_ACK))
-		REG_FLD_MOD(HDMI_WP, HDMI_WP_AUDIO_CTRL, 1, 31, 31);
-	if (!payload && (event_id == HDMI_AUDIO_WA_EVENT_ACK))
-		REG_FLD_MOD(HDMI_WP, HDMI_WP_AUDIO_CTRL, 0, 31, 31);
+	hdmi.ack_payload = payload;
+	if (WARN_ON(!hdmi.wa_task))
+		return;
+
+	wake_up_process(hdmi.wa_task);
 }
 
 static int hdmi_syslink_notifier_call(struct notifier_block *nb,
@@ -1376,30 +1411,12 @@
 
 static void hdmi_w1_audio_enable(void)
 {
-#ifdef CONFIG_OMAP_HDMI_AUDIO_WA
-	if (omap_chip_is(hdmi.audio_wa_chip_ids)) {
-		if (hdmi.notify_event_reg == HDMI_NOTIFY_EVENT_REG)
-			notify_send_event(SYS_M3, 0, HDMI_AUDIO_WA_EVENT,
-					hdmi.cts_interval, 0);
-	} else
-		REG_FLD_MOD(HDMI_WP, HDMI_WP_AUDIO_CTRL, 1, 31, 31);
-#else
 	REG_FLD_MOD(HDMI_WP, HDMI_WP_AUDIO_CTRL, 1, 31, 31);
-#endif
 }
 
 static void hdmi_w1_audio_disable(void)
 {
-#ifdef CONFIG_OMAP_HDMI_AUDIO_WA
-	if (omap_chip_is(hdmi.audio_wa_chip_ids)) {
-		/* Payload=0 disables workaround */
-		if (hdmi.notify_event_reg == HDMI_NOTIFY_EVENT_REG)
-			notify_send_event(SYS_M3, 0, HDMI_AUDIO_WA_EVENT, 0, 0);
-	} else
-		REG_FLD_MOD(HDMI_WP, HDMI_WP_AUDIO_CTRL, 0, 31, 31);
-#else
 	REG_FLD_MOD(HDMI_WP, HDMI_WP_AUDIO_CTRL, 0, 31, 31);
-#endif
 }
 
 static void hdmi_w1_audio_start(void)
Index: kernel/arch/arm/plat-omap/include/plat/hdmi_lib.h
===================================================================
--- kernel.orig/arch/arm/plat-omap/include/plat/hdmi_lib.h	2011-04-07 11:23:20.000000000 +0900
+++ kernel/arch/arm/plat-omap/include/plat/hdmi_lib.h	2011-04-07 11:29:11.000000000 +0900
@@ -558,6 +558,10 @@
 void hdmi_notify_pwrchange(int state);
 int hdmi_rxdet(void);
 int hdmi_w1_get_video_state(void);
+#ifdef CONFIG_OMAP_HDMI_AUDIO_WA
+int hdmi_lib_start_acr_wa(void);
+int hdmi_lib_stop_acr_wa(void);
+#endif
 
 #endif
 
Index: kernel/sound/soc/omap/omap-hdmi.c
===================================================================
--- kernel.orig/sound/soc/omap/omap-hdmi.c	2011-04-07 10:59:22.000000000 +0900
+++ kernel/sound/soc/omap/omap-hdmi.c	2011-04-07 11:33:47.000000000 +0900
@@ -156,6 +156,12 @@
 	if (hdmi_data.active)
 		hdmi_set_audio_power(0);
 
+	#ifdef CONFIG_OMAP_HDMI_AUDIO_WA
+	if (hdmi_lib_stop_acr_wa())
+		printk(KERN_WARNING "HDMI WA may be in bad state");
+	#endif
+
+
 #ifdef CONFIG_OMAP_PM
 	err = omap_pm_set_max_sdma_lat(&hdmi_data.qos_request,
 				HDMI_AUDIO_PM_NO_CONSTRAINT);
@@ -238,6 +244,13 @@
 	snd_soc_dai_set_dma_data(dai, substream,
 				 &omap_hdmi_dai_dma_params);
 
+#ifdef CONFIG_OMAP_HDMI_AUDIO_WA
+	err = hdmi_lib_start_acr_wa();
+	if (err)
+		printk(KERN_ERR "Failed to start ACR workaround[%d]]\n", err);
+#endif
+
+
 	return err;
 }
 

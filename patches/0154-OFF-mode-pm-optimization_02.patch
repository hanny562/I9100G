Index: Kernel_914878/arch/arm/mach-omap2/board-omap4tab10-1.c
===================================================================
--- Kernel_914878.orig/arch/arm/mach-omap2/board-omap4tab10-1.c	2011-02-17 11:34:45.000000000 +0530
+++ Kernel_914878/arch/arm/mach-omap2/board-omap4tab10-1.c	2011-02-17 21:18:28.073235094 +0530
@@ -1932,40 +1932,6 @@
 };
 
 
-void omap4430_internal_i2c4_pull_up(void)
-{
-	int val = 0;
-
-	void __iomem *ctrl_core_pad0_i2c4_scl, *ctrl_core_pad0_i2c4_sda;
-
-	/* I2C4_SCL pull-up */
-	ctrl_core_pad0_i2c4_scl = (u32 *) ioremap(CONTROL_CORE_PAD0_I2C3_SDA_PAD1_I2C4_SCL, 4);
-	if (!ctrl_core_pad0_i2c4_scl) {
-		printk(KERN_ERR"OMAP_pad_config: ioremap failed with addr %x\n",
-				CONTROL_CORE_PAD0_I2C3_SDA_PAD1_I2C4_SCL);
-		return;
-	}
-
-	val =  __raw_readl(ctrl_core_pad0_i2c4_scl);
-	val |= 0x180000;  /* Set 19,20 bit high for I2C4 SCL pull up */
-	__raw_writel(val, ctrl_core_pad0_i2c4_scl);
-
-	/* I2C4_SDA pull-up */
-	ctrl_core_pad0_i2c4_sda = (u32 *) ioremap(CONTROL_CORE_PAD0_I2C4_SDA_PAD1_MCSPI1_CLK, 4);
-	if (!ctrl_core_pad0_i2c4_sda) {
-		printk(KERN_ERR"OMAP_pad_config: ioremap failed with addr %x\n",
-				CONTROL_CORE_PAD0_I2C4_SDA_PAD1_MCSPI1_CLK);
-		return;
-	}
-
-	val =  __raw_readl(ctrl_core_pad0_i2c4_sda);
-	val |= 0x18;  /* Set 3, 4 bit high for I2C4 SCL pull up */
-	__raw_writel(val, ctrl_core_pad0_i2c4_sda);
-
-	iounmap(ctrl_core_pad0_i2c4_scl);
-	iounmap(ctrl_core_pad0_i2c4_sda);
-}
-
 void plat_hold_wakelock(void *up, int flag)
 {
     struct uart_omap_port *up2 = (struct uart_omap_port *)up;
@@ -2140,7 +2106,6 @@
 	omap4tab_gpiowk_setup();
 	omap4tab_touch_init();
 	omap4tab_vib_motor_init();
-	omap4430_internal_i2c4_pull_up();
 	omap4_i2c_init();
 	omap4tab_display_init();
 	platform_add_devices(omap4tab_devices, ARRAY_SIZE(omap4tab_devices));
Index: Kernel_914878/arch/arm/mach-omap2/omap4-iopad.c
===================================================================
--- Kernel_914878.orig/arch/arm/mach-omap2/omap4-iopad.c	2011-02-14 13:08:50.000000000 +0530
+++ Kernel_914878/arch/arm/mach-omap2/omap4-iopad.c	2011-02-17 21:18:28.073235094 +0530
@@ -72,20 +72,20 @@
 
 struct omap44xx_pin_config pin_mux[] = {
 	/* HSMMC */
-	{ "gpmc_ad0",	"HSMMC_D(0)",		0x040, (IEN | M1),	(OFF_PU | OFF_IN | OFF_EN) },
-	{ "gpmc_ad1",	"HSMMC_D(1)",		0x042, (IEN | M1),	(OFF_PU | OFF_IN | OFF_EN) },
-	{ "gpmc_ad2",	"HSMMC_D(2)",		0x044, (IEN | M1),	(OFF_PU | OFF_IN | OFF_EN) },
-	{ "gpmc_ad3",	"HSMMC_D(3)",		0x046, (IEN | M1),	(OFF_PU | OFF_IN | OFF_EN) },
-	{ "gpmc_ad4",	"HSMMC_D(4)",		0x048, (IEN | M1),	(OFF_PU | OFF_IN | OFF_EN) },
-	{ "gpmc_ad5",	"HSMMC_D(5)",		0x04A, (IEN | M1),	(OFF_PU | OFF_IN | OFF_EN) },
-	{ "gpmc_ad6",	"HSMMC_D(6)",		0x04C, (IEN | M1),	(OFF_PU | OFF_IN | OFF_EN) },
-	{ "gpmc_ad7",	"HSMMC_D(7)",		0x04E, (IEN | M1),	(OFF_PU | OFF_IN | OFF_EN) },
+	{ "gpmc_ad0",	"HSMMC_D(0)",		0x040, (IEN | M1),	(OFF_PD | OFF_IN | OFF_EN) },
+	{ "gpmc_ad1",	"HSMMC_D(1)",		0x042, (IEN | M1),	(OFF_PD | OFF_IN | OFF_EN) },
+	{ "gpmc_ad2",	"HSMMC_D(2)",		0x044, (IEN | M1),	(OFF_PD | OFF_IN | OFF_EN) },
+	{ "gpmc_ad3",	"HSMMC_D(3)",		0x046, (IEN | M1),	(OFF_PD | OFF_IN | OFF_EN) },
+	{ "gpmc_ad4",	"HSMMC_D(4)",		0x048, (IEN | M1),	(OFF_PD | OFF_IN | OFF_EN) },
+	{ "gpmc_ad5",	"HSMMC_D(5)",		0x04A, (IEN | M1),	(OFF_PD | OFF_IN | OFF_EN) },
+	{ "gpmc_ad6",	"HSMMC_D(6)",		0x04C, (IEN | M1),	(OFF_PD | OFF_IN | OFF_EN) },
+	{ "gpmc_ad7",	"HSMMC_D(7)",		0x04E, (IEN | M1),	(OFF_PD | OFF_IN | OFF_EN) },
 	{ "gpmc_ad8",	"3_TOUCH_INT",		0x050, (IEN | M3),	(OFF_IN_PD) },
 	{ "gpmc_ad9",	"PS_VOUT_18",		0x052, (IEN | M3),	(OFF_IN_PD) },
-	{ "gpmc_ad10",	"CP_USB_ON",		0x054, (PTU | M3),	(OFF_IN_PU) },
+	{ "gpmc_ad10",	"CP_USB_ON",		0x054, (M3),		(OFF_IN_PU) },
 	{ "gpmc_ad11",	"MLCD_RST",		0x056, (M3),		(OFF_IN_PD) },
-	// { "gpmc_ad12",	"CP_ON",	0x058, (),		() },
-	{ "gpmc_ad13",	"PS_ON",	0x05A, (PTU | EN | M3),	(OFF_IN_PD) },
+	{ "gpmc_ad12",	"CP_ON",		0x058, (PTU | EN | M3),	(OFF_DIS) },
+	{ "gpmc_ad13",	"PS_ON",		0x05A, (PTU | EN | M3),	(OFF_IN_PD) },
 	//{ "gpmc_ad14",	"OLED_DET",	0x05C, (IEN | M3),	(OFF_IN | OFF_EN) },
 	{ "gpmc_ad15",	"TA_CURRENT_SEL",	0x05E, (IEN | M3),	(OFF_IN | OFF_EN) },
 	{ "gpmc_a16",	"LCD_EN",		0x060, (M3),		(OFF_IN_PD) },
@@ -106,7 +106,7 @@
 	{ "gpmc_clk",	"ACTIVE_STATE",		0x07E, (PTD | EN | M3),	(OFF_IN_PD) },
 	//{ "gpmc_nadv_ale", "SUSPEND_REQUEST",	0x080, (),	() },
 	{ "gpmc_noe",	"HSMMC_CLK",		0x082, (IEN | M1),	(OFF_PD | OFF_IN | OFF_EN) },
-	{ "gpmc_nwe",	"HSMMC_CMD",		0x084, (IEN | M1),	(OFF_DIS) },
+	{ "gpmc_nwe",	"HSMMC_CMD",		0x084, (IEN | M1),	(OFF_PD | OFF_IN | OFF_EN) },
 	//{ "gpmc_nbe0_cle", "NFC_IRQ",		0x086, (),	() },
 	{ "gpmc_nbe1",	"HDMI_LS_EN",		0x088, (M3),		(OFF_IN_PD) },
 	{ "gpmc_wait0",	"WLAN_IRQ",		0x08A, (IEN | M3),	(OFF_IN | OFF_EN) },
@@ -128,19 +128,19 @@
 	//{ "csi21_dy1",	"8M_DN_1",		0x0A6, (),		() },
 	//{ "csi21_dx2",	"8M_DP_2",		0x0A8, (),		() },
 	//{ "csi21_dy2",	"8M_DN_2",		0x0AA, (),		() },
-	//{ "csi21_dx3",	"-nc-",		0x0AC, (),		() },
-	//{ "csi21_dy3",	"-nc-",		0x0AE, (),		() },
-	//{ "csi21_dx4",	"-nc-",		0x0B0, (),		() },
-	//{ "csi21_dy4",	"-nc-",		0x0B2, (),		() },
+	//{ "csi21_dx3",	"-nc-",		0x0AC, (PTD | EN | M7),		(OFF_DIS) },
+	//{ "csi21_dy3",	"-nc-",		0x0AE, (PTD | EN | M7),		(OFF_DIS) },
+	//{ "csi21_dx4",	"-nc-",		0x0B0, (PTD | EN | M7),		(OFF_DIS) },
+	//{ "csi21_dy4",	"-nc-",		0x0B2, (PTD | EN | M7),		(OFF_DIS) },
 
 	//{ "csi22_dx0",	"1.3M_CLK_P",		0x0B4, (),		() },
 	//{ "csi22_dy0",	"1.3M_CLK_N",		0x0B6, (),		() },
 	//{ "csi22_dx1",	"1.3M_DATA_P",		0x0B8, (),		() },
 	//{ "csi22_dy1",	"1.3M_DATA_N",		0x0BA, (),		() },
 
-	//{ "cam_shutter",	"-nc-",		0x0BC, (),		() },
-	//{ "cam_strobe",		"-nc-",		0x0BE, (),		() },
-	//{ "cam_globalreset",	"-nc-",		0x0C0, (),		() },
+	//{ "cam_shutter",	"-nc-",		0x0BC, (PTD | EN | M7),		(OFF_DIS) },
+	//{ "cam_strobe",		"-nc-",		0x0BE, (PTD | EN | M7),		(OFF_DIS) },
+	//{ "cam_globalreset",	"-nc-",		0x0C0, (PTD | EN | M7),		(OFF_DIS) },
 
 	//{ "usbb1_ulpitll_clk",	"MIPI_HSI_TX_WAKE",	0x0C2, (),		() },
 	//{ "usbb1_ulpitll_stp",	"MIPI_HSI_TX_DATA",	0x0C4, (),		() },
@@ -151,12 +151,12 @@
 	//{ "usbb1_ulpitll_dat2",	"MIPI_HSI_RX_FLG",	0x0CE, (),		() },
 	//{ "usbb1_ulpitll_dat3",	"MIPI_HSI_RX_RDY",	0x0D0, (),		() },
 	//{ "usbb1_ulpitll_dat4",	"BOOT_MODE",		0x0D2, (),		() },
-	//{ "usbb1_ulpitll_dat5",	"-nc-",			0x0D4, (),		() },
+	//{ "usbb1_ulpitll_dat5",	"-nc-",		0x0D4, (PTD | EN | M7),		(OFF_DIS) },
 	//{ "usbb1_ulpitll_dat6",	"EAR_SEND_END",		0x0D6, (),		() },
 	//{ "usbb1_ulpitll_dat7",	"JIG_ON_18",		0x0D8, (),		() },
 
-	//{ "usbb1_hsic_data",	"-nc-",		0x0DA, (),		() },
-	//{ "usbb1_hsic_strobe",	"-nc-",		0x0DC, (),		() },
+	//{ "usbb1_hsic_data",	"-nc-",		0x0DA, (PTD | EN | M7),		(OFF_DIS) },
+	//{ "usbb1_hsic_strobe",	"-nc-",		0x0DC, (PTD | EN | M7),		(OFF_DIS) },
 	{ "usbc1_icusb_dp",	"-nc-",		0x0DE, (PTD | EN | M7),		(OFF_DIS) },
 	{ "usbc1_icusb_dm",	"-nc-",		0x0E0, (PTD | EN | M7),		(OFF_DIS) },
 
@@ -166,10 +166,10 @@
 	{ "sdmmc1_dat1", "T_FLASH_D(1)",	0x0E8, (IEN | PTU | EN | M0),	(OFF_IN_PU) },
 	{ "sdmmc1_dat2", "T_FLASH_D(2)",	0x0EA, (IEN | PTU | EN | M0),	(OFF_IN_PU) },
 	{ "sdmmc1_dat3", "T_FLASH_D(3)",	0x0EC, (IEN | PTU | EN | M0),	(OFF_IN_PU) },
-	//{ "sdmmc1_dat4", "-nc-",		0x0EE, (),		() },
-	//{ "sdmmc1_dat5", "-nc-",		0x0F0, (),		() },
-	//{ "sdmmc1_dat6", "-nc-",		0x0F2, (),		() },
-	//{ "sdmmc1_dat7", "-nc-",		0x0F4, (),		() },
+	//{ "sdmmc1_dat4", "-nc-",		0x0EE, (PTD | EN | M7),		(OFF_DIS) },
+	//{ "sdmmc1_dat5", "-nc-",		0x0F0, (PTD | EN | M7),		(OFF_DIS) },
+	//{ "sdmmc1_dat6", "-nc-",		0x0F2, (PTD | EN | M7),		(OFF_DIS) },
+	//{ "sdmmc1_dat7", "-nc-",		0x0F4, (PTD | EN | M7),		(OFF_DIS) },
 
 	//{ "abe_mcbsp2_clkx",	"REC_PCM_CLK",		0x0F6, (),		() },
 	//{ "abe_mcbsp2_dr",	"REC_PCM_IN",		0x0F8, (),		() },
@@ -203,8 +203,8 @@
 	/* NOTE: Fuel gauge expects I2C SCL and SDA lines to be low to enter sleep mode. This save ~70uA */
 	{ "i2c3_scl",	"AP_I2C_SCL",		0x12A, (IEN | PTU | EN | M0),	(OFF_IN_PD) },
 	{ "i2c3_sda",	"AP_I2C_SDA",		0x12C, (IEN | PTU | EN | M0),	(OFF_IN_PD) },
-	//{ "i2c4_scl",	"GEN_I2C_SCL",		0x12E, (),		() },
-	//{ "i2c4_sda",	"GEN_I2C_SDA",		0x130, (),		() },
+	{ "i2c4_scl",	"GEN_I2C_SCL",		0x12E, (IEN | PTU | EN | M0),	(OFF_IN_PU) },
+	{ "i2c4_sda",	"GEN_I2C_SDA",		0x130, (IEN | PTU | EN | M0),	(OFF_IN_PU) },
 
 	{ "mcspi1_clk",  "USB_OTG_EN",		0x132, (PTD | EN | M3),		(OFF_IN_PD) },
 	//{ "mcspi1_somi", "NFC_FIRMWARE",	0x134, (),		() },
@@ -214,17 +214,17 @@
 	//{ "mcspi1_cs2",  "8M_nRST",		0x13C, (),		() },
 	//{ "mcspi1_cs3",  "1.3M_nRST",		0x13E, (),		() },
 
-	//{ "uart3_cts_rctx",	"-nc-",		0x140, (),		() },
-	//{ "uart3_rts_sd",	"-nc-",		0x142, (),		() },
+	//{ "uart3_cts_rctx",	"-nc-",		0x140, (PTD | EN | M7),		(OFF_DIS) },
+	//{ "uart3_rts_sd",	"-nc-",		0x142, (PTD | EN | M7),		(OFF_DIS) },
 	//{ "uart3_rx_irrx",	"AP_FLM_RXD",	0x144, (),		() },
 	//{ "uart3_tx_irtx",	"AP_FLM_TXD",	0x146, (),		() },
 
-	//{ "sdmmc5_clk",  "WLAN_SD_CLK",		0x148, (),		() },
-	//{ "sdmmc5_cmd",  "WLAN_SD_CMD",		0x14A, (),		() },
-	//{ "sdmmc5_dat0", "WLAN_SD_D(0)",	0x14C, (),		() },
-	//{ "sdmmc5_dat1", "WLAN_SD_D(1)",	0x14E, (),		() },
-	//{ "sdmmc5_dat2", "WLAN_SD_D(2)",	0x150, (),		() },
-	//{ "sdmmc5_dat3", "WLAN_SD_D(3)",	0x152, (),		() },
+	{ "sdmmc5_clk",  "WLAN_SD_CLK",		0x148, (IEN | M0),		(OFF_IN_PD) },
+	{ "sdmmc5_cmd",  "WLAN_SD_CMD",		0x14A, (IEN | PTU | EN | M0),	(OFF_DIS) },
+	{ "sdmmc5_dat0", "WLAN_SD_D(0)",	0x14C, (IEN | PTU | EN | M0),	(OFF_DIS) },
+	{ "sdmmc5_dat1", "WLAN_SD_D(1)",	0x14E, (IEN | PTU | EN | M0),	(OFF_DIS) },
+	{ "sdmmc5_dat2", "WLAN_SD_D(2)",	0x150, (IEN | PTU | EN | M0),	(OFF_DIS) },
+	{ "sdmmc5_dat3", "WLAN_SD_D(3)",	0x152, (IEN | PTU | EN | M0),	(OFF_DIS) },
 
 	//{ "mcspi4_clk",  "LCD_SCLK",		0x154, (),		() },
 	//{ "mcspi4_simo", "LCD_SDI",		0x156, (),		() },
@@ -247,18 +247,18 @@
 	//{ "usbb2_ulpitll_dat6",	"LCD_D(12)",	0x174, (),		() },
 	//{ "usbb2_ulpitll_dat7",	"LCD_D(11)",	0x176, (),		() },
 	//{ "usbb2_hsic_data",	"2MIC_EN",	0x178, (),		() },
-	//{ "usbb2_hsic_strobe",	"-nc-",		0x17A, (),		() },
+	//{ "usbb2_hsic_strobe",	"-nc-",		0x17A, (PTD | EN | M7),		(OFF_DIS) },
 
 	{ "kdp_col3",	"HW_REV3",	0x17C, (IEN | M3),		(OFF_IN_PD) },
 	{ "kdp_col4",	"HW_REV2",	0x17E, (IEN | M3),		(OFF_IN_PU) },
 	{ "kdp_col5",	"HW_REV0",	0x180, (IEN | M3),		(OFF_IN_PU) },
-	//{ "kdp_col0",	"-nc-",		0x182, (),		() },
+	//{ "kdp_col0",	"-nc-",		0x182, (PTD | EN | M7),		(OFF_DIS) },
 	//{ "kdp_col1",	"KBC(1)",	0x184, (),		() },
 	//{ "kdp_col2",	"KBC(2)",	0x186, (),		() },
 	{ "kpd_row3",	"HW_REV1",	0x188, (IEN | M3),		(OFF_IN_PD) },
 	//XXX: { "kpd_row4",	"HOME_KEY",	0x18A, (),		() },
-	//{ "kpd_row5",	"-nc-",		0x18C, (),		() },
-	//{ "kpd_row0",	"-nc-",		0x18E, (),		() },
+	//{ "kpd_row5",	"-nc-",		0x18C, (PTD | EN | M7),		(OFF_DIS) },
+	//{ "kpd_row0",	"-nc-",		0x18E, (PTD | EN | M7),		(OFF_DIS) },
 	//{ "kpd_row1",	"KBR(1)",	0x190, (),		() },
 	//{ "kpd_row2",	"KBR(2)",	0x192, (),		() },
 
@@ -335,6 +335,10 @@
 	/* fref_clk3_req */ omap_writew((PTD | EN | M7), 0x4A31E056);
 	/* fref_clk4_req */ omap_writew((PTD | EN | M0), 0x4A31E05A);
 	/* fref_clk4_out */ omap_writew((PTD | EN | M3), 0x4A31E05C);
+	/* AUXCLK3_SCRM, clock is disabled by software */
+	reg_val32 = omap_readl(0x4A30A31C);
+	reg_val32 &= ~(0x1<<8);
+	omap_writel(reg_val32, 0x4A30A31C);
 
 	/* LPDDR_VREF set to zero */
 	reg_val32 = omap_readl(0x4A100644);
Index: Kernel_914878/drivers/mmc/host/omap_hsmmc.c
===================================================================
--- Kernel_914878.orig/drivers/mmc/host/omap_hsmmc.c	2011-02-17 21:13:38.000000000 +0530
+++ Kernel_914878/drivers/mmc/host/omap_hsmmc.c	2011-02-17 21:18:28.073235094 +0530
@@ -33,6 +33,7 @@
 #include <linux/gpio.h>
 #include <linux/regulator/consumer.h>
 #include <linux/pm_runtime.h>
+#include <linux/i2c/twl.h>
 #ifdef CONFIG_PM
 #include <plat/omap-pm.h>
 #endif
@@ -2652,6 +2653,55 @@
 		}
 
 	}
+
+	/* Turn OFF the LDO that supplies power to eMMC. */
+	twl_i2c_write_u8(TWL_MODULE_PM_MASTER, 0x01, 0xAD - 0x001F); //REGEN1_CFG_GRP
+	twl_i2c_write_u8(TWL_MODULE_PM_MASTER, 0x01, 0xAE - 0x001F); //REGEN1_CFG_TRANS
+
+	/* FIXME:
+	 * The code below is a dirty hack. We understand that this not the
+	 * right place to make these changes. All these necessary changes
+	 * are reporrted to TI and until we get the right fix lets keep
+	 * them here.
+	 */
+	twl_i2c_write_u8(TWL_MODULE_PM_MASTER, 0xC0, 0x20-0x001F); //PREQ1
+	twl_i2c_write_u8(TWL_MODULE_PM_MASTER, 0x01, 0x99-0x001F); //VMMC_CFG_VOLTAGE
+	twl_i2c_write_u8(TWL_MODULE_PM_MASTER, 0x01, 0x98-0x001F); //VMMC_CFG_VOLTAGE
+
+	twl_i2c_write_u8(TWL_MODULE_PM_MASTER, 0x01, 0x94-0x001F); //VDAC_CFG_VOLTAGE
+	twl_i2c_write_u8(TWL_MODULE_PM_MASTER, 0x01, 0x95-0x001F); //VDAC_CFG_VOLTAGE
+
+	twl_i2c_write_u8(TWL_MODULE_PM_MASTER, 0x01, 0x9C-0x001F); //VPP_CFG_VOLTAGE
+	twl_i2c_write_u8(TWL_MODULE_PM_MASTER, 0x01, 0x9D-0x001F); //VPP_CFG_VOLTAGE
+
+	twl_i2c_write_u8(TWL_MODULE_PM_MASTER, 0x01, 0xA4-0x001F); //VUSIM_CFG_VOLTAGE
+	twl_i2c_write_u8(TWL_MODULE_PM_MASTER, 0x01, 0xA5-0x001F); //VUSIM_CFG_VOLTAGE
+
+#if 0
+	twl_i2c_write_u8(TWL_MODULE_PM_MASTER, 0x01, 0x84-0x001F); //VAUX1_CFG_VOLTAGE
+	twl_i2c_write_u8(TWL_MODULE_PM_MASTER, 0x01, 0x85-0x001F); //VAUX1_CFG_VOLTAGE
+
+	twl_i2c_write_u8(TWL_MODULE_PM_MASTER, 0x01, 0x88-0x001F); //VAUX2_CFG_VOLTAGE
+	twl_i2c_write_u8(TWL_MODULE_PM_MASTER, 0x01, 0x89-0x001F); //VAUX2_CFG_VOLTAGE
+
+	twl_i2c_write_u8(TWL_MODULE_PM_MASTER, 0x01, 0x8C-0x001F); //VAUX3_CFG_VOLTAGE
+	twl_i2c_write_u8(TWL_MODULE_PM_MASTER, 0x01, 0x8D-0x001F); //VAUX3_CFG_VOLTAGE
+#endif
+
+	twl_i2c_write_u8(TWL_MODULE_PM_MASTER, 0x01, 0xA0-0x001F); //VUSB_CFG_VOLTAGE
+	twl_i2c_write_u8(TWL_MODULE_PM_MASTER, 0x01, 0xA1-0x001F); //VUSB_CFG_VOLTAGE
+
+	twl_i2c_write_u8(TWL_MODULE_PM_MASTER, 0x01, 0xC8-0x001F); //VBATMIN_CFG_VOLTAGE
+	twl_i2c_write_u8(TWL_MODULE_PM_MASTER, 0x01, 0xC9-0x001F); //VBATMIN_CFG_VOLTAGE
+
+	twl_i2c_write_u8(TWL_MODULE_PM_MASTER, 0x01, 0xBF-0x001F); //VCLK32K_AUD_VOLTAGE
+	twl_i2c_write_u8(TWL_MODULE_PM_MASTER, 0x01, 0xC0-0x001F); //VCLK32K_CFG_VOLTAGE
+
+	twl_i2c_write_u8(TWL_MODULE_PM_MASTER, 0x10, 0xE5-0x001F); //VDAC_CFG_VOLTAGE
+
+	twl_i2c_write_u8(TWL_MODULE_PM_MASTER, 0x01, 0x90-0x001F); //VCXIO_CFG_GRP
+	twl_i2c_write_u8(TWL_MODULE_PM_MASTER, 0x01, 0x91-0x001F); //VCXIO_CFG_TRANS
+
 	return ret;
 }
 

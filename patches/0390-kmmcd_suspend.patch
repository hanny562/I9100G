commit e7cb756fc3c7c32040283963572258381b342dff
Author: Ethan Du <ethan.too@gmail.com>
Date:   Thu Sep 9 16:37:49 2010 -0700

    omap hsmmc: fix a racing case between kmmcd and omap_hsmmc_suspend
    
    If suspend called when kmmcd is doing host->ops->disable, as kmmcd already
    increased host->en_dis_recurs to 1, the mmc_host_enable in suspend
    function will return directly without increase the nesting_cnt, which will
    cause the followed register access carried out to the disabled host.
    
    mmc_suspend_host will enable host itself.  No need to enable host before
    it.  Also works on kmmcd will get flushed in mmc_suspend_host, enable host
    after it will be safe.  So make the mmc_host_enable after it.
    
    [cjb: rebase against current Linus]
    Signed-off-by: Ethan <ethan.too@gmail.com>
    Signed-off-by: Chris Ball <cjb@laptop.org>
    Acked-by: Adrian Hunter <adrian.hunter@nokia.com>
    Acked-by: Madhusudhan Chikkature <madhu.cr@ti.com>
    Cc: <linux-mmc@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

Index: kernel/drivers/mmc/host/omap_hsmmc.c
===================================================================
--- kernel.orig/drivers/mmc/host/omap_hsmmc.c	2011-05-27 13:05:28.000000000 +0900
+++ kernel/drivers/mmc/host/omap_hsmmc.c	2011-05-28 19:22:51.000000000 +0900
@@ -2835,8 +2835,8 @@
 			}
 		}
 		cancel_work_sync(&host->mmc_carddetect_work);
-		mmc_host_enable(host->mmc);
 		ret = mmc_suspend_host(host->mmc);
+		mmc_host_enable(host->mmc);
 		if (ret == 0) {
 			omap_hsmmc_disable_irq(host);
 			OMAP_HSMMC_WRITE(host, HCTL,

Index: android-2.6.35_10.1/arch/arm/configs/android_4430_samsung_defconfig
===================================================================
--- android-2.6.35_10.1.orig/arch/arm/configs/android_4430_samsung_defconfig	2010-12-30 11:28:29.948706683 +0530
+++ android-2.6.35_10.1/arch/arm/configs/android_4430_samsung_defconfig	2010-12-30 11:28:33.068707114 +0530
@@ -1,7 +1,7 @@
 #
 # Automatically generated make config: don't edit
 # Linux kernel version: 2.6.35
-# Tue Sep 21 11:51:11 2010
+# Wed Oct  6 14:22:23 2010
 #
 CONFIG_ARM=y
 CONFIG_HAVE_PWM=y
@@ -282,8 +282,10 @@
 CONFIG_TIWLAN_SDIO=y
 CONFIG_TIWLAN_MMC_CONTROLLER=5
 # CONFIG_OMAP4_ES1 is not set
-CONFIG_MACH_OMAP_4430SDP=y
-CONFIG_MACH_OMAP4_PANDA=y
+# CONFIG_MACH_OMAP_4430SDP is not set
+CONFIG_MACH_OMAP4_TAB_10_1=y
+CONFIG_SAMSUNG_OMAP4_TAB_REV=2
+# CONFIG_MACH_OMAP4_PANDA is not set
 # CONFIG_ERRATA_OMAP4_AXI2OCP is not set
 
 #
@@ -563,6 +565,7 @@
 # CONFIG_NETFILTER_XT_TARGET_CT is not set
 # CONFIG_NETFILTER_XT_TARGET_DSCP is not set
 # CONFIG_NETFILTER_XT_TARGET_HL is not set
+# CONFIG_NETFILTER_XT_TARGET_LED is not set
 CONFIG_NETFILTER_XT_TARGET_MARK=y
 # CONFIG_NETFILTER_XT_TARGET_NFLOG is not set
 CONFIG_NETFILTER_XT_TARGET_NFQUEUE=y
@@ -715,6 +718,7 @@
 # CONFIG_WIMAX is not set
 CONFIG_RFKILL=y
 # CONFIG_RFKILL_PM is not set
+CONFIG_RFKILL_LEDS=y
 # CONFIG_RFKILL_INPUT is not set
 # CONFIG_NET_9P is not set
 # CONFIG_CAIF is not set
@@ -764,11 +768,13 @@
 CONFIG_KERNEL_DEBUGGER_CORE=y
 # CONFIG_ISL29003 is not set
 # CONFIG_SENSORS_TSL2550 is not set
-# CONFIG_SENSORS_BH1780=y
+# CONFIG_SENSORS_BH1780 is not set
 # CONFIG_SENSORS_AK8975 is not set
+CONFIG_TWL6040_VIB=y
 # CONFIG_DS1682 is not set
 # CONFIG_TI_DAC7512 is not set
 CONFIG_UID_STAT=y
+# CONFIG_BMP085 is not set
 # CONFIG_WL127X_RFKILL is not set
 # CONFIG_APANIC is not set
 # CONFIG_C2PORT is not set
@@ -845,7 +851,7 @@
 #
 CONFIG_INPUT=y
 # CONFIG_INPUT_FF_MEMLESS is not set
-# CONFIG_INPUT_POLLDEV is not set
+CONFIG_INPUT_POLLDEV=y
 # CONFIG_INPUT_SPARSEKMAP is not set
 
 #
@@ -909,6 +915,7 @@
 # CONFIG_TOUCHSCREEN_TPS6507X is not set
 CONFIG_INPUT_MISC=y
 # CONFIG_INPUT_AD714X is not set
+# CONFIG_INPUT_BH1780 is not set
 # CONFIG_INPUT_ATI_REMOTE is not set
 # CONFIG_INPUT_ATI_REMOTE2 is not set
 CONFIG_INPUT_KEYCHORD=y
@@ -924,7 +931,9 @@
 # CONFIG_INPUT_PCF8574 is not set
 # CONFIG_INPUT_GPIO_ROTARY_ENCODER is not set
 CONFIG_INPUT_SFH7741=y
-# CONFIG_INPUT_CMA3000_I2C is not set
+CONFIG_INPUT_CMA3000_I2C=y
+CONFIG_INPUT_HMC5843=y
+CONFIG_INPUT_BMP085=y
 
 #
 # Hardware I/O ports
@@ -1355,8 +1364,9 @@
 # CONFIG_PANEL_GENERIC is not set
 # CONFIG_PANEL_SHARP_LS037V7DW01 is not set
 # CONFIG_PANEL_SHARP_LQ043T1DG01 is not set
-CONFIG_PANEL_PICO_DLP=y
-CONFIG_PANEL_TAAL=y
+# CONFIG_PANEL_PICO_DLP is not set
+# CONFIG_PANEL_TAAL is not set
+# CONFIG_PANEL_NEC_NL8048HL11_01B is not set
 # CONFIG_PANEL_TOPPOLY_TDO35S is not set
 # CONFIG_PANEL_TPO_TD043MTEA1 is not set
 CONFIG_BACKLIGHT_LCD_SUPPORT=y
@@ -1443,6 +1453,7 @@
 CONFIG_SND_SOC_TWL6040=y
 # CONFIG_SOUND_PRIME is not set
 # CONFIG_HID_SUPPORT is not set
+CONFIG_HID=y
 CONFIG_USB_SUPPORT=y
 CONFIG_USB_ARCH_HAS_HCD=y
 CONFIG_USB_ARCH_HAS_OHCI=y
@@ -1564,7 +1575,23 @@
 # CONFIG_LEDS_REGULATOR is not set
 # CONFIG_LEDS_BD2802 is not set
 # CONFIG_LEDS_LT3593 is not set
-# CONFIG_LEDS_TRIGGERS is not set
+CONFIG_LEDS_OMAP4430_SDP_DISPLAY=y
+CONFIG_LEDS_OMAP4430_SDP_KEYPAD=y
+CONFIG_LEDS_TRIGGERS=y
+
+#
+# LED Triggers
+#
+CONFIG_LEDS_TRIGGER_TIMER=y
+# CONFIG_LEDS_TRIGGER_HEARTBEAT is not set
+# CONFIG_LEDS_TRIGGER_BACKLIGHT is not set
+# CONFIG_LEDS_TRIGGER_GPIO is not set
+# CONFIG_LEDS_TRIGGER_DEFAULT_ON is not set
+# CONFIG_LEDS_TRIGGER_SLEEP is not set
+
+#
+# iptables trigger is under Netfilter config (LED target)
+#
 CONFIG_SWITCH=y
 CONFIG_SWITCH_GPIO=y
 # CONFIG_ACCESSIBILITY is not set
@@ -1974,7 +2001,9 @@
 # CONFIG_DEBUG_USER is not set
 # CONFIG_DEBUG_ERRORS is not set
 # CONFIG_DEBUG_STACK_USAGE is not set
-# CONFIG_DEBUG_LL is not set
+CONFIG_DEBUG_LL=y
+CONFIG_EARLY_PRINTK=y
+# CONFIG_DEBUG_ICEDCC is not set
 # CONFIG_OC_ETM is not set
 
 #
@@ -1983,6 +2012,7 @@
 # CONFIG_KEYS is not set
 # CONFIG_SECURITY is not set
 # CONFIG_SECURITYFS is not set
+CONFIG_SECURITY_MIDDLEWARE_COMPONENT=y
 # CONFIG_DEFAULT_SECURITY_SELINUX is not set
 # CONFIG_DEFAULT_SECURITY_SMACK is not set
 # CONFIG_DEFAULT_SECURITY_TOMOYO is not set
Index: android-2.6.35_10.1/arch/arm/mach-omap2/Kconfig
===================================================================
--- android-2.6.35_10.1.orig/arch/arm/mach-omap2/Kconfig	2010-12-21 18:24:18.000000000 +0530
+++ android-2.6.35_10.1/arch/arm/mach-omap2/Kconfig	2010-12-30 11:28:33.068707114 +0530
@@ -82,7 +82,7 @@
 
 config WIFI_CONTROL_FUNC
         bool "Enable WiFi control function abstraction"
-        depends on MACH_OMAP_4430SDP
+        depends on MACH_OMAP_4430SDP || MACH_OMAP4_TAB_10_1
         select WIRELESS_EXT
         select WEXT_CORE
         select WEXT_PROC
@@ -231,6 +231,49 @@
 	select CHARGER_BQ2415x
 	select SECURITY_MIDDLEWARE_COMPONENT
 
+config MACH_OMAP4_TAB_10_1
+	bool "OMAP 4430 Samsung 10.1' tablet board"
+	depends on ARCH_OMAP4
+	select HIGHMEM
+#	select TWL6030_PWM
+	select TWL6030_GPADC
+	select TWL6040_VIB
+	select NEW_LEDS
+	select LEDS_CLASS
+	select LEDS_PWM
+	select LEDS_GPIO
+	select LEDS_GPIO_PLATFORM
+	select LEDS_OMAP4430_SDP_DISPLAY
+	select LEDS_OMAP4430_SDP_KEYPAD
+	select LEDS_TRIGGERS
+	select LEDS_TRIGGER_TIMER
+	select INPUT_CMA3000_I2C
+#	select SENSORS_BH1780
+#	select INPUT_BH1780
+	select MISC_DEVICES
+#	select BMP085
+	select INPUT_BMP085
+	select STAGING
+	select IIO
+#	select SENSORS_HMC5843
+	select INPUT_HMC5843
+	select INPUT_SFH7741
+	select HWMON
+#	select SENSORS_LM75
+	select INPUT_MISC
+	select INPUT_KEYBOARD
+	select INPUT_TOUCHSCREEN
+	select TOUCHSCREEN_SYNTM12XX
+	select POWER_SUPPLY
+	select TWL6030_BCI_BATTERY
+	select CHARGER_BQ2415x
+	select SECURITY_MIDDLEWARE_COMPONENT
+
+config  SAMSUNG_OMAP4_TAB_REV
+        int "Samsung OMAP4 10.1' Tablet H/W Board Revision"
+        depends on MACH_OMAP4_TAB_10_1
+        default 3
+
 config MACH_OMAP4_PANDA
 	bool "OMAP4 based Panda board"
 	depends on ARCH_OMAP4
Index: android-2.6.35_10.1/arch/arm/mach-omap2/board-omap4tab10-1.c
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ android-2.6.35_10.1/arch/arm/mach-omap2/board-omap4tab10-1.c	2010-12-30 11:28:33.068707114 +0530
@@ -0,0 +1,686 @@
+/*
+ * Board support file for Samsung OMAP4 10.1' tablelet Board.
+ *
+ * Copyright (C) 2010 Samsung Electronics
+ *
+ * Author: Shankar Bandal <shankar.b@samsung.com>
+ *
+ * Based on mach-omap2/board-4430sdp.c
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+
+#include <linux/kernel.h>
+#include <linux/init.h>
+#include <linux/platform_device.h>
+#include <linux/io.h>
+#include <linux/gpio.h>
+#include <linux/usb/otg.h>
+#include <linux/spi/spi.h>
+#include <linux/i2c/twl.h>
+#include <linux/i2c/cma3000.h>
+#include <linux/regulator/machine.h>
+#include <linux/input/sfh7741.h>
+#include <linux/leds.h>
+#include <linux/leds_pwm.h>
+#include <linux/leds-omap4430sdp-display.h>
+#include <linux/interrupt.h>
+#include <linux/delay.h>
+#include <linux/twl6040-vib.h>
+
+#include <mach/hardware.h>
+#include <mach/omap4-common.h>
+#include <asm/mach-types.h>
+#include <asm/mach/arch.h>
+#include <asm/mach/map.h>
+
+#include <plat/board.h>
+#include <plat/common.h>
+#include <plat/control.h>
+#include <plat/timer-gp.h>
+#include <plat/display.h>
+#include <plat/usb.h>
+#include <plat/omap_device.h>
+#include <plat/omap_hwmod.h>
+#include <plat/mmc.h>
+#include <plat/syntm12xx.h>
+#include <plat/omap4-keypad.h>
+#include <plat/hwspinlock.h>
+#include <plat/nokia-dsi-panel.h>
+#include "hsmmc.h"
+#include "smartreflex-class3.h"
+
+static struct platform_device omap4tab_hdmi_audio_device = {
+	.name		= "hdmi-dai",
+	.id		= -1,
+};
+
+static int omap4tab_keymap[] = {
+	KEY(0, 0, KEY_E),
+	KEY(0, 1, KEY_R),
+	KEY(0, 2, KEY_T),
+	KEY(0, 3, KEY_HOME),
+	KEY(0, 4, KEY_F5),
+	KEY(0, 5, KEY_UNKNOWN),
+	KEY(0, 6, KEY_I),
+	KEY(0, 7, KEY_LEFTSHIFT),
+
+	KEY(1, 0, KEY_D),
+	KEY(1, 1, KEY_F),
+	KEY(1, 2, KEY_G),
+	KEY(1, 3, KEY_SEND),
+	KEY(1, 4, KEY_F6),
+	KEY(1, 5, KEY_UNKNOWN),
+	KEY(1, 6, KEY_K),
+	KEY(1, 7, KEY_ENTER),
+
+	KEY(2, 0, KEY_X),
+	KEY(2, 1, KEY_C),
+	KEY(2, 2, KEY_V),
+	KEY(2, 3, KEY_END),
+	KEY(2, 4, KEY_F7),
+	KEY(2, 5, KEY_UNKNOWN),
+	KEY(2, 6, KEY_DOT),
+	KEY(2, 7, KEY_CAPSLOCK),
+
+	KEY(3, 0, KEY_Z),
+	KEY(3, 1, KEY_KPPLUS),
+	KEY(3, 2, KEY_B),
+	KEY(3, 3, KEY_F1),
+	KEY(3, 4, KEY_F8),
+	KEY(3, 5, KEY_UNKNOWN),
+	KEY(3, 6, KEY_O),
+	KEY(3, 7, KEY_SPACE),
+
+	KEY(4, 0, KEY_W),
+	KEY(4, 1, KEY_Y),
+	KEY(4, 2, KEY_U),
+	KEY(4, 3, KEY_F2),
+	KEY(4, 4, KEY_VOLUMEUP),
+	KEY(4, 5, KEY_UNKNOWN),
+	KEY(4, 6, KEY_L),
+	KEY(4, 7, KEY_LEFT),
+
+	KEY(5, 0, KEY_S),
+	KEY(5, 1, KEY_H),
+	KEY(5, 2, KEY_J),
+	KEY(5, 3, KEY_F3),
+	KEY(5, 4, KEY_F9),
+	KEY(5, 5, KEY_VOLUMEDOWN),
+	KEY(5, 6, KEY_M),
+	KEY(5, 7, KEY_RIGHT),
+
+	KEY(6, 0, KEY_Q),
+	KEY(6, 1, KEY_A),
+	KEY(6, 2, KEY_N),
+	KEY(6, 3, KEY_BACK),
+	KEY(6, 4, KEY_BACKSPACE),
+	KEY(6, 5, KEY_UNKNOWN),
+	KEY(6, 6, KEY_P),
+	KEY(6, 7, KEY_UP),
+
+	KEY(7, 0, KEY_PROG1),
+	KEY(7, 1, KEY_PROG2),
+	KEY(7, 2, KEY_PROG3),
+	KEY(7, 3, KEY_PROG4),
+	KEY(7, 4, KEY_F4),
+	KEY(7, 5, KEY_UNKNOWN),
+	KEY(7, 6, KEY_OK),
+	KEY(7, 7, KEY_DOWN),
+};
+
+static struct matrix_keymap_data omap4tab_keymap_data = {
+	.keymap			= omap4tab_keymap,
+	.keymap_size		= ARRAY_SIZE(omap4tab_keymap),
+};
+
+static struct omap4_keypad_platform_data omap4tab_keypad_data = {
+	.keymap_data		= &omap4tab_keymap_data,
+	.rows			= 8,
+	.cols			= 8,
+};
+
+static struct twl6040_vib_platform_data omap4tab_vib_data = {
+	.max_timeout = 15000,
+	.active_low = 0,
+	.initial_vibrate = 0,
+};
+
+static struct platform_device omap4tab_vib = {
+	.name           = VIB_NAME,
+	.id             = -1,
+	.dev            = {
+		.platform_data  = &omap4tab_vib_data,
+	},
+};
+
+
+static struct platform_device omap4tab_keypad_led = {
+	.name	=	"keypad_led",
+	.id	=	-1,
+	.dev	= {
+		.platform_data = NULL,
+	},
+};
+
+
+
+static int omap4tab_panel_enable_hdmi(struct omap_dss_device *dssdev)
+{
+	gpio_request(HDMI_GPIO_60 , "hdmi_gpio_60");
+	gpio_request(HDMI_GPIO_41 , "hdmi_gpio_41");
+	gpio_direction_output(HDMI_GPIO_60, 0);
+	gpio_direction_output(HDMI_GPIO_41, 0);
+	gpio_set_value(HDMI_GPIO_60, 1);
+	gpio_set_value(HDMI_GPIO_41, 1);
+	gpio_set_value(HDMI_GPIO_60, 0);
+	gpio_set_value(HDMI_GPIO_41, 0);
+	gpio_set_value(HDMI_GPIO_60, 1);
+	gpio_set_value(HDMI_GPIO_41, 1);
+	return 0;
+}
+
+static void omap4tab_panel_disable_hdmi(struct omap_dss_device *dssdev)
+{
+	gpio_set_value(HDMI_GPIO_60, 1);
+	gpio_set_value(HDMI_GPIO_41, 1);
+}
+
+static __attribute__ ((unused)) void __init omap4tab_hdmi_init(void)
+{
+	return;
+}
+
+static struct omap_dss_device omap4tab_hdmi_device = {
+	.name = "hdmi",
+	.driver_name = "hdmi_panel",
+	.type = OMAP_DISPLAY_TYPE_HDMI,
+	.phy.dpi.data_lines = 24,
+	.platform_enable = omap4tab_panel_enable_hdmi,
+	.platform_disable = omap4tab_panel_disable_hdmi,
+	.channel = OMAP_DSS_CHANNEL_DIGIT,
+};
+
+
+
+static struct omap_dss_device *omap4tab_dss_devices[] = {
+	&omap4tab_hdmi_device,
+};
+
+static struct omap_dss_board_info omap4tab_dss_data = {
+	.num_devices	=	ARRAY_SIZE(omap4tab_dss_devices),
+	.devices	=	omap4tab_dss_devices,
+	//.default_device	=	&omap4tab_lcd_device,
+};
+
+/* wl128x BT, FM, GPS connectivity chip */
+static int gpios[] = {55, -1, -1};
+static struct platform_device wl128x_device = {
+	.name		= "kim",
+	.id		= -1,
+	.dev.platform_data = &gpios,
+};
+
+static struct platform_device *omap4tab_devices[] __initdata = {
+	&wl128x_device,
+	&omap4tab_hdmi_audio_device,
+	&omap4tab_vib,
+	&omap4tab_keypad_led,
+};
+
+static void __init omap4_tab_10_1_init_irq(void)
+{
+	omap2_init_common_hw(NULL, NULL);
+#ifdef CONFIG_OMAP_32K_TIMER
+	omap2_gp_clockevent_set_gptimer(1);
+#endif
+	gic_init_irq();
+	sr_class3_init();
+}
+
+static struct omap_musb_board_data musb_board_data = {
+	.interface_type		= MUSB_INTERFACE_UTMI,
+#ifdef CONFIG_USB_MUSB_OTG
+	.mode			= MUSB_OTG,
+#elif defined(CONFIG_USB_MUSB_HDRC_HCD)
+	.mode			= MUSB_HOST,
+#elif defined(CONFIG_USB_GADGET_MUSB_HDRC)
+	.mode			= MUSB_PERIPHERAL,
+#endif
+	.power			= 100,
+};
+
+static struct omap2_hsmmc_info mmc[] = {
+	{
+		.mmc		= 2,
+		.wires		= 8,
+		.gpio_cd	= -EINVAL,
+		.gpio_wp	= -EINVAL,
+		.ocr_mask	= MMC_VDD_165_195,
+		.nonremovable   = true,
+#ifdef CONFIG_PM_RUNTIME
+		.power_saving	= true,
+#endif
+	},
+	{
+		.mmc		= 1,
+		.wires		= 8,
+		.gpio_wp	= -EINVAL,
+#ifdef CONFIG_PM_RUNTIME
+		.power_saving	= true,
+#endif
+	},
+	{
+		.mmc		= 5,
+		.wires		= 8,
+		.gpio_cd	= -EINVAL,
+		.gpio_wp        = 4,
+		.ocr_mask	= MMC_VDD_165_195,
+#ifdef CONFIG_PM_RUNTIME
+		.power_saving	= true,
+#endif
+	},
+	{}	/* Terminator */
+};
+
+static struct regulator_consumer_supply omap4tab_vmmc_supply[] = {
+	{
+		.supply = "vmmc",
+		.dev_name = "mmci-omap-hs.0",
+	},
+};
+
+static struct regulator_consumer_supply omap4tab_cam2_supply[] = {
+	{
+		.supply = "cam2pwr",
+	},
+};
+static int omap4_twl6030_hsmmc_late_init(struct device *dev)
+{
+	int ret = 0;
+	struct platform_device *pdev = container_of(dev,
+				struct platform_device, dev);
+	struct omap_mmc_platform_data *pdata = dev->platform_data;
+
+	/* Setting MMC1 Card detect Irq */
+	if (pdev->id == 0) {
+		ret = twl6030_mmc_card_detect_config();
+		if (ret)
+			pr_err("Failed configuring MMC1 card detect\n");
+		pdata->slots[0].card_detect_irq = TWL6030_IRQ_BASE +
+						MMCDETECT_INTR_OFFSET;
+		pdata->slots[0].card_detect = twl6030_mmc_card_detect;
+	}
+	return ret;
+}
+
+static __init void omap4_twl6030_hsmmc_set_late_init(struct device *dev)
+{
+	struct omap_mmc_platform_data *pdata;
+
+	/* dev can be null if CONFIG_MMC_OMAP_HS is not set */
+	if (!dev)
+		return;
+
+	pdata = dev->platform_data;
+	pdata->init = omap4_twl6030_hsmmc_late_init;
+}
+
+static int __init omap4_twl6030_hsmmc_init(struct omap2_hsmmc_info *controllers)
+{
+	struct omap2_hsmmc_info *c;
+
+	omap2_hsmmc_init(controllers);
+	for (c = controllers; c->mmc; c++)
+		omap4_twl6030_hsmmc_set_late_init(c->dev);
+
+	return 0;
+}
+
+static struct regulator_init_data omap4tab_vaux1 = {
+	.constraints = {
+		.min_uV			= 1000000,
+		.max_uV			= 3000000,
+		.apply_uV		= true,
+		.valid_modes_mask	= REGULATOR_MODE_NORMAL
+					| REGULATOR_MODE_STANDBY,
+		.valid_ops_mask	 = REGULATOR_CHANGE_VOLTAGE
+					| REGULATOR_CHANGE_MODE
+					| REGULATOR_CHANGE_STATUS,
+	},
+};
+
+static struct regulator_init_data omap4tab_vaux2 = {
+	.constraints = {
+		.min_uV			= 1200000,
+		.max_uV			= 2800000,
+		.apply_uV		= true,
+		.valid_modes_mask	= REGULATOR_MODE_NORMAL
+					| REGULATOR_MODE_STANDBY,
+		.valid_ops_mask	 = REGULATOR_CHANGE_VOLTAGE
+					| REGULATOR_CHANGE_MODE
+					| REGULATOR_CHANGE_STATUS,
+	},
+};
+
+static struct regulator_init_data omap4tab_vaux3 = {
+	.constraints = {
+		.min_uV			= 1000000,
+		.max_uV			= 3000000,
+		.apply_uV		= true,
+		.valid_modes_mask	= REGULATOR_MODE_NORMAL
+					| REGULATOR_MODE_STANDBY,
+		.valid_ops_mask	 = REGULATOR_CHANGE_VOLTAGE
+					| REGULATOR_CHANGE_MODE
+					| REGULATOR_CHANGE_STATUS,
+	},
+	.num_consumer_supplies = 1,
+	.consumer_supplies = omap4tab_cam2_supply,
+};
+
+/* VMMC1 for MMC1 card */
+static struct regulator_init_data omap4tab_vmmc = {
+	.constraints = {
+		.min_uV			= 1200000,
+		.max_uV			= 3000000,
+		.apply_uV		= true,
+		.valid_modes_mask	= REGULATOR_MODE_NORMAL
+					| REGULATOR_MODE_STANDBY,
+		.valid_ops_mask	 = REGULATOR_CHANGE_VOLTAGE
+					| REGULATOR_CHANGE_MODE
+					| REGULATOR_CHANGE_STATUS,
+	},
+	.num_consumer_supplies  = 1,
+	.consumer_supplies      = omap4tab_vmmc_supply,
+};
+
+static struct regulator_init_data omap4tab_vpp = {
+	.constraints = {
+		.min_uV			= 1800000,
+		.max_uV			= 2500000,
+		.apply_uV		= true,
+		.valid_modes_mask	= REGULATOR_MODE_NORMAL
+					| REGULATOR_MODE_STANDBY,
+		.valid_ops_mask	 = REGULATOR_CHANGE_VOLTAGE
+					| REGULATOR_CHANGE_MODE
+					| REGULATOR_CHANGE_STATUS,
+	},
+};
+
+static struct regulator_init_data omap4tab_vusim = {
+	.constraints = {
+		.min_uV			= 1200000,
+		.max_uV			= 2900000,
+		.apply_uV		= true,
+		.valid_modes_mask	= REGULATOR_MODE_NORMAL
+					| REGULATOR_MODE_STANDBY,
+		.valid_ops_mask	 = REGULATOR_CHANGE_VOLTAGE
+					| REGULATOR_CHANGE_MODE
+					| REGULATOR_CHANGE_STATUS,
+	},
+};
+
+static struct regulator_init_data omap4tab_vana = {
+	.constraints = {
+		.min_uV			= 2100000,
+		.max_uV			= 2100000,
+		.apply_uV		= true,
+		.valid_modes_mask	= REGULATOR_MODE_NORMAL
+					| REGULATOR_MODE_STANDBY,
+		.valid_ops_mask	 = REGULATOR_CHANGE_MODE
+					| REGULATOR_CHANGE_STATUS,
+	},
+};
+
+static struct regulator_init_data omap4tab_vcxio = {
+	.constraints = {
+		.min_uV			= 1800000,
+		.max_uV			= 1800000,
+		.apply_uV		= true,
+		.valid_modes_mask	= REGULATOR_MODE_NORMAL
+					| REGULATOR_MODE_STANDBY,
+		.valid_ops_mask	 = REGULATOR_CHANGE_MODE
+					| REGULATOR_CHANGE_STATUS,
+	},
+};
+
+static struct regulator_init_data omap4tab_vdac = {
+	.constraints = {
+		.min_uV			= 1800000,
+		.max_uV			= 1800000,
+		.apply_uV		= true,
+		.valid_modes_mask	= REGULATOR_MODE_NORMAL
+					| REGULATOR_MODE_STANDBY,
+		.valid_ops_mask	 = REGULATOR_CHANGE_MODE
+					| REGULATOR_CHANGE_STATUS,
+	},
+};
+
+static struct regulator_init_data omap4tab_vusb = {
+	.constraints = {
+		.min_uV			= 3300000,
+		.max_uV			= 3300000,
+		.apply_uV		= true,
+		.valid_modes_mask	= REGULATOR_MODE_NORMAL
+					| REGULATOR_MODE_STANDBY,
+		.valid_ops_mask	 =	REGULATOR_CHANGE_MODE
+					| REGULATOR_CHANGE_STATUS,
+	},
+};
+
+static struct twl4030_madc_platform_data omap4tab_gpadc_data = {
+	.irq_line	= 1,
+};
+
+static struct twl4030_bci_platform_data omap4tab_bci_data = {
+	.monitoring_interval		= 10,
+	.max_charger_currentmA		= 1500,
+	.max_charger_voltagemV		= 4560,
+	.max_bat_voltagemV		= 4200,
+	.low_bat_voltagemV		= 3300,
+};
+
+static struct twl4030_codec_audio_data twl6040_audio = {
+	.audio_mclk	= 38400000,
+	.audpwron_gpio  = 127,
+	.naudint_irq    = OMAP44XX_IRQ_SYS_2N,
+};
+
+static struct twl4030_codec_vibra_data twl6040_vibra = {
+	.audio_mclk	= 38400000,
+};
+
+static struct twl4030_codec_data twl6040_codec = {
+	.audio_mclk	= 38400000,
+	.audio = &twl6040_audio,
+	.vibra = &twl6040_vibra,
+};
+
+static struct twl4030_platform_data omap4tab_twldata = {
+	.irq_base	= TWL6030_IRQ_BASE,
+	.irq_end	= TWL6030_IRQ_END,
+
+	/* Regulators */
+	.vmmc		= &omap4tab_vmmc,
+	.vpp		= &omap4tab_vpp,
+	.vusim		= &omap4tab_vusim,
+	.vana		= &omap4tab_vana,
+	.vcxio		= &omap4tab_vcxio,
+	.vdac		= &omap4tab_vdac,
+	.vusb		= &omap4tab_vusb,
+	.vaux1		= &omap4tab_vaux1,
+	.vaux2		= &omap4tab_vaux2,
+	.vaux3		= &omap4tab_vaux3,
+	.madc           = &omap4tab_gpadc_data,
+	.bci            = &omap4tab_bci_data,
+
+	/* children */
+	.codec          = &twl6040_codec,
+};
+
+static struct i2c_board_info __initdata omap4tab_i2c_boardinfo[] = {
+	{
+		I2C_BOARD_INFO("twl6030", 0x48),
+		.flags = I2C_CLIENT_WAKE,
+		.irq = OMAP44XX_IRQ_SYS_1N,
+		.platform_data = &omap4tab_twldata,
+	},
+};
+
+static struct i2c_board_info __initdata omap4tab_i2c_2_boardinfo[] = {
+
+};
+
+static struct i2c_board_info __initdata omap4tab_i2c_3_boardinfo[] = {
+
+};
+
+static struct i2c_board_info __initdata omap4tab_i2c_4_boardinfo[] = {
+
+};
+
+static const struct usbhs_omap_platform_data usbhs_pdata __initconst = {
+	.port_mode[0] = OMAP_EHCI_PORT_MODE_PHY,
+	.port_mode[1] = OMAP_OHCI_PORT_MODE_PHY_6PIN_DATSE0,
+	.port_mode[2] = OMAP_USBHS_PORT_MODE_UNUSED,
+	.phy_reset  = false,
+	.reset_gpio_port[0]  = -EINVAL,
+	.reset_gpio_port[1]  = -EINVAL,
+	.reset_gpio_port[2]  = -EINVAL
+};
+
+static struct omap_i2c_bus_board_data __initdata omap4tab_i2c_bus_pdata;
+static struct omap_i2c_bus_board_data __initdata omap4tab_i2c_2_bus_pdata;
+static struct omap_i2c_bus_board_data __initdata omap4tab_i2c_3_bus_pdata;
+static struct omap_i2c_bus_board_data __initdata omap4tab_i2c_4_bus_pdata;
+
+static void __init omap_i2c_hwspinlock_init(int bus_id, unsigned int
+			spinlock_id, struct omap_i2c_bus_board_data *pdata)
+{
+	pdata->handle = hwspinlock_request_specific(spinlock_id);
+	if (pdata->handle != NULL) {
+		pdata->hwspinlock_lock = hwspinlock_lock;
+		pdata->hwspinlock_unlock = hwspinlock_unlock;
+	} else {
+		pr_err("I2C hwspinlock request failed for bus %d\n", bus_id);
+	}
+}
+
+static int __init omap4_i2c_init(void)
+{
+	omap_i2c_hwspinlock_init(1, 0, &omap4tab_i2c_bus_pdata);
+	omap_i2c_hwspinlock_init(2, 1, &omap4tab_i2c_2_bus_pdata);
+	omap_i2c_hwspinlock_init(3, 2, &omap4tab_i2c_3_bus_pdata);
+	omap_i2c_hwspinlock_init(4, 3, &omap4tab_i2c_4_bus_pdata);
+	/*
+	 * Phoenix Audio IC needs I2C1 to
+	 * start with 400 KHz or less
+	 */
+	omap_register_i2c_bus(1, 400, &omap4tab_i2c_bus_pdata,
+		omap4tab_i2c_boardinfo, ARRAY_SIZE(omap4tab_i2c_boardinfo));
+	omap_register_i2c_bus(2, 400, &omap4tab_i2c_2_bus_pdata,
+		omap4tab_i2c_2_boardinfo, ARRAY_SIZE(omap4tab_i2c_2_boardinfo));
+	omap_register_i2c_bus(3, 400, &omap4tab_i2c_3_bus_pdata,
+		omap4tab_i2c_3_boardinfo, ARRAY_SIZE(omap4tab_i2c_3_boardinfo));
+	omap_register_i2c_bus(4, 400, &omap4tab_i2c_4_bus_pdata,
+		omap4tab_i2c_4_boardinfo, ARRAY_SIZE(omap4tab_i2c_4_boardinfo));
+	return 0;
+}
+
+
+#ifdef CONFIG_TIWLAN_SDIO
+static void pad_config(unsigned long pad_addr, u32 andmask, u32 ormask)
+{
+	int val;
+	 u32 *addr;
+
+	addr = (u32 *) ioremap(pad_addr, 4);
+	if (!addr) {
+		printk(KERN_ERR"OMAP_pad_config: ioremap failed with addr %lx\n",
+		pad_addr);
+	return;
+	}
+
+	val =  __raw_readl(addr);
+	val &= andmask;
+	val |= ormask;
+	__raw_writel(val, addr);
+
+	iounmap(addr);
+}
+
+void wlan_1283_config()
+{
+	pad_config(0x4A100078, 0xFFECFFFF, 0x00030000);
+	pad_config(0x4A10007C, 0xFFFFFFEF, 0x0000000B);
+	if (gpio_request(54, NULL) != 0)
+		printk(KERN_ERR "GPIO 54 request failed\n");
+	gpio_direction_output(54, 0);
+	return ;
+}
+#endif
+
+
+static void __init omap4_display_init(void)
+{
+
+}
+
+static void enable_board_wakeup_source(void)
+{
+	u16 padconf;
+
+	/* NOTE: Use mx framework when available */
+	/* Enable IO wakeup for the gpio used for primary touchscreen */
+	padconf = omap_readw(CONTROL_CORE_PAD1_GPMC_AD11);
+	padconf |= OMAP44XX_PADCONF_WAKEUPENABLE0;
+	omap_writew(padconf, CONTROL_CORE_PAD1_GPMC_AD11);
+}
+
+static void __init omap4_tab_10_1_init(void)
+{
+	int status;
+
+	omap4_i2c_init();
+	omap4_display_init();
+	platform_add_devices(omap4tab_devices, ARRAY_SIZE(omap4tab_devices));
+	omap_serial_init();
+	omap4_twl6030_hsmmc_init(mmc);
+
+#ifdef CONFIG_TIWLAN_SDIO
+	wlan_1283_config();
+#endif
+
+	usb_uhhtll_init(&usbhs_pdata);
+	usb_ehci_init();
+	usb_ohci_init();
+	/* OMAP4 SDP uses internal transceiver so register nop transceiver */
+	usb_nop_xceiv_register();
+	usb_musb_init(&musb_board_data);
+
+	status = omap4_keypad_initialization(&omap4tab_keypad_data);
+	if(status)
+		pr_err("Keypad initialization failed: %d\n", status);
+
+	omap_display_init(&omap4tab_dss_data);
+	enable_board_wakeup_source();
+}
+
+static void __init omap4_tab_10_1_map_io(void)
+{
+	omap2_set_globals_443x();
+	omap44xx_map_common_io();
+}
+
+MACHINE_START(OMAP4_TAB_10_1, "Samsung OMAP4 based 10.1 Tablet board")
+	/* Maintainer: Shankar Bandal Samsung India (shankar.b@samsung.com) */
+	.phys_io	= 0x48000000,
+	.io_pg_offst	= ((0xfa000000) >> 18) & 0xfffc,
+	.boot_params	= 0x80000100,
+	.map_io		= omap4_tab_10_1_map_io,
+	.init_irq	= omap4_tab_10_1_init_irq,
+	.init_machine	= omap4_tab_10_1_init,
+	.timer		= &omap_timer,
+MACHINE_END
Index: android-2.6.35_10.1/arch/arm/plat-omap/include/plat/uncompress.h
===================================================================
--- android-2.6.35_10.1.orig/arch/arm/plat-omap/include/plat/uncompress.h	2010-12-30 11:28:31.907462663 +0530
+++ android-2.6.35_10.1/arch/arm/plat-omap/include/plat/uncompress.h	2010-12-30 11:28:33.068707114 +0530
@@ -147,7 +147,8 @@
 
 		/* omap4 based boards using UART3 */
 		/* DEBUG_LL_OMAP4(3, omap_4430sdp); */
-		DEBUG_LL_OMAP4(4, omap_4430sdp);
+		/* For Samsung OMAP4 based 10.1' tablet board */
+		DEBUG_LL_OMAP4(4, omap4_tab_10_1);
 		DEBUG_LL_OMAP4(3, omap4_panda);
 
 		/* zoom2/3 external uart */
Index: android-2.6.35_10.1/arch/arm/tools/mach-types
===================================================================
--- android-2.6.35_10.1.orig/arch/arm/tools/mach-types	2010-12-10 15:11:19.000000000 +0530
+++ android-2.6.35_10.1/arch/arm/tools/mach-types	2010-12-30 11:28:33.078706697 +0530
@@ -2950,3 +2950,4 @@
 netviz			MACH_NETVIZ		NETVIZ			2964
 flexibity		MACH_FLEXIBITY		FLEXIBITY		2965
 wlan_computer		MACH_WLAN_COMPUTER	WLAN_COMPUTER		2966
+omap4_tab_10_1          MACH_OMAP4_TAB_10_1     OMAP4_TAB_10_1          2967
Index: android-2.6.35_10.1/sound/soc/omap/Kconfig
===================================================================
--- android-2.6.35_10.1.orig/sound/soc/omap/Kconfig	2010-12-21 18:24:20.000000000 +0530
+++ android-2.6.35_10.1/sound/soc/omap/Kconfig	2010-12-30 11:28:33.078706697 +0530
@@ -109,7 +109,7 @@
 
 config SND_OMAP_SOC_SDP4430
 	tristate "SoC Audio support for Texas Instruments SDP4430 or PandaBoard"
-	depends on (MACH_OMAP_4430SDP || MACH_OMAP4_PANDA)
+	depends on (MACH_OMAP_4430SDP || MACH_OMAP4_PANDA || MACH_OMAP4_TAB_10_1)
 	depends on TWL4030_CORE && SND_OMAP_SOC
 	select SND_OMAP_SOC_ABE
 	select SND_OMAP_SOC_MCPDM
Index: android-2.6.35_10.1/sound/soc/omap/sdp4430.c
===================================================================
--- android-2.6.35_10.1.orig/sound/soc/omap/sdp4430.c	2010-12-30 11:18:53.488085579 +0530
+++ android-2.6.35_10.1/sound/soc/omap/sdp4430.c	2010-12-30 11:28:33.078706697 +0530
@@ -360,7 +360,7 @@
 	ret = snd_soc_jack_add_pins(&hs_jack, ARRAY_SIZE(hs_jack_pins),
 				hs_jack_pins);
 
-	if (machine_is_omap_4430sdp())
+	if (machine_is_omap_4430sdp() || machine_is_omap4_tab_10_1())
 		twl6040_hs_jack_detect(codec, &hs_jack, SND_JACK_HEADSET);
 	else
 		snd_soc_jack_report(&hs_jack, SND_JACK_HEADSET, SND_JACK_HEADSET);
@@ -818,7 +818,7 @@
 	struct i2c_adapter *adapter;
 	int ret;
 
-	if (!machine_is_omap_4430sdp() && !machine_is_omap4_panda()) {
+	if (!machine_is_omap_4430sdp() && !machine_is_omap4_panda() && !machine_is_omap4_tab_10_1()) {
 		pr_debug("Not SDP4430 or PandaBoard!\n");
 		return -ENODEV;
 	}
@@ -851,7 +851,7 @@
         }
 
 	/* Only configure the TPS6130x on SDP4430 */
-	if (machine_is_omap_4430sdp())
+	if (machine_is_omap_4430sdp() || machine_is_omap4_tab_10_1())
 		sdp4430_tps6130x_configure();
 
 	return 0;
Index: android-2.6.35_10.1/arch/arm/mach-omap2/Makefile
===================================================================
--- android-2.6.35_10.1.orig/arch/arm/mach-omap2/Makefile	2010-12-30 11:20:44.807609315 +0530
+++ android-2.6.35_10.1/arch/arm/mach-omap2/Makefile	2010-12-30 11:28:33.078706697 +0530
@@ -187,6 +187,8 @@
 					   hsmmc.o
 obj-$(CONFIG_MACH_OMAP_4430SDP)		+= board-4430sdp.o \
 					   hsmmc.o cdc_tcxo.o
+obj-$(CONFIG_MACH_OMAP4_TAB_10_1)	+= board-omap4tab10-1.o \
+					   hsmmc.o
 
 obj-$(CONFIG_MACH_OMAP4_PANDA)		+= board-omap4panda.o \
 					   hsmmc.o

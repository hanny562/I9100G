Index: kernel/drivers/mfd/twl6030-gpadc.c
===================================================================
--- kernel.orig/drivers/mfd/twl6030-gpadc.c	2011-03-28 12:29:37.987102747 +0900
+++ kernel/drivers/mfd/twl6030-gpadc.c	2011-03-28 15:29:23.777107202 +0900
@@ -451,6 +451,7 @@
 	const struct twl6030_gpadc_conversion_method *method;
 	u8 ch_msb, ch_lsb, ch_isb;
 	int ret = 0;
+	u8 val = 0;
 
 	if (unlikely(!req))
 		return -EINVAL;
@@ -495,6 +496,19 @@
 		goto out;
 	}
 
+	/*
+	 * TWL6030 ADC Value for GPADC_IN2 
+	 * CSR: OMAPS00233802
+	 * The adc values are same for both 3 pole and 4 pole.
+	 * To distinguish, Channel 2 scaler is enabled before 
+	 * gpadc start conversion.
+	 */
+	if (req->channels == TWL6030_GPADC_CTRL_SCALER_EN) {
+		twl_i2c_read_u8(TWL6030_MODULE_ID1, &val, 0x2E);
+		val |= (TWL6030_GPADC_CTRL_SCALER_EN);
+		dev_dbg(the_gpadc->dev, "scaler enable before gpadc conversion for 4-pole headset = %x\n", val);
+		twl_i2c_write_u8(TWL6030_MODULE_ID1, val, 0x2E);
+	}
 	twl6030_gpadc_start_conversion(the_gpadc, req->method);
 	the_gpadc->requests[req->method].active = 1;
 
@@ -505,7 +519,18 @@
 		the_gpadc->requests[req->method].active = 0;
 		goto out;
 	}
-
+	/*
+	 * TWL6030 ADC Value for GPADC_IN2 
+	 * CSR: OMAPS00233802
+	 * Channel 2 scaler is disabled after 
+	 * gpadc start conversion.
+	 */
+	if (req->channels == TWL6030_GPADC_CTRL_SCALER_EN) {
+		twl_i2c_read_u8(TWL6030_MODULE_ID1, &val, 0x2E);
+		val &= ~(TWL6030_GPADC_CTRL_SCALER_EN);
+		dev_dbg(the_gpadc->dev, "scaler disable after gpadc conversion for 4-pole headset = %x\n", val);
+		twl_i2c_write_u8(TWL6030_MODULE_ID1, val, 0x2E);
+	}
 	ret = twl6030_gpadc_read_channels(the_gpadc, method->rbase,
 					  req->channels, req);
 	the_gpadc->requests[req->method].active = 0;

From c7fc2079000f360a24c0ac60682ff72e3ec184c8 Mon Sep 17 00:00:00 2001
From: Rajeev Kulkarni <rajeevk@ti.com>
Date: Mon, 18 Apr 2011 07:41:50 -0500
Subject: [PATCH] OMAP4: Pl310 flush and SO write around WFI.

Flushing pl310 cache and SO write just before
cpu executes WFI instruction.

Change-Id: I9706ac284b2a4cd3945b1b6bdaf9c3cd87f5f7ad
Signed-off-by: Rajeev Kulkarni <rajeevk@ti.com>
Signed-off-by: David Derrick <dderrick@ti.com>
Signed-off-by: Richard Woodruf <r-woodruff2@ti.com>
Signed-off-by: Wang Wenbiao <wwang@ti.com>
---
 arch/arm/mach-omap2/cpuidle44xx.c               |    7 +-
 arch/arm/mach-omap2/include/mach/omap4-common.h |    3 +
 arch/arm/mach-omap2/pm44xx.c                    |   12 +++
 arch/arm/mach-omap2/sleep44xx.S                 |   97 ++++++++++++++++++++++-
 4 files changed, 112 insertions(+), 7 deletions(-)

Index: kernel/arch/arm/mach-omap2/cpuidle44xx.c
===================================================================
--- kernel.orig/arch/arm/mach-omap2/cpuidle44xx.c	2011-05-13 12:21:38.000000000 +0900
+++ kernel/arch/arm/mach-omap2/cpuidle44xx.c	2011-05-13 12:21:56.000000000 +0900
@@ -16,6 +16,7 @@
 #include <linux/delay.h>
 #include <mach/omap4-common.h>
 #include <mach/omap4-wakeupgen.h>
+#include <asm/hardware/cache-l2x0.h>
 #include "pm.h"
 #include "prm.h"
 #include "pm.h"
@@ -102,7 +103,7 @@
 	 */
 	if (dev->cpu) {
 		wmb();
-		do_wfi();
+		DO_WFI();
 		goto return_sleep_time;
 	}
 
@@ -111,7 +112,7 @@
 	 */
 	if (num_online_cpus() > 1) {
 		wmb();
-		do_wfi();
+		DO_WFI();
 		goto return_sleep_time;
 	}
 
@@ -121,7 +122,7 @@
 	cpu1_state = pwrdm_read_pwrst(cpu1_pd);
 	if (cpu1_state != PWRDM_POWER_OFF) {
 		wmb();
-		do_wfi();
+		DO_WFI();
 		goto return_sleep_time;
 	}
 
Index: kernel/arch/arm/mach-omap2/include/mach/omap4-common.h
===================================================================
--- kernel.orig/arch/arm/mach-omap2/include/mach/omap4-common.h	2011-05-13 12:21:38.000000000 +0900
+++ kernel/arch/arm/mach-omap2/include/mach/omap4-common.h	2011-05-13 12:21:56.000000000 +0900
@@ -97,6 +97,7 @@
 extern void __iomem *gic_dist_base_addr;
 extern void __iomem *sar_ram_base;
 extern dma_addr_t omap4_secure_ram_phys;
+extern void *so_ram_address;
 
 extern bool omap4_lpmode;
 
@@ -114,6 +115,8 @@
 extern int omap4_dpll_low_power_cascade_enter(void);
 extern int omap4_dpll_low_power_cascade_exit(void);
 
+extern void DO_WFI(void);
+
 #ifdef CONFIG_PM
 extern void omap4_sar_save(void);
 extern void omap4_sar_overwrite(void);
Index: kernel/arch/arm/mach-omap2/pm44xx.c
===================================================================
--- kernel.orig/arch/arm/mach-omap2/pm44xx.c	2011-05-12 18:33:51.000000000 +0900
+++ kernel/arch/arm/mach-omap2/pm44xx.c	2011-05-13 12:21:56.000000000 +0900
@@ -20,6 +20,7 @@
 #include <linux/gpio.h>
 #include <linux/interrupt.h>
 #include <linux/delay.h>
+#include <linux/dma-mapping.h>
 
 #include <plat/powerdomain.h>
 #include <plat/clockdomain.h>
@@ -45,6 +46,8 @@
 #include "clock.h"
 #include "mux44xx.h"
 
+void *so_ram_address;
+
 struct power_state {
 	struct powerdomain *pwrdm;
 	u32 next_state;
@@ -965,6 +968,7 @@
 static int __init omap4_pm_init(void)
 {
 	int ret;
+	int ram_addr;
 
 	if (!cpu_is_omap44xx())
 		return -ENODEV;
@@ -991,6 +995,14 @@
 		goto err2;
 	}
 
+	so_ram_address = (void *)dma_alloc_so_coherent(NULL, 1024,
+			(dma_addr_t *)&ram_addr, GFP_KERNEL);
+
+	if (!so_ram_address) {
+		printk ("omap4_pm_init: failed to allocate SO mem.\n");
+		return -ENOMEM;
+	}
+
 	ret = pwrdm_for_each(pwrdms_setup, NULL);
 	if (ret) {
 		pr_err("Failed to setup powerdomains\n");
Index: kernel/arch/arm/mach-omap2/sleep44xx.S
===================================================================
--- kernel.orig/arch/arm/mach-omap2/sleep44xx.S	2011-05-13 12:21:38.000000000 +0900
+++ kernel/arch/arm/mach-omap2/sleep44xx.S	2011-05-13 12:21:56.000000000 +0900
@@ -16,6 +16,7 @@
 #include <mach/omap4-common.h>
 #include <plat/omap44xx.h>
 #include <asm/memory.h>
+#include <plat/io.h>
 
 #ifdef CONFIG_SMP
 
@@ -27,6 +28,8 @@
 #define TABLE_ENTRY				0x00000C02
 #define CACHE_DISABLE_MASK			0xFFFFE7FB
 #define SCU_CLEAR_STATE				0xFCFC
+#define SRAM_VADDR                             (OMAP2_L4_IO_OFFSET + \
+						 OMAP44XX_SAR_RAM_BASE)
 
 
 
@@ -397,7 +400,17 @@
 	ldr	r0, [r2, #L2X0_CLEAN_INV_WAY]
 	cmp	r0, #0
 	bne	loop4
+#endif
+
+do_WFI:
+	dsb				@ Necessary barriers before wfi
+	dmb
+	isb
+
+#ifdef CONFIG_CACHE_L2X0
 l2x_sync:
+	ldr	r2, =l2cache_base
+	ldr	r2, [r2]
 	mov	r0, #0x0
 	str	r0, [r2, #L2X0_CACHE_SYNC]
 loop5:
@@ -405,12 +418,33 @@
 	ands	r0, r0, #0x1
 	bne	loop5
 #endif
-do_WFI:
-	dsb				@ Necessary barriers before wfi
-	dmb
-	isb
+	ldr     r0, =so_ram_address
+	ldr	r0, [r0]
+	ldr     r2, [r0]
+	str     r2, [r0]
+
+	ldr     r0, =SRAM_VADDR
+	ldr     r2, [r0]
+	str     r2, [r0]
 	wfi				@ wait for interrupt
 
+	nop
+	nop
+	nop
+	nop
+	nop
+	nop
+	nop
+	nop
+	nop
+	nop
+	nop
+	nop
+	nop
+	nop
+	nop
+	nop
+
 	/*
 	 * CPUx didn't hit targeted low power state.
 	 * Clear SCU power status. Both CPU bits needs
@@ -458,4 +492,59 @@
 
 END(__omap4_cpu_suspend)
 
+/* Function to flush pl310 and SO write */
+ENTRY(DO_WFI)
+	stmfd	sp!, {lr}	@ save registers on stack
+
+	dsb			@ Necessary barriers before wfi
+	dmb
+	isb
+
+#ifdef CONFIG_CACHE_L2X0
+
+	ldr	r2, =l2cache_base
+	ldr	r2, [r2]
+	mov	r0, #0x0
+	str	r0, [r2, #L2X0_CACHE_SYNC]
+
+loop51:
+	ldr	r0, [r2, #L2X0_CACHE_SYNC]
+	ands	r0, r0, #0x1
+	bne	loop51
+#endif
+
+	ldr	r0, =so_ram_address
+	ldr	r0, [r0]
+	ldr	r2, [r0]
+	str	r2, [r0]
+
+	ldr	r0, =SRAM_VADDR
+	ldr	r2, [r0]
+	str	r2, [r0]
+
+	dsb
+
+	wfi
+
+	nop
+	nop
+	nop
+	nop
+	nop
+	nop
+	nop
+	nop
+	nop
+	nop
+	nop
+	nop
+	nop
+	nop
+	nop
+	nop
+
+	ldmfd   sp!, {pc}	@ restore regs and return
+
+END(DO_WFI)
+
 #endif

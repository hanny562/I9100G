Index: Kernel/drivers/mmc/host/omap_hsmmc.c
===================================================================
--- Kernel.orig/drivers/mmc/host/omap_hsmmc.c	2011-02-10 12:46:55.000000000 +0530
+++ Kernel/drivers/mmc/host/omap_hsmmc.c	2011-02-16 13:29:03.133356442 +0530
@@ -1028,6 +1028,8 @@
 						   unsigned long bit)
 {
 	unsigned long i = 0;
+	unsigned long limit = (loops_per_jiffy *
+				msecs_to_jiffies(MMC_TIMEOUT_MS));
 
 	OMAP_HSMMC_WRITE(host, SYSCTL,
 			 OMAP_HSMMC_READ(host, SYSCTL) | bit);
@@ -1036,13 +1038,13 @@
 	 * Monitor a 0->1 transition first */
 	if (mmc_slot(host).features & HSMMC_HAS_UPDATED_RESET) {
 		while ((!(OMAP_HSMMC_READ(host, SYSCTL) & bit))
-						&& (i++ < 50))
-			udelay(100);
+						&& (i++ < limit))
+			cpu_relax();
 	}
 	i = 0;
 	while ((OMAP_HSMMC_READ(host, SYSCTL) & bit) &&
-		(i++ < 50))
-		udelay(100);
+		(i++ < limit))
+		cpu_relax();
 
 	if (OMAP_HSMMC_READ(host, SYSCTL) & bit)
 		dev_err(mmc_dev(host->mmc),
@@ -1823,10 +1825,14 @@
        carddetect = slot->card_detect(host->dev, host->slot_id);
 
        sysfs_notify(&host->mmc->class_dev.kobj, NULL, "cover_switch");
-	if (carddetect)
+	if (carddetect) {
 		mmc_detect_change(host->mmc, (HZ * 200) / 1000);
-	else
+	} else {
+		mmc_host_enable(host->mmc);
+		omap_hsmmc_reset_controller_fsm(host, SRD);
+		mmc_host_lazy_disable(host->mmc);
 		mmc_detect_change(host->mmc, (HZ * 50) / 1000);
+	}
 }
 #endif
 
@@ -2314,6 +2320,10 @@
 	if (mmc_slot(host).features & HSMMC_HAS_48MHZ_MASTER_CLK)
 		host->master_clock = OMAP_MMC_MASTER_CLOCK / 2;
 
+	host->master_clock = OMAP_MMC_MASTER_CLOCK;
+	if (mmc_slot(host).features & HSMMC_HAS_48MHZ_MASTER_CLK)
+		host->master_clock = OMAP_MMC_MASTER_CLOCK / 2;
+
 #ifdef CONFIG_TIWLAN_SDIO
 	if (pdev->id == CONFIG_TIWLAN_MMC_CONTROLLER-1) {
 		if (pdata->slots[0].embedded_sdio != NULL) {

From 795f1355fefa0d0ba4c5b9825dd08d07256fd20d Mon Sep 17 00:00:00 2001
From: Chris Kelly <c-kelly@ti.com>
Date: Wed, 29 Dec 2010 12:03:53 -0700
Subject: ASoC: ABE HAL: Update with release 09.06

Update ABE HAL according to release 09.06. This release is introducing
ASRC on BT path and bug correction. ASoC ABE DSP driver is also updated
according to API changes.

Change-Id: I02eac13267420cf81762a7bfa14d5568fbeb1c31
Signed-off-by: Sebastien Guiriec <s-guiriec@ti.com>
Signed-off-by: Chris Kelly <c-kelly@ti.com>
---
 sound/soc/omap/abe/abe_api.c            |  187 ++-
 sound/soc/omap/abe/abe_api.h            |   48 +-
 sound/soc/omap/abe/abe_cm_addr.h        |  359 +++---
 sound/soc/omap/abe/abe_dat.c            |  211 ++--
 sound/soc/omap/abe/abe_dbg.h            |    1 -
 sound/soc/omap/abe/abe_def.h            |   25 +-
 sound/soc/omap/abe/abe_define.h         |   10 +-
 sound/soc/omap/abe/abe_dm_addr.h        |  228 ++--
 sound/soc/omap/abe/abe_ext.c            |   88 ++-
 sound/soc/omap/abe/abe_ext.h            |   35 +-
 sound/soc/omap/abe/abe_firmware.c       | 2508 +++++++++++++++----------------
 sound/soc/omap/abe/abe_functionsid.h    |   31 +-
 sound/soc/omap/abe/abe_fw.h             |   11 +-
 sound/soc/omap/abe/abe_ini.c            |  750 ++++++++--
 sound/soc/omap/abe/abe_initxxx_labels.h |  480 +++---
 sound/soc/omap/abe/abe_lib.c            |    3 -
 sound/soc/omap/abe/abe_main.h           |    4 +-
 sound/soc/omap/abe/abe_mem.c            |   42 +-
 sound/soc/omap/abe/abe_ref.h            |    7 +
 sound/soc/omap/abe/abe_sm_addr.h        |  667 ++++-----
 sound/soc/omap/abe/abe_taskid.h         |  221 ++--
 sound/soc/omap/abe/abe_typ.h            |    2 +-
 sound/soc/omap/abe/abe_typedef.h        |   64 -
 sound/soc/omap/omap-abe-dsp.c           |    2 +-
 24 files changed, 3180 insertions(+), 2804 deletions(-)

Index: Kernel/sound/soc/omap/abe/abe_api.c
===================================================================
--- Kernel.orig/sound/soc/omap/abe/abe_api.c	2011-01-19 00:14:46.403946233 +0530
+++ Kernel/sound/soc/omap/abe/abe_api.c	2011-01-19 00:14:51.033322974 +0530
@@ -25,16 +25,8 @@
 #include <linux/module.h>
 #include <linux/moduleparam.h>
 #include <linux/init.h>
-#include <linux/delay.h>
-#include <linux/pm.h>
-#include <linux/i2c.h>
-#include <linux/gpio.h>
-#include <linux/platform_device.h>
-#include <linux/workqueue.h>
-#include <linux/clk.h>
 #include <linux/err.h>
 #include <linux/slab.h>
-#include <linux/pm_runtime.h>
 
 u32 warm_boot = 0;
 
@@ -62,11 +54,12 @@
 	/* default = disable the mixer's adaptive gain control */
 	abe_use_compensated_gain(0);
 	/* reset the default gain values */
-	for (i = 0; i < MAXNBFEATURE; i++) {
+	for (i = 0; i < MAX_NBGAIN_CMEM; i++) {
 		abe_muted_gains_indicator[i] = 0;
 		abe_desired_gains_decibel[i] = (u32) GAIN_MUTE;
 		abe_desired_gains_linear[i] = 0;
 		abe_desired_ramp_delay_ms[i] = 0;
+		abe_muted_gains_decibel[i] = (u32) GAIN_TOOLOW;
 	}
 	/* set debug mask to "enable all traces" */
 	abe_dbg_mask = (abe_dbg_t) (0);
@@ -193,7 +186,7 @@
 					      abe_hw_config_init_t *hw)
 {
 	_log(id_read_hardware_configuration, (u32) u,
-		(u32) u >> 8, (u32) u >> 16);
+	     (u32) u >> 8, (u32) u >> 16);
 	abe_read_use_case_opp(u, o);
 	/* 0: 96kHz 1:192kHz */
 	hw->MCPDM_CTRL__DIV_SEL = 0;
@@ -262,7 +255,7 @@
  * for the delivery of "end of time sequenced tasks" notifications, some are
  * originated from the Ping-Pong protocols, some are generated from
  * the embedded debugger when the firmware stops on programmable break-points,
- * etc ...
+ * etc
  */
 abehal_status abe_irq_processing(void)
 {
@@ -312,11 +305,11 @@
 }
 EXPORT_SYMBOL(abe_irq_processing);
 /**
- * abe_irq_clear - clear ABE interrupt
+ * abe_clear_irq - clear ABE interrupt
  *
  * This subroutine is call to clear MCU Irq
  */
-abehal_status abe_irq_clear(void)
+abehal_status abe_clear_irq(void)
 {
 	u32 clear_abe_irq = 1;
 	abe_block_copy(COPY_FROM_HOST_TO_ABE, ABE_ATC, ABE_MCU_IRQSTATUS,
@@ -324,7 +317,7 @@
 
 	return 0;
 }
-EXPORT_SYMBOL(abe_irq_clear);
+EXPORT_SYMBOL(abe_clear_irq);
 /**
  * abe_select_main_port - Select stynchronization port for Event generator.
  * @id: audio port name
@@ -404,11 +397,10 @@
 abehal_status abe_stop_event_generator(void)
 {
 	u32 event_gen;
-
 	/* Stop the event Generator */
 	event_gen = 0;
 	abe_block_copy(COPY_FROM_HOST_TO_ABE, ABE_ATC,
-			       EVENT_GENERATOR_START, &event_gen, 4);
+		       EVENT_GENERATOR_START, &event_gen, 4);
 	return 0;
 }
 EXPORT_SYMBOL(abe_stop_event_generator);
@@ -499,8 +491,6 @@
 abehal_status abe_set_opp_processing(u32 opp)
 {
 	u32 dOppMode32, sio_desc_address;
-	ABE_SIODescriptor desc;
-
 	_lock_enter;
 	_log(id_set_opp_processing, opp, 0, 0);
 	switch (opp) {
@@ -523,27 +513,49 @@
 	/* Write Multiframe inside DMEM */
 	abe_block_copy(COPY_FROM_HOST_TO_ABE, ABE_DMEM,
 		       D_maxTaskBytesInSlot_ADDR, &dOppMode32, sizeof(u32));
-
 	sio_desc_address = dmem_port_descriptors + (MM_EXT_IN_PORT *
-			   sizeof(ABE_SIODescriptor));
-	abe_block_copy (COPY_FROM_ABE_TO_HOST, ABE_DMEM, sio_desc_address,
-			(u32 *)&desc, sizeof(desc));
-
+						    sizeof(ABE_SIODescriptor));
+	abe_block_copy(COPY_FROM_ABE_TO_HOST, ABE_DMEM, sio_desc_address,
+		       (u32 *) &sio_desc, sizeof(sio_desc));
 	if (dOppMode32 == DOPPMODE32_OPP100) {
 		/* ASRC input buffer, size 40 */
-		desc.smem_addr1 = smem_mm_ext_in_opp100;
+		sio_desc.smem_addr1 = smem_mm_ext_in_opp100;
 		/* Init MM_EXT_IN ASRC and enable its adaptation */
 		abe_init_asrc_mm_ext_in(250);
-	} else {
+	} else
 		/* at OPP 50 or without ASRC */
-		desc.smem_addr1 = smem_mm_ext_in_opp50;
-	}
-
-	abe_block_copy (COPY_FROM_HOST_TO_ABE, ABE_DMEM, sio_desc_address,
-			(u32 *)&desc, sizeof(desc));
-
+		sio_desc.smem_addr1 = smem_mm_ext_in_opp50;
+	abe_block_copy(COPY_FROM_HOST_TO_ABE, ABE_DMEM, sio_desc_address,
+		       (u32 *) &sio_desc, sizeof(sio_desc));
+	sio_desc_address = dmem_port_descriptors + (BT_VX_UL_PORT *
+						    sizeof(ABE_SIODescriptor));
+	abe_block_copy(COPY_FROM_ABE_TO_HOST, ABE_DMEM, sio_desc_address,
+		       (u32 *) &sio_desc, sizeof(sio_desc));
+	if (dOppMode32 == DOPPMODE32_OPP100) {
+		/* ASRC input buffer, size 40 */
+		sio_desc.smem_addr1 = smem_bt_vx_ul_opp100;
+		/* Init MM_EXT_IN ASRC and enable its adaptation */
+		abe_init_asrc_bt_ul(250);
+	} else
+		/* at OPP 50 or without ASRC */
+		sio_desc.smem_addr1 = smem_bt_vx_ul_opp50;
+	abe_block_copy(COPY_FROM_HOST_TO_ABE, ABE_DMEM, sio_desc_address,
+		       (u32 *) &sio_desc, sizeof(sio_desc));
+	sio_desc_address = dmem_port_descriptors + (BT_VX_DL_PORT *
+						    sizeof(ABE_SIODescriptor));
+	abe_block_copy(COPY_FROM_ABE_TO_HOST, ABE_DMEM, sio_desc_address,
+		       (u32 *) &sio_desc, sizeof(sio_desc));
+	if (dOppMode32 == DOPPMODE32_OPP100) {
+		/* ASRC input buffer, size 40 */
+		sio_desc.smem_addr1 = smem_bt_vx_dl_opp100;
+		/* Init MM_EXT_IN ASRC and enable its adaptation */
+		abe_init_asrc_bt_dl(250);
+	} else
+		/* at OPP 50 or without ASRC */
+		sio_desc.smem_addr1 = smem_bt_vx_dl_opp50;
+	abe_block_copy(COPY_FROM_HOST_TO_ABE, ABE_DMEM, sio_desc_address,
+		       (u32 *) &sio_desc, sizeof(sio_desc));
 	return 0;
-
 }
 EXPORT_SYMBOL(abe_set_opp_processing);
 /**
@@ -558,7 +570,6 @@
 {
 	u32 sio_pp_desc_address, struct_offset, n_samples, datasize,
 		base_and_size, *src;
-	ABE_SPingPongDescriptor desc_pp;
 	_log(id_set_ping_pong_buffer, port, n_bytes, n_bytes >> 8);
 	/* ping_pong is only supported on MM_DL */
 	if (port != MM_DL_PORT) {
@@ -605,7 +616,6 @@
 abehal_status abe_read_next_ping_pong_buffer(u32 port, u32 *p, u32 *n)
 {
 	u32 sio_pp_desc_address;
-	ABE_SPingPongDescriptor desc_pp;
 	_log(id_read_next_ping_pong_buffer, port, 0, 0);
 	/* ping_pong is only supported on MM_DL */
 	if (port != MM_DL_PORT) {
@@ -672,7 +682,6 @@
 abehal_status abe_read_offset_from_ping_buffer(u32 id, u32 *n)
 {
 	u32 sio_pp_desc_address;
-	ABE_SPingPongDescriptor desc_pp;
 	/* ping_pong is only supported on MM_DL */
 	if (MM_DL_PORT != id) {
 		abe_dbg_param |= ERR_API;
@@ -771,7 +780,6 @@
 abehal_status abe_read_remaining_data(u32 port, u32 *n)
 {
 	u32 sio_pp_desc_address;
-	ABE_SPingPongDescriptor desc_pp;
 	_log(id_read_remaining_data, port, 0, 0);
 	/*
 	 * read the port SIO descriptor and extract the
@@ -823,8 +831,9 @@
 	/* MM_DL managed in ping-pong */
 	if (id == MM_DL_PORT) {
 		protocol = &(abe_port[MM_DL_PORT].protocol);
-		if (protocol->protocol_switch == PINGPONG_PORT_PROT)
+		if (protocol->protocol_switch == PINGPONG_PORT_PROT) {
 			abe_disable_pp_io_task(MM_DL_PORT);
+		}
 	}
 	/* local host variable status= "port is running" */
 	abe_port[id].status = OMAP_ABE_PORT_ACTIVITY_IDLE;
@@ -850,7 +859,6 @@
 {
 	abe_port_protocol_t *protocol;
 	abe_data_format_t format;
-
 	_log(id_enable_data_transfer, id, 0, 0);
 	/* there is only one PDM_DL physical port shared
 	   with DL1/DL2/VIB. Here is a check for the need to enable
@@ -914,7 +922,6 @@
 		/* Init VX_DL ASRC and enable its adaptation */
 		abe_init_asrc_vx_dl(250);
 	}
-
 	/* local host variable status= "port is running" */
 	abe_port[id].status = OMAP_ABE_PORT_ACTIVITY_RUNNING;
 	/* enable DMA requests */
@@ -1237,15 +1244,14 @@
  */
 abehal_status abe_select_data_source(u32 port_id, u32 smem_source)
 {
-	ABE_SIODescriptor desc;
 	u32 sio_desc_address;
 	sio_desc_address = dmem_port_descriptors +
 		(port_id * sizeof(ABE_SIODescriptor));
 	abe_block_copy(COPY_FROM_ABE_TO_HOST, ABE_DMEM,
-		       sio_desc_address, (u32 *) &desc, sizeof(desc));
-	desc.smem_addr1 = (u16) smem_source;
+		       sio_desc_address, (u32 *) &sio_desc, sizeof(sio_desc));
+	sio_desc.smem_addr1 = (u16) smem_source;
 	abe_block_copy(COPY_FROM_HOST_TO_ABE, ABE_DMEM,
-		       sio_desc_address, (u32 *) &desc, sizeof(desc));
+		       sio_desc_address, (u32 *) &sio_desc, sizeof(sio_desc));
 	return 0;
 }
 EXPORT_SYMBOL(abe_select_data_source);
@@ -1401,8 +1407,18 @@
 		drift_sign_addr = D_AsrcVars_UL_VX_ADDR + (1 * sizeof(s32));
 		alpha_params_addr = D_AsrcVars_UL_VX_ADDR + (3 * sizeof(s32));
 		break;
+		/* asynchronous sample-rate-converter for the BT_UL path */
+	case BT_VX_UL_PORT:
+		drift_sign_addr = D_AsrcVars_BT_UL_ADDR + (1 * sizeof(s32));
+		alpha_params_addr = D_AsrcVars_BT_UL_ADDR + (3 * sizeof(s32));
+		break;
+		/* asynchronous sample-rate-converter for the BT_DL path */
+	case BT_VX_DL_PORT:
+		drift_sign_addr = D_AsrcVars_BT_DL_ADDR + (1 * sizeof(s32));
+		alpha_params_addr = D_AsrcVars_BT_DL_ADDR + (3 * sizeof(s32));
+		break;
 	default:
-		/* asynchronous sample-rate-converter for the multimedia player */
+		/* asynchronous sample-rate-converter for the MM_EXT_IN path */
 	case MM_EXT_IN_PORT:
 		drift_sign_addr = D_AsrcVars_MM_EXT_IN_ADDR + (1 * sizeof(s32));
 		alpha_params_addr =
@@ -1457,9 +1473,7 @@
 abehal_status abe_disable_gain(u32 id, u32 p)
 {
 	u32 mixer_offset, f_g, ramp;
-
 	abe_gain_offset(id, &mixer_offset);
-
 	/* save the input parameters for mute/unmute */
 	ramp = abe_desired_ramp_delay_ms[mixer_offset + p];
 	f_g = GAIN_MUTE;
@@ -1483,9 +1497,7 @@
 abehal_status abe_enable_gain(u32 id, u32 p)
 {
 	u32 mixer_offset, f_g, ramp;
-
 	abe_gain_offset(id, &mixer_offset);
-
 	if ((abe_muted_gains_indicator[mixer_offset + p] & 0x02)) {
 		/* restore the input parameters for mute/unmute */
 		f_g = abe_muted_gains_decibel[mixer_offset + p];
@@ -1507,9 +1519,7 @@
 abehal_status abe_mute_gain(u32 id, u32 p)
 {
 	u32 mixer_offset, f_g, ramp;
-
 	abe_gain_offset(id, &mixer_offset);
-
 	/* save the input parameters for mute/unmute */
 	ramp = abe_desired_ramp_delay_ms[mixer_offset + p];
 	f_g = GAIN_MUTE;
@@ -1533,9 +1543,7 @@
 abehal_status abe_unmute_gain(u32 id, u32 p)
 {
 	u32 mixer_offset, f_g, ramp;
-
 	abe_gain_offset(id, &mixer_offset);
-
 	if ((abe_muted_gains_indicator[mixer_offset + p] & 0x01)) {
 		/* restore the input parameters for mute/unmute */
 		f_g = abe_muted_gains_decibel[mixer_offset + p];
@@ -1631,7 +1639,8 @@
 		if (!abe_muted_gains_indicator[mixer_offset + p])
 			/* load the S_G_Target SMEM table */
 			abe_block_copy(COPY_FROM_HOST_TO_ABE, ABE_SMEM,
-				       mixer_target, (u32 *) &lin_g, sizeof(lin_g));
+				       mixer_target, (u32 *) &lin_g,
+				       sizeof(lin_g));
 		else
 			/* update muted gain with new value */
 			abe_muted_gains_decibel[mixer_offset + p] = f_g;
@@ -1693,11 +1702,18 @@
  * @p: list of port corresponding to the above gains
  *
  */
+/**
+ * abe_read_gain
+ * @id: name of the mixer
+ * @param: list of input gains of the mixer
+ * @p: list of port corresponding to the above gains
+ *
+ */
 abehal_status abe_read_gain(u32 id, u32 *f_g, u32 p)
 {
 	u32 mixer_target, mixer_offset, i;
 	_log(id_read_gain, id, (u32) f_g, p);
-		abe_gain_offset(id, &mixer_offset);
+	abe_gain_offset(id, &mixer_offset);
 	/* SMEM word32 address */
 	mixer_target = (S_GTarget1_ADDR << 1);
 	mixer_target += mixer_offset;
@@ -1764,8 +1780,7 @@
 {
 	_log(id_set_router_configuration, id, (u32) param, (u32) param >> 8);
 	abe_block_copy(COPY_FROM_HOST_TO_ABE, ABE_DMEM,
-			       D_aUplinkRouting_ADDR,
-			       param, D_aUplinkRouting_sizeof);
+		       D_aUplinkRouting_ADDR, param, D_aUplinkRouting_sizeof);
 	return 0;
 }
 EXPORT_SYMBOL(abe_set_router_configuration);
@@ -1906,12 +1921,6 @@
 		task_patch = C_ABE_FW_TASK_MM_EXT_IN_SPLIT;
 		idx_patch = 1;
 		break;
-	case DBG_PATCH_EANC_FBK_Out:
-		dbg_on = DBG_48K_PATTERN_labelID;
-		dbg_off = EANC_FBK_Out_labelID;
-		task_patch = C_ABE_FW_TASK_EANC_FBK_SPLIT;
-		idx_patch = 1;
-		break;
 	case DBG_PATCH_MIC4:
 		dbg_on = DBG_48K_PATTERN_labelID;
 		dbg_off = MIC4_labelID;
@@ -1957,11 +1966,59 @@
 {
 	/* Restart event generator */
 	abe_write_event_generator(EVENT_TIMER);
-
 	/* reconfigure DMA Req and MCU Irq visibility */
 	abe_hw_configuration();
-
 	return 0;
 }
 EXPORT_SYMBOL(abe_wakeup);
-
+/**
+ * abe_disable_irq - disable MCU/DSP ABE interrupt
+ *
+ * This subroutine is disabling ABE MCU/DSP Irq
+ */
+abehal_status abe_disable_irq(void)
+{
+	u32 atc_reg;
+	/* disables the DMAreq from AESS AESS_DMAENABLE_CLR = 127
+	 * DMA_Req7 will still be enabled as it is used for ABE trace */
+	atc_reg = 0x7F;
+	abe_block_copy(COPY_FROM_HOST_TO_ABE, ABE_ATC, 0x64, &atc_reg, 4);
+	/* disables the MCU IRQ from AESS to Cortex A9 */
+	atc_reg = 0x01;
+	abe_block_copy(COPY_FROM_HOST_TO_ABE, ABE_ATC, 0x40, &atc_reg, 4);
+	return 0;
+}
+EXPORT_SYMBOL(abe_disable_irq);
+/**
+ * abe_check_activity - Check if some ABE activity.
+ *
+ * Check if any ABE ports are running.
+ * return 1: still activity on ABE
+ * return 0: no more activity on ABE. Event generator can be stopped
+ *
+ */
+u32 abe_check_activity(void)
+{
+	u32 i;
+	u32 ret;
+	ret = 0;
+	for (i = 0; i < (LAST_PORT_ID - 1); i++) {
+		if (abe_port[abe_port_priority[i]].status ==
+		    OMAP_ABE_PORT_ACTIVITY_RUNNING)
+			break;
+	}
+	if (i < (LAST_PORT_ID - 1))
+		ret = 1;
+	return ret;
+}
+EXPORT_SYMBOL(abe_check_activity);
+/**
+ * abe_init_mem - Allocate Kernel space memory map for ABE
+ *
+ * Memory map of ABE memory space for PMEM/DMEM/SMEM/DMEM
+ */
+void abe_init_mem(void __iomem *_io_base)
+{
+	io_base = _io_base;
+}
+EXPORT_SYMBOL(abe_init_mem);
Index: Kernel/sound/soc/omap/abe/abe_api.h
===================================================================
--- Kernel.orig/sound/soc/omap/abe/abe_api.h	2011-01-19 00:14:46.403946233 +0530
+++ Kernel/sound/soc/omap/abe/abe_api.h	2011-01-19 00:14:51.033322974 +0530
@@ -88,21 +88,38 @@
  * for the delivery of "end of time sequenced tasks" notifications, some are
  * originated from the Ping-Pong protocols, some are generated from
  * the embedded debugger when the firmware stops on programmable break-points,
- * etc
+ * etc ...
  */
 abehal_status abe_irq_processing(void);
 /**
- * abe_irq_clear - clear ABE interrupt
+ * abe_clear_irq - clear ABE interrupt
  *
  * This subroutine is call to clear MCU Irq
  */
-abehal_status abe_irq_clear(void);
+abehal_status abe_clear_irq(void);
 /**
- * abe_disable_clear - disable MCU/DSP ABE interrupt
+ * abe_disable_irq - disable MCU/DSP ABE interrupt
  *
  * This subroutine is disabling ABE MCU/DSP Irq
  */
 abehal_status abe_disable_irq(void);
+/*
+ * abe_check_activity - check all ports are closed
+ */
+u32 abe_check_activity(void);
+/**
+ * abe_wakeup - Wakeup ABE
+ *
+ * Wakeup ABE in case of retention
+ */
+abehal_status abe_wakeup(void);
+/**
+ * abe_stop_event_generator - Stop event generator source
+ *
+ * Stop the event genrator of AESS. No more event will be send to AESS engine.
+ * Upper layer needs to wait 1/96kHz to be sure that engine reach IDLE instruction
+ */
+abehal_status abe_stop_event_generator(void);
 /**
  * abe_select_main_port - Select stynchronization port for Event generator.
  * @id: audio port name
@@ -128,13 +145,6 @@
  */
 abehal_status abe_write_event_generator(u32 e);
 /**
- * abe_stop_event_generator - Stop event generator source
- *
- * Stop the event genrator of AESS. No more event will be send to AESS engine.
- * Upper layer needs to wait 1/96kHz to be sure that engine reach IDLE instruction
- */
-abehal_status abe_stop_event_generator(void);
-/**
  * abe_read_use_case_opp() - description for void abe_read_use_case_opp().
  *
  * returns the expected min OPP for a given use_case list
@@ -498,19 +508,9 @@
  */
 abehal_status abe_enable_test_pattern(u32 smem_id, u32 on_off);
 /**
- * abe_check_activity - Check if some ABE activity.
- *
- * Check if any ABE ports are running.
- * return 1: still activity on ABE
- * return 0: no more activity on ABE. Event generator can be stopped
+ * abe_init_mem - Allocate Kernel space memory map for ABE
  *
+ * Memory map of ABE memory space for PMEM/DMEM/SMEM/DMEM
  */
-u32 abe_check_activity(void);
-/**
- * abe_wakeup - Wakeup ABE
- *
- * Wakeup ABE in case of retention
- */
-abehal_status abe_wakeup(void);
-
+void abe_init_mem(void __iomem *_io_base);
 #endif/* _ABE_API_H_ */
Index: Kernel/sound/soc/omap/abe/abe_cm_addr.h
===================================================================
--- Kernel.orig/sound/soc/omap/abe/abe_cm_addr.h	2011-01-14 00:04:13.142468082 +0530
+++ Kernel/sound/soc/omap/abe/abe_cm_addr.h	2011-01-19 00:14:51.033322974 +0530
@@ -21,267 +21,264 @@
 #ifndef _ABE_CM_ADDR_H_
 #define _ABE_CM_ADDR_H_
 #define init_CM_ADDR                                        0
-#define init_CM_ADDR_END                                    305
-#define init_CM_sizeof                                      306
-#define C_Data_LSB_2_ADDR                                   306
-#define C_Data_LSB_2_ADDR_END                               306
+#define init_CM_ADDR_END                                    309
+#define init_CM_sizeof                                      310
+#define C_Data_LSB_2_ADDR                                   310
+#define C_Data_LSB_2_ADDR_END                               310
 #define C_Data_LSB_2_sizeof                                 1
-#define C_1_Alpha_ADDR                                      307
-#define C_1_Alpha_ADDR_END                                  324
+#define C_1_Alpha_ADDR                                      311
+#define C_1_Alpha_ADDR_END                                  328
 #define C_1_Alpha_sizeof                                    18
-#define C_Alpha_ADDR                                        325
-#define C_Alpha_ADDR_END                                    342
+#define C_Alpha_ADDR                                        329
+#define C_Alpha_ADDR_END                                    346
 #define C_Alpha_sizeof                                      18
-#define C_GainsWRamp_ADDR                                   343
-#define C_GainsWRamp_ADDR_END                               356
+#define C_GainsWRamp_ADDR                                   347
+#define C_GainsWRamp_ADDR_END                               360
 #define C_GainsWRamp_sizeof                                 14
-#define C_Gains_DL1M_ADDR                                   357
-#define C_Gains_DL1M_ADDR_END                               360
+#define C_Gains_DL1M_ADDR                                   361
+#define C_Gains_DL1M_ADDR_END                               364
 #define C_Gains_DL1M_sizeof                                 4
-#define C_Gains_DL2M_ADDR                                   361
-#define C_Gains_DL2M_ADDR_END                               364
+#define C_Gains_DL2M_ADDR                                   365
+#define C_Gains_DL2M_ADDR_END                               368
 #define C_Gains_DL2M_sizeof                                 4
-#define C_Gains_EchoM_ADDR                                  365
-#define C_Gains_EchoM_ADDR_END                              366
+#define C_Gains_EchoM_ADDR                                  369
+#define C_Gains_EchoM_ADDR_END                              370
 #define C_Gains_EchoM_sizeof                                2
-#define C_Gains_SDTM_ADDR                                   367
-#define C_Gains_SDTM_ADDR_END                               368
+#define C_Gains_SDTM_ADDR                                   371
+#define C_Gains_SDTM_ADDR_END                               372
 #define C_Gains_SDTM_sizeof                                 2
-#define C_Gains_VxRecM_ADDR                                 369
-#define C_Gains_VxRecM_ADDR_END                             372
+#define C_Gains_VxRecM_ADDR                                 373
+#define C_Gains_VxRecM_ADDR_END                             376
 #define C_Gains_VxRecM_sizeof                               4
-#define C_Gains_ULM_ADDR                                    373
-#define C_Gains_ULM_ADDR_END                                376
+#define C_Gains_ULM_ADDR                                    377
+#define C_Gains_ULM_ADDR_END                                380
 #define C_Gains_ULM_sizeof                                  4
-#define C_Gains_unused_ADDR                                 377
-#define C_Gains_unused_ADDR_END                             378
+#define C_Gains_unused_ADDR                                 381
+#define C_Gains_unused_ADDR_END                             382
 #define C_Gains_unused_sizeof                               2
-#define C_SDT_Coefs_ADDR                                    379
-#define C_SDT_Coefs_ADDR_END                                387
+#define C_SDT_Coefs_ADDR                                    383
+#define C_SDT_Coefs_ADDR_END                                391
 #define C_SDT_Coefs_sizeof                                  9
-#define C_CoefASRC1_VX_ADDR                                 388
-#define C_CoefASRC1_VX_ADDR_END                             406
+#define C_CoefASRC1_VX_ADDR                                 392
+#define C_CoefASRC1_VX_ADDR_END                             410
 #define C_CoefASRC1_VX_sizeof                               19
-#define C_CoefASRC2_VX_ADDR                                 407
-#define C_CoefASRC2_VX_ADDR_END                             425
+#define C_CoefASRC2_VX_ADDR                                 411
+#define C_CoefASRC2_VX_ADDR_END                             429
 #define C_CoefASRC2_VX_sizeof                               19
-#define C_CoefASRC3_VX_ADDR                                 426
-#define C_CoefASRC3_VX_ADDR_END                             444
+#define C_CoefASRC3_VX_ADDR                                 430
+#define C_CoefASRC3_VX_ADDR_END                             448
 #define C_CoefASRC3_VX_sizeof                               19
-#define C_CoefASRC4_VX_ADDR                                 445
-#define C_CoefASRC4_VX_ADDR_END                             463
+#define C_CoefASRC4_VX_ADDR                                 449
+#define C_CoefASRC4_VX_ADDR_END                             467
 #define C_CoefASRC4_VX_sizeof                               19
-#define C_CoefASRC5_VX_ADDR                                 464
-#define C_CoefASRC5_VX_ADDR_END                             482
+#define C_CoefASRC5_VX_ADDR                                 468
+#define C_CoefASRC5_VX_ADDR_END                             486
 #define C_CoefASRC5_VX_sizeof                               19
-#define C_CoefASRC6_VX_ADDR                                 483
-#define C_CoefASRC6_VX_ADDR_END                             501
+#define C_CoefASRC6_VX_ADDR                                 487
+#define C_CoefASRC6_VX_ADDR_END                             505
 #define C_CoefASRC6_VX_sizeof                               19
-#define C_CoefASRC7_VX_ADDR                                 502
-#define C_CoefASRC7_VX_ADDR_END                             520
+#define C_CoefASRC7_VX_ADDR                                 506
+#define C_CoefASRC7_VX_ADDR_END                             524
 #define C_CoefASRC7_VX_sizeof                               19
-#define C_CoefASRC8_VX_ADDR                                 521
-#define C_CoefASRC8_VX_ADDR_END                             539
+#define C_CoefASRC8_VX_ADDR                                 525
+#define C_CoefASRC8_VX_ADDR_END                             543
 #define C_CoefASRC8_VX_sizeof                               19
-#define C_CoefASRC9_VX_ADDR                                 540
-#define C_CoefASRC9_VX_ADDR_END                             558
+#define C_CoefASRC9_VX_ADDR                                 544
+#define C_CoefASRC9_VX_ADDR_END                             562
 #define C_CoefASRC9_VX_sizeof                               19
-#define C_CoefASRC10_VX_ADDR                                559
-#define C_CoefASRC10_VX_ADDR_END                            577
+#define C_CoefASRC10_VX_ADDR                                563
+#define C_CoefASRC10_VX_ADDR_END                            581
 #define C_CoefASRC10_VX_sizeof                              19
-#define C_CoefASRC11_VX_ADDR                                578
-#define C_CoefASRC11_VX_ADDR_END                            596
+#define C_CoefASRC11_VX_ADDR                                582
+#define C_CoefASRC11_VX_ADDR_END                            600
 #define C_CoefASRC11_VX_sizeof                              19
-#define C_CoefASRC12_VX_ADDR                                597
-#define C_CoefASRC12_VX_ADDR_END                            615
+#define C_CoefASRC12_VX_ADDR                                601
+#define C_CoefASRC12_VX_ADDR_END                            619
 #define C_CoefASRC12_VX_sizeof                              19
-#define C_CoefASRC13_VX_ADDR                                616
-#define C_CoefASRC13_VX_ADDR_END                            634
+#define C_CoefASRC13_VX_ADDR                                620
+#define C_CoefASRC13_VX_ADDR_END                            638
 #define C_CoefASRC13_VX_sizeof                              19
-#define C_CoefASRC14_VX_ADDR                                635
-#define C_CoefASRC14_VX_ADDR_END                            653
+#define C_CoefASRC14_VX_ADDR                                639
+#define C_CoefASRC14_VX_ADDR_END                            657
 #define C_CoefASRC14_VX_sizeof                              19
-#define C_CoefASRC15_VX_ADDR                                654
-#define C_CoefASRC15_VX_ADDR_END                            672
+#define C_CoefASRC15_VX_ADDR                                658
+#define C_CoefASRC15_VX_ADDR_END                            676
 #define C_CoefASRC15_VX_sizeof                              19
-#define C_CoefASRC16_VX_ADDR                                673
-#define C_CoefASRC16_VX_ADDR_END                            691
+#define C_CoefASRC16_VX_ADDR                                677
+#define C_CoefASRC16_VX_ADDR_END                            695
 #define C_CoefASRC16_VX_sizeof                              19
-#define C_AlphaCurrent_UL_VX_ADDR                           692
-#define C_AlphaCurrent_UL_VX_ADDR_END                       692
+#define C_AlphaCurrent_UL_VX_ADDR                           696
+#define C_AlphaCurrent_UL_VX_ADDR_END                       696
 #define C_AlphaCurrent_UL_VX_sizeof                         1
-#define C_BetaCurrent_UL_VX_ADDR                            693
-#define C_BetaCurrent_UL_VX_ADDR_END                        693
+#define C_BetaCurrent_UL_VX_ADDR                            697
+#define C_BetaCurrent_UL_VX_ADDR_END                        697
 #define C_BetaCurrent_UL_VX_sizeof                          1
-#define C_AlphaCurrent_DL_VX_ADDR                           694
-#define C_AlphaCurrent_DL_VX_ADDR_END                       694
+#define C_AlphaCurrent_DL_VX_ADDR                           698
+#define C_AlphaCurrent_DL_VX_ADDR_END                       698
 #define C_AlphaCurrent_DL_VX_sizeof                         1
-#define C_BetaCurrent_DL_VX_ADDR                            695
-#define C_BetaCurrent_DL_VX_ADDR_END                        695
+#define C_BetaCurrent_DL_VX_ADDR                            699
+#define C_BetaCurrent_DL_VX_ADDR_END                        699
 #define C_BetaCurrent_DL_VX_sizeof                          1
-#define C_CoefASRC1_MM_ADDR                                 696
-#define C_CoefASRC1_MM_ADDR_END                             713
+#define C_CoefASRC1_MM_ADDR                                 700
+#define C_CoefASRC1_MM_ADDR_END                             717
 #define C_CoefASRC1_MM_sizeof                               18
-#define C_CoefASRC2_MM_ADDR                                 714
-#define C_CoefASRC2_MM_ADDR_END                             731
+#define C_CoefASRC2_MM_ADDR                                 718
+#define C_CoefASRC2_MM_ADDR_END                             735
 #define C_CoefASRC2_MM_sizeof                               18
-#define C_CoefASRC3_MM_ADDR                                 732
-#define C_CoefASRC3_MM_ADDR_END                             749
+#define C_CoefASRC3_MM_ADDR                                 736
+#define C_CoefASRC3_MM_ADDR_END                             753
 #define C_CoefASRC3_MM_sizeof                               18
-#define C_CoefASRC4_MM_ADDR                                 750
-#define C_CoefASRC4_MM_ADDR_END                             767
+#define C_CoefASRC4_MM_ADDR                                 754
+#define C_CoefASRC4_MM_ADDR_END                             771
 #define C_CoefASRC4_MM_sizeof                               18
-#define C_CoefASRC5_MM_ADDR                                 768
-#define C_CoefASRC5_MM_ADDR_END                             785
+#define C_CoefASRC5_MM_ADDR                                 772
+#define C_CoefASRC5_MM_ADDR_END                             789
 #define C_CoefASRC5_MM_sizeof                               18
-#define C_CoefASRC6_MM_ADDR                                 786
-#define C_CoefASRC6_MM_ADDR_END                             803
+#define C_CoefASRC6_MM_ADDR                                 790
+#define C_CoefASRC6_MM_ADDR_END                             807
 #define C_CoefASRC6_MM_sizeof                               18
-#define C_CoefASRC7_MM_ADDR                                 804
-#define C_CoefASRC7_MM_ADDR_END                             821
+#define C_CoefASRC7_MM_ADDR                                 808
+#define C_CoefASRC7_MM_ADDR_END                             825
 #define C_CoefASRC7_MM_sizeof                               18
-#define C_CoefASRC8_MM_ADDR                                 822
-#define C_CoefASRC8_MM_ADDR_END                             839
+#define C_CoefASRC8_MM_ADDR                                 826
+#define C_CoefASRC8_MM_ADDR_END                             843
 #define C_CoefASRC8_MM_sizeof                               18
-#define C_CoefASRC9_MM_ADDR                                 840
-#define C_CoefASRC9_MM_ADDR_END                             857
+#define C_CoefASRC9_MM_ADDR                                 844
+#define C_CoefASRC9_MM_ADDR_END                             861
 #define C_CoefASRC9_MM_sizeof                               18
-#define C_CoefASRC10_MM_ADDR                                858
-#define C_CoefASRC10_MM_ADDR_END                            875
+#define C_CoefASRC10_MM_ADDR                                862
+#define C_CoefASRC10_MM_ADDR_END                            879
 #define C_CoefASRC10_MM_sizeof                              18
-#define C_CoefASRC11_MM_ADDR                                876
-#define C_CoefASRC11_MM_ADDR_END                            893
+#define C_CoefASRC11_MM_ADDR                                880
+#define C_CoefASRC11_MM_ADDR_END                            897
 #define C_CoefASRC11_MM_sizeof                              18
-#define C_CoefASRC12_MM_ADDR                                894
-#define C_CoefASRC12_MM_ADDR_END                            911
+#define C_CoefASRC12_MM_ADDR                                898
+#define C_CoefASRC12_MM_ADDR_END                            915
 #define C_CoefASRC12_MM_sizeof                              18
-#define C_CoefASRC13_MM_ADDR                                912
-#define C_CoefASRC13_MM_ADDR_END                            929
+#define C_CoefASRC13_MM_ADDR                                916
+#define C_CoefASRC13_MM_ADDR_END                            933
 #define C_CoefASRC13_MM_sizeof                              18
-#define C_CoefASRC14_MM_ADDR                                930
-#define C_CoefASRC14_MM_ADDR_END                            947
+#define C_CoefASRC14_MM_ADDR                                934
+#define C_CoefASRC14_MM_ADDR_END                            951
 #define C_CoefASRC14_MM_sizeof                              18
-#define C_CoefASRC15_MM_ADDR                                948
-#define C_CoefASRC15_MM_ADDR_END                            965
+#define C_CoefASRC15_MM_ADDR                                952
+#define C_CoefASRC15_MM_ADDR_END                            969
 #define C_CoefASRC15_MM_sizeof                              18
-#define C_CoefASRC16_MM_ADDR                                966
-#define C_CoefASRC16_MM_ADDR_END                            983
+#define C_CoefASRC16_MM_ADDR                                970
+#define C_CoefASRC16_MM_ADDR_END                            987
 #define C_CoefASRC16_MM_sizeof                              18
-#define C_AlphaCurrent_MM_EXT_IN_ADDR                       984
-#define C_AlphaCurrent_MM_EXT_IN_ADDR_END                   984
+#define C_AlphaCurrent_MM_EXT_IN_ADDR                       988
+#define C_AlphaCurrent_MM_EXT_IN_ADDR_END                   988
 #define C_AlphaCurrent_MM_EXT_IN_sizeof                     1
-#define C_BetaCurrent_MM_EXT_IN_ADDR                        985
-#define C_BetaCurrent_MM_EXT_IN_ADDR_END                    985
+#define C_BetaCurrent_MM_EXT_IN_ADDR                        989
+#define C_BetaCurrent_MM_EXT_IN_ADDR_END                    989
 #define C_BetaCurrent_MM_EXT_IN_sizeof                      1
-#define C_DL2_L_Coefs_ADDR                                  986
-#define C_DL2_L_Coefs_ADDR_END                              1010
+#define C_DL2_L_Coefs_ADDR                                  990
+#define C_DL2_L_Coefs_ADDR_END                              1014
 #define C_DL2_L_Coefs_sizeof                                25
-#define C_DL2_R_Coefs_ADDR                                  1011
-#define C_DL2_R_Coefs_ADDR_END                              1035
+#define C_DL2_R_Coefs_ADDR                                  1015
+#define C_DL2_R_Coefs_ADDR_END                              1039
 #define C_DL2_R_Coefs_sizeof                                25
-#define C_DL1_Coefs_ADDR                                    1036
-#define C_DL1_Coefs_ADDR_END                                1060
+#define C_DL1_Coefs_ADDR                                    1040
+#define C_DL1_Coefs_ADDR_END                                1064
 #define C_DL1_Coefs_sizeof                                  25
-#define C_SRC_3_LP_Coefs_ADDR                               1061
-#define C_SRC_3_LP_Coefs_ADDR_END                           1071
+#define C_SRC_3_LP_Coefs_ADDR                               1065
+#define C_SRC_3_LP_Coefs_ADDR_END                           1075
 #define C_SRC_3_LP_Coefs_sizeof                             11
-#define C_SRC_3_LP_GAIN_Coefs_ADDR                          1072
-#define C_SRC_3_LP_GAIN_Coefs_ADDR_END                      1082
+#define C_SRC_3_LP_GAIN_Coefs_ADDR                          1076
+#define C_SRC_3_LP_GAIN_Coefs_ADDR_END                      1086
 #define C_SRC_3_LP_GAIN_Coefs_sizeof                        11
-#define C_SRC_3_HP_Coefs_ADDR                               1083
-#define C_SRC_3_HP_Coefs_ADDR_END                           1087
+#define C_SRC_3_HP_Coefs_ADDR                               1087
+#define C_SRC_3_HP_Coefs_ADDR_END                           1091
 #define C_SRC_3_HP_Coefs_sizeof                             5
-#define C_SRC_6_LP_Coefs_ADDR                               1088
-#define C_SRC_6_LP_Coefs_ADDR_END                           1098
+#define C_SRC_6_LP_Coefs_ADDR                               1092
+#define C_SRC_6_LP_Coefs_ADDR_END                           1102
 #define C_SRC_6_LP_Coefs_sizeof                             11
-#define C_SRC_6_LP_GAIN_Coefs_ADDR                          1099
-#define C_SRC_6_LP_GAIN_Coefs_ADDR_END                      1109
+#define C_SRC_6_LP_GAIN_Coefs_ADDR                          1103
+#define C_SRC_6_LP_GAIN_Coefs_ADDR_END                      1113
 #define C_SRC_6_LP_GAIN_Coefs_sizeof                        11
-#define C_SRC_6_HP_Coefs_ADDR                               1110
-#define C_SRC_6_HP_Coefs_ADDR_END                           1116
+#define C_SRC_6_HP_Coefs_ADDR                               1114
+#define C_SRC_6_HP_Coefs_ADDR_END                           1120
 #define C_SRC_6_HP_Coefs_sizeof                             7
-#define C_EANC_WarpCoeffs_ADDR                              1117
-#define C_EANC_WarpCoeffs_ADDR_END                          1118
-#define C_EANC_WarpCoeffs_sizeof                            2
-#define C_EANC_FIRcoeffs_ADDR                               1119
-#define C_EANC_FIRcoeffs_ADDR_END                           1139
-#define C_EANC_FIRcoeffs_sizeof                             21
-#define C_EANC_IIRcoeffs_ADDR                               1140
-#define C_EANC_IIRcoeffs_ADDR_END                           1156
-#define C_EANC_IIRcoeffs_sizeof                             17
-#define C_EANC_FIRcoeffs_2nd_ADDR                           1157
-#define C_EANC_FIRcoeffs_2nd_ADDR_END                       1177
-#define C_EANC_FIRcoeffs_2nd_sizeof                         21
-#define C_EANC_IIRcoeffs_2nd_ADDR                           1178
-#define C_EANC_IIRcoeffs_2nd_ADDR_END                       1194
-#define C_EANC_IIRcoeffs_2nd_sizeof                         17
-#define C_APS_DL1_coeffs1_ADDR                              1195
-#define C_APS_DL1_coeffs1_ADDR_END                          1203
+#define C_APS_DL1_coeffs1_ADDR                              1121
+#define C_APS_DL1_coeffs1_ADDR_END                          1129
 #define C_APS_DL1_coeffs1_sizeof                            9
-#define C_APS_DL1_M_coeffs2_ADDR                            1204
-#define C_APS_DL1_M_coeffs2_ADDR_END                        1206
+#define C_APS_DL1_M_coeffs2_ADDR                            1130
+#define C_APS_DL1_M_coeffs2_ADDR_END                        1132
 #define C_APS_DL1_M_coeffs2_sizeof                          3
-#define C_APS_DL1_C_coeffs2_ADDR                            1207
-#define C_APS_DL1_C_coeffs2_ADDR_END                        1209
+#define C_APS_DL1_C_coeffs2_ADDR                            1133
+#define C_APS_DL1_C_coeffs2_ADDR_END                        1135
 #define C_APS_DL1_C_coeffs2_sizeof                          3
-#define C_APS_DL2_L_coeffs1_ADDR                            1210
-#define C_APS_DL2_L_coeffs1_ADDR_END                        1218
+#define C_APS_DL2_L_coeffs1_ADDR                            1136
+#define C_APS_DL2_L_coeffs1_ADDR_END                        1144
 #define C_APS_DL2_L_coeffs1_sizeof                          9
-#define C_APS_DL2_R_coeffs1_ADDR                            1219
-#define C_APS_DL2_R_coeffs1_ADDR_END                        1227
+#define C_APS_DL2_R_coeffs1_ADDR                            1145
+#define C_APS_DL2_R_coeffs1_ADDR_END                        1153
 #define C_APS_DL2_R_coeffs1_sizeof                          9
-#define C_APS_DL2_L_M_coeffs2_ADDR                          1228
-#define C_APS_DL2_L_M_coeffs2_ADDR_END                      1230
+#define C_APS_DL2_L_M_coeffs2_ADDR                          1154
+#define C_APS_DL2_L_M_coeffs2_ADDR_END                      1156
 #define C_APS_DL2_L_M_coeffs2_sizeof                        3
-#define C_APS_DL2_R_M_coeffs2_ADDR                          1231
-#define C_APS_DL2_R_M_coeffs2_ADDR_END                      1233
+#define C_APS_DL2_R_M_coeffs2_ADDR                          1157
+#define C_APS_DL2_R_M_coeffs2_ADDR_END                      1159
 #define C_APS_DL2_R_M_coeffs2_sizeof                        3
-#define C_APS_DL2_L_C_coeffs2_ADDR                          1234
-#define C_APS_DL2_L_C_coeffs2_ADDR_END                      1236
+#define C_APS_DL2_L_C_coeffs2_ADDR                          1160
+#define C_APS_DL2_L_C_coeffs2_ADDR_END                      1162
 #define C_APS_DL2_L_C_coeffs2_sizeof                        3
-#define C_APS_DL2_R_C_coeffs2_ADDR                          1237
-#define C_APS_DL2_R_C_coeffs2_ADDR_END                      1239
+#define C_APS_DL2_R_C_coeffs2_ADDR                          1163
+#define C_APS_DL2_R_C_coeffs2_ADDR_END                      1165
 #define C_APS_DL2_R_C_coeffs2_sizeof                        3
-#define C_AlphaCurrent_ECHO_REF_ADDR                        1240
-#define C_AlphaCurrent_ECHO_REF_ADDR_END                    1240
+#define C_AlphaCurrent_ECHO_REF_ADDR                        1166
+#define C_AlphaCurrent_ECHO_REF_ADDR_END                    1166
 #define C_AlphaCurrent_ECHO_REF_sizeof                      1
-#define C_BetaCurrent_ECHO_REF_ADDR                         1241
-#define C_BetaCurrent_ECHO_REF_ADDR_END                     1241
+#define C_BetaCurrent_ECHO_REF_ADDR                         1167
+#define C_BetaCurrent_ECHO_REF_ADDR_END                     1167
 #define C_BetaCurrent_ECHO_REF_sizeof                       1
-#define C_APS_DL1_EQ_ADDR                                   1242
-#define C_APS_DL1_EQ_ADDR_END                               1250
+#define C_APS_DL1_EQ_ADDR                                   1168
+#define C_APS_DL1_EQ_ADDR_END                               1176
 #define C_APS_DL1_EQ_sizeof                                 9
-#define C_APS_DL2_L_EQ_ADDR                                 1251
-#define C_APS_DL2_L_EQ_ADDR_END                             1259
+#define C_APS_DL2_L_EQ_ADDR                                 1177
+#define C_APS_DL2_L_EQ_ADDR_END                             1185
 #define C_APS_DL2_L_EQ_sizeof                               9
-#define C_APS_DL2_R_EQ_ADDR                                 1260
-#define C_APS_DL2_R_EQ_ADDR_END                             1268
+#define C_APS_DL2_R_EQ_ADDR                                 1186
+#define C_APS_DL2_R_EQ_ADDR_END                             1194
 #define C_APS_DL2_R_EQ_sizeof                               9
-#define C_Vibra2_consts_ADDR                                1269
-#define C_Vibra2_consts_ADDR_END                            1272
+#define C_Vibra2_consts_ADDR                                1195
+#define C_Vibra2_consts_ADDR_END                            1198
 #define C_Vibra2_consts_sizeof                              4
-#define C_Vibra1_coeffs_ADDR                                1273
-#define C_Vibra1_coeffs_ADDR_END                            1283
+#define C_Vibra1_coeffs_ADDR                                1199
+#define C_Vibra1_coeffs_ADDR_END                            1209
 #define C_Vibra1_coeffs_sizeof                              11
-#define C_48_96_LP_Coefs_ADDR                               1284
-#define C_48_96_LP_Coefs_ADDR_END                           1298
+#define C_48_96_LP_Coefs_ADDR                               1210
+#define C_48_96_LP_Coefs_ADDR_END                           1224
 #define C_48_96_LP_Coefs_sizeof                             15
-#define C_96_48_AMIC_Coefs_ADDR                             1299
-#define C_96_48_AMIC_Coefs_ADDR_END                         1317
+#define C_96_48_AMIC_Coefs_ADDR                             1225
+#define C_96_48_AMIC_Coefs_ADDR_END                         1243
 #define C_96_48_AMIC_Coefs_sizeof                           19
-#define C_96_48_DMIC_Coefs_ADDR                             1318
-#define C_96_48_DMIC_Coefs_ADDR_END                         1336
+#define C_96_48_DMIC_Coefs_ADDR                             1244
+#define C_96_48_DMIC_Coefs_ADDR_END                         1262
 #define C_96_48_DMIC_Coefs_sizeof                           19
-#define C_INPUT_SCALE_ADDR                                  1337
-#define C_INPUT_SCALE_ADDR_END                              1337
+#define C_INPUT_SCALE_ADDR                                  1263
+#define C_INPUT_SCALE_ADDR_END                              1263
 #define C_INPUT_SCALE_sizeof                                1
-#define C_OUTPUT_SCALE_ADDR                                 1338
-#define C_OUTPUT_SCALE_ADDR_END                             1338
+#define C_OUTPUT_SCALE_ADDR                                 1264
+#define C_OUTPUT_SCALE_ADDR_END                             1264
 #define C_OUTPUT_SCALE_sizeof                               1
-#define C_MUTE_SCALING_ADDR                                 1339
-#define C_MUTE_SCALING_ADDR_END                             1339
+#define C_MUTE_SCALING_ADDR                                 1265
+#define C_MUTE_SCALING_ADDR_END                             1265
 #define C_MUTE_SCALING_sizeof                               1
-#define C_GAINS_0DB_ADDR                                    1340
-#define C_GAINS_0DB_ADDR_END                                1341
+#define C_GAINS_0DB_ADDR                                    1266
+#define C_GAINS_0DB_ADDR_END                                1267
 #define C_GAINS_0DB_sizeof                                  2
+#define C_AlphaCurrent_BT_UL_ADDR                           1268
+#define C_AlphaCurrent_BT_UL_ADDR_END                       1268
+#define C_AlphaCurrent_BT_UL_sizeof                         1
+#define C_BetaCurrent_BT_UL_ADDR                            1269
+#define C_BetaCurrent_BT_UL_ADDR_END                        1269
+#define C_BetaCurrent_BT_UL_sizeof                          1
+#define C_AlphaCurrent_BT_DL_ADDR                           1270
+#define C_AlphaCurrent_BT_DL_ADDR_END                       1270
+#define C_AlphaCurrent_BT_DL_sizeof                         1
+#define C_BetaCurrent_BT_DL_ADDR                            1271
+#define C_BetaCurrent_BT_DL_ADDR_END                        1271
+#define C_BetaCurrent_BT_DL_sizeof                          1
 #endif/* _ABECM_ADDR_H_ */
Index: Kernel/sound/soc/omap/abe/abe_dat.c
===================================================================
--- Kernel.orig/sound/soc/omap/abe/abe_dat.c	2011-01-19 00:14:18.522072429 +0530
+++ Kernel/sound/soc/omap/abe/abe_dat.c	2011-01-19 00:14:51.033322974 +0530
@@ -26,6 +26,17 @@
 };
 u32 abe_firmware_version_number;
 /*
+ * Kernel base
+ */
+void __iomem *io_base;
+/*
+ * global variable : saves stack area
+ */
+u16 MultiFrame[PROCESSING_SLOTS][TASKS_IN_SLOT];
+ABE_SIODescriptor sio_desc;
+ABE_SPingPongDescriptor desc_pp;
+abe_satcdescriptor_aess atc_desc;
+/*
  * automatic gain control of input mixer's gains
  */
 u32 abe_compensated_mixer_gain;
@@ -52,7 +63,7 @@
 	   reseted at start Port Name for the debug trace */
 	/* DMIC */ {
 		    OMAP_ABE_PORT_ACTIVITY_IDLE, {96000, SIX_MSB},
-		    NODRIFT, NOCALLBACK, 0, 0,
+		    NODRIFT, NOCALLBACK, 0, (DMIC_ITER / 6),
 		    {
 		     SNK_P, DMIC_PORT_PROT,
 		     {{dmem_dmic, dmem_dmic_size, DMIC_ITER} }
@@ -61,7 +72,7 @@
 		    {EQDMIC, 0}, "DMIC"},
 	/* PDM_UL */ {
 		      OMAP_ABE_PORT_ACTIVITY_IDLE, {96000, STEREO_MSB},
-		      NODRIFT, NOCALLBACK, smem_amic, 0,
+		      NODRIFT, NOCALLBACK, smem_amic, (MCPDM_UL_ITER / 2),
 		      {
 		       SNK_P, MCPDMUL_PORT_PROT,
 		       {{dmem_amic, dmem_amic_size, MCPDM_UL_ITER} }
@@ -70,189 +81,190 @@
 		      {EQAMIC, 0}, "PDM_UL"},
 	/* BT_VX_UL */ {
 			OMAP_ABE_PORT_ACTIVITY_IDLE, {8000, STEREO_MSB},
-			NODRIFT, NOCALLBACK, smem_bt_vx_ul, 0,
+			NODRIFT, NOCALLBACK, smem_bt_vx_ul_opp50, 1,
 			{
 			 SNK_P, SERIAL_PORT_PROT, {{
-						   (MCBSP1_DMA_TX*ATC_SIZE),
-						   dmem_bt_vx_ul,
-						   dmem_bt_vx_ul_size,
-						   (1*SCHED_LOOP_8kHz)
-						   } }
+						    (MCBSP1_DMA_TX*ATC_SIZE),
+						    dmem_bt_vx_ul,
+						    dmem_bt_vx_ul_size,
+						    (1*SCHED_LOOP_8kHz)
+						    } }
 			 },
 			{0, 0}, {0}, "BT_VX_UL"},
 	/* MM_UL */ {
 		     OMAP_ABE_PORT_ACTIVITY_IDLE, {48000, STEREO_MSB},
-		     NODRIFT, NOCALLBACK, smem_mm_ul, 0,
+		     NODRIFT, NOCALLBACK, smem_mm_ul, 1,
 		     {
 		      SRC_P, DMAREQ_PORT_PROT, {{
-						(CBPr_DMA_RTX3*ATC_SIZE),
-						dmem_mm_ul, dmem_mm_ul_size,
-						(10*SCHED_LOOP_48kHz),
-						ABE_DMASTATUS_RAW, (1 << 3)
-						} }
+						 (CBPr_DMA_RTX3*ATC_SIZE),
+						 dmem_mm_ul, dmem_mm_ul_size,
+						 (10*SCHED_LOOP_48kHz),
+						 ABE_DMASTATUS_RAW, (1 << 3)
+						 } }
 		      },
 		     {CIRCULAR_BUFFER_PERIPHERAL_R__3, 120},
 		     {UPROUTE, 0}, "MM_UL"},
 	/* MM_UL2 */ {
 		      OMAP_ABE_PORT_ACTIVITY_IDLE, {48000, STEREO_MSB},
-		      NODRIFT, NOCALLBACK, smem_mm_ul2, 0,
+		      NODRIFT, NOCALLBACK, smem_mm_ul2, 1,
 		      {
 		       SRC_P, DMAREQ_PORT_PROT, {{
-						 (CBPr_DMA_RTX4*ATC_SIZE),
-						 dmem_mm_ul2, dmem_mm_ul2_size,
-						 (2*SCHED_LOOP_48kHz),
-						 ABE_DMASTATUS_RAW, (1 << 4)
-						 } }
+						  (CBPr_DMA_RTX4*ATC_SIZE),
+						  dmem_mm_ul2, dmem_mm_ul2_size,
+						  (2*SCHED_LOOP_48kHz),
+						  ABE_DMASTATUS_RAW, (1 << 4)
+						  } }
 		       },
 		      {CIRCULAR_BUFFER_PERIPHERAL_R__4, 24},
 		      {UPROUTE, 0}, "MM_UL2"},
 	/* VX_UL */ {
 		     OMAP_ABE_PORT_ACTIVITY_IDLE, {8000, MONO_MSB},
-		     NODRIFT, NOCALLBACK, smem_vx_ul, 0,
+		     NODRIFT, NOCALLBACK, smem_vx_ul, 1,
 		     {
 		      SRC_P, DMAREQ_PORT_PROT, {{
-						(CBPr_DMA_RTX2*ATC_SIZE),
-						dmem_vx_ul, dmem_vx_ul_size,
-						(1*SCHED_LOOP_8kHz),
-						ABE_DMASTATUS_RAW, (1 << 2)
-						} }
+						 (CBPr_DMA_RTX2*ATC_SIZE),
+						 dmem_vx_ul, dmem_vx_ul_size,
+						 (1*SCHED_LOOP_8kHz),
+						 ABE_DMASTATUS_RAW, (1 << 2)
+						 } }
 		      }, {
 			  CIRCULAR_BUFFER_PERIPHERAL_R__2, 2},
 		     {ASRC2, 0}, "VX_UL"},
 	/* MM_DL */ {
 		     OMAP_ABE_PORT_ACTIVITY_IDLE, {48000, STEREO_MSB},
-		     NODRIFT, NOCALLBACK, smem_mm_dl, 0,
+		     NODRIFT, NOCALLBACK, smem_mm_dl, 1,
 		     {
 		      SNK_P, PINGPONG_PORT_PROT, {{
-						  (CBPr_DMA_RTX0*ATC_SIZE),
-						  dmem_mm_dl, dmem_mm_dl_size,
-						  (2*SCHED_LOOP_48kHz),
-						  ABE_DMASTATUS_RAW, (1 << 0)
-						  } }
+						   (CBPr_DMA_RTX0*ATC_SIZE),
+						   dmem_mm_dl, dmem_mm_dl_size,
+						   (2*SCHED_LOOP_48kHz),
+						   ABE_DMASTATUS_RAW, (1 << 0)
+						   } }
 		      },
 		     {CIRCULAR_BUFFER_PERIPHERAL_R__0, 24},
 		     {ASRC3, 0}, "MM_DL"},
 	/* VX_DL */ {
 		     OMAP_ABE_PORT_ACTIVITY_IDLE, {8000, MONO_MSB},
-		     NODRIFT, NOCALLBACK, smem_vx_dl, 0,
+		     NODRIFT, NOCALLBACK, smem_vx_dl, 1,
 		     {
 		      SNK_P, DMAREQ_PORT_PROT, {{
-						(CBPr_DMA_RTX1*ATC_SIZE),
-						dmem_vx_dl, dmem_vx_dl_size,
-						(1*SCHED_LOOP_8kHz),
-						ABE_DMASTATUS_RAW, (1 << 1)
-						} }
+						 (CBPr_DMA_RTX1*ATC_SIZE),
+						 dmem_vx_dl, dmem_vx_dl_size,
+						 (1*SCHED_LOOP_8kHz),
+						 ABE_DMASTATUS_RAW, (1 << 1)
+						 } }
 		      },
 		     {CIRCULAR_BUFFER_PERIPHERAL_R__1, 2},
 		     {ASRC1, 0}, "VX_DL"},
 	/* TONES_DL */ {
 			OMAP_ABE_PORT_ACTIVITY_IDLE, {48000, STEREO_MSB},
-			NODRIFT, NOCALLBACK, smem_tones_dl, 0,
+			NODRIFT, NOCALLBACK, smem_tones_dl, 1,
 			{
 			 SNK_P, DMAREQ_PORT_PROT, {{
-						   (CBPr_DMA_RTX5*ATC_SIZE),
-						   dmem_tones_dl,
-						   dmem_tones_dl_size,
-						   (2*SCHED_LOOP_48kHz),
-						   ABE_DMASTATUS_RAW, (1 << 5)
-						   } }
+						    (CBPr_DMA_RTX5*ATC_SIZE),
+						    dmem_tones_dl,
+						    dmem_tones_dl_size,
+						    (2*SCHED_LOOP_48kHz),
+						    ABE_DMASTATUS_RAW, (1 << 5)
+						    } }
 			 },
 			{CIRCULAR_BUFFER_PERIPHERAL_R__5, 24},
 			{0}, "TONES_DL"},
 	/* VIB_DL */ {
 		      OMAP_ABE_PORT_ACTIVITY_IDLE, {24000, STEREO_MSB},
-		      NODRIFT, NOCALLBACK, smem_vib, 0,
+		      NODRIFT, NOCALLBACK, smem_vib, 1,
 		      {
 		       SNK_P, DMAREQ_PORT_PROT, {{
-						 (CBPr_DMA_RTX6*ATC_SIZE),
-						 dmem_vib_dl, dmem_vib_dl_size,
-						 (2*SCHED_LOOP_24kHz),
-						 ABE_DMASTATUS_RAW, (1 << 6)
-						 } }
+						  (CBPr_DMA_RTX6*ATC_SIZE),
+						  dmem_vib_dl, dmem_vib_dl_size,
+						  (2*SCHED_LOOP_24kHz),
+						  ABE_DMASTATUS_RAW, (1 << 6)
+						  } }
 		       },
 		      {CIRCULAR_BUFFER_PERIPHERAL_R__6, 12},
 		      {0}, "VIB_DL"},
 	/* BT_VX_DL */ {
 			OMAP_ABE_PORT_ACTIVITY_IDLE, {8000, MONO_MSB},
-			NODRIFT, NOCALLBACK, smem_bt_vx_dl, 0,
+			NODRIFT, NOCALLBACK, smem_bt_vx_dl_opp50, 1,
 			{
 			 SRC_P, SERIAL_PORT_PROT, {{
-						   (MCBSP1_DMA_RX*ATC_SIZE),
-						   dmem_bt_vx_dl,
-						   dmem_bt_vx_dl_size,
-						   (1*SCHED_LOOP_8kHz),
-						   } }
+						    (MCBSP1_DMA_RX*ATC_SIZE),
+						    dmem_bt_vx_dl,
+						    dmem_bt_vx_dl_size,
+						    (1*SCHED_LOOP_8kHz),
+						    } }
 			 },
 			{0, 0}, {0}, "BT_VX_DL"},
 	/* PDM_DL */ {
 		      OMAP_ABE_PORT_ACTIVITY_IDLE, {96000, SIX_MSB},
-		      NODRIFT, NOCALLBACK, 0, 0,
-		      {SRC_P, MCPDMDL_PORT_PROT, {{dmem_mcpdm, dmem_mcpdm_size} } },
+		      NODRIFT, NOCALLBACK, 0, (MCPDM_DL_ITER / 6),
+		      {SRC_P, MCPDMDL_PORT_PROT,
+		       {{dmem_mcpdm, dmem_mcpdm_size} } },
 		      {0, 0},
 		      {MIXDL1, EQ1, APS1, MIXDL2, EQ2L, EQ2R, APS2L, APS2R, 0},
 		      "PDM_DL"},
 	/* MM_EXT_OUT */
 	{
 	 OMAP_ABE_PORT_ACTIVITY_IDLE, {48000, STEREO_MSB},
-	 NODRIFT, NOCALLBACK, smem_mm_ext_out, 0,
+	 NODRIFT, NOCALLBACK, smem_mm_ext_out, 1,
 	 {
 	  SRC_P, SERIAL_PORT_PROT, {{
-				    (MCBSP1_DMA_TX*ATC_SIZE),
-				    dmem_mm_ext_out, dmem_mm_ext_out_size,
-				    (2*SCHED_LOOP_48kHz)
-				    } }
+				     (MCBSP1_DMA_TX*ATC_SIZE),
+				     dmem_mm_ext_out, dmem_mm_ext_out_size,
+				     (2*SCHED_LOOP_48kHz)
+				     } }
 	  }, {0, 0}, {0}, "MM_EXT_OUT"},
 	/* MM_EXT_IN */
 	{
 	 OMAP_ABE_PORT_ACTIVITY_IDLE, {48000, STEREO_MSB},
-	 NODRIFT, NOCALLBACK, smem_mm_ext_in_opp100, 0,
+	 NODRIFT, NOCALLBACK, smem_mm_ext_in_opp100, 1,
 	 {
 	  SNK_P, SERIAL_PORT_PROT, {{
-				    (MCBSP1_DMA_RX*ATC_SIZE),
-				    dmem_mm_ext_in, dmem_mm_ext_in_size,
-				    (2*SCHED_LOOP_48kHz)
-				    } }
+				     (MCBSP1_DMA_RX*ATC_SIZE),
+				     dmem_mm_ext_in, dmem_mm_ext_in_size,
+				     (2*SCHED_LOOP_48kHz)
+				     } }
 	  },
 	 {0, 0}, {0}, "MM_EXT_IN"},
 	/* PCM3_TX */ {
 		       OMAP_ABE_PORT_ACTIVITY_IDLE, {48000, STEREO_MSB},
-		       NODRIFT, NOCALLBACK, 0, 0,
+		       NODRIFT, NOCALLBACK, 0, 1,
 		       {
 			SRC_P, TDM_SERIAL_PORT_PROT, {{
-						      (MCBSP3_DMA_TX *
-						       ATC_SIZE),
-						      dmem_mm_ext_out,
-						      dmem_mm_ext_out_size,
-						      (2*SCHED_LOOP_48kHz)
-						      } }
+						       (MCBSP3_DMA_TX *
+							ATC_SIZE),
+						       dmem_mm_ext_out,
+						       dmem_mm_ext_out_size,
+						       (2*SCHED_LOOP_48kHz)
+						       } }
 			},
 		       {0, 0}, {0}, "TDM_OUT"},
 	/* PCM3_RX */ {
 		       OMAP_ABE_PORT_ACTIVITY_IDLE, {48000, STEREO_MSB},
-		       NODRIFT, NOCALLBACK, 0, 0,
+		       NODRIFT, NOCALLBACK, 0, 1,
 		       {
 			SRC_P, TDM_SERIAL_PORT_PROT, {{
-						      (MCBSP3_DMA_RX *
-						       ATC_SIZE),
-						      dmem_mm_ext_in,
-						      dmem_mm_ext_in_size,
-						      (2*SCHED_LOOP_48kHz)
-						      } }
+						       (MCBSP3_DMA_RX *
+							ATC_SIZE),
+						       dmem_mm_ext_in,
+						       dmem_mm_ext_in_size,
+						       (2*SCHED_LOOP_48kHz)
+						       } }
 			},
 		       {0, 0}, {0}, "TDM_IN"},
 	/* SCHD_DBG_PORT */ {
 			     OMAP_ABE_PORT_ACTIVITY_IDLE, {48000, MONO_MSB},
-			     NODRIFT, NOCALLBACK, 0, 0,
+			     NODRIFT, NOCALLBACK, 0, 1,
 			     {
 			      SRC_P, DMAREQ_PORT_PROT, {{
-							(CBPr_DMA_RTX7 *
-							 ATC_SIZE),
-							dmem_mm_trace,
-							dmem_mm_trace_size,
-							(2*SCHED_LOOP_48kHz),
-							ABE_DMASTATUS_RAW,
-							(1 << 4)
-							} }
+							 (CBPr_DMA_RTX7 *
+							  ATC_SIZE),
+							 dmem_mm_trace,
+							 dmem_mm_trace_size,
+							 (2*SCHED_LOOP_48kHz),
+							 ABE_DMASTATUS_RAW,
+							 (1 << 4)
+							 } }
 			      }, {CIRCULAR_BUFFER_PERIPHERAL_R__7, 24},
 			     {FEAT_SEQ, FEAT_CTL, FEAT_GAINS, 0}, "SCHD_DBG"},
 };
@@ -512,6 +524,19 @@
 	/* 14 .. 15 = RESERVED */
 	 ZERO_labelID, ZERO_labelID,
 	 },
+	/* VOICE UPLINK WITH THE BT - UPROUTE_ECHO_MMUL2 */
+	{
+	/* 0 .. 9 = MM_UL */
+	 MM_EXT_IN_L_labelID, MM_EXT_IN_R_labelID, BT_UL_L_labelID,
+	 BT_UL_R_labelID, AMIC_L_labelID, AMIC_R_labelID,
+	 ZERO_labelID, ZERO_labelID, ZERO_labelID, ZERO_labelID,
+	/* 10 .. 11 = MM_UL2 */
+	 EchoRef_L_labelID, EchoRef_R_labelID,
+	/* 12 .. 13 = VX_UL */
+	 AMIC_L_labelID, AMIC_L_labelID,
+	/* 14 .. 15 = RESERVED */
+	 ZERO_labelID, ZERO_labelID,
+	 },
 };
 /* all default routing configurations */
 abe_router_t abe_router_ul_table[NBROUTE_CONFIG_MAX][NBROUTE_UL];
@@ -530,7 +555,7 @@
  typedef double (*PtrFun) (double);
 PtrFun pFun;
 pFun = sin;
-   y = (* pFun) (x);
+       y = (* pFun) (x);
 *//* mask, { time id param tag1} */
 const abe_sequence_t seq_null = {
 	NOMASK, {CL_M1, 0, {0, 0, 0, 0}, 0}, {CL_M1, 0, {0, 0, 0, 0}, 0}
Index: Kernel/sound/soc/omap/abe/abe_dbg.h
===================================================================
--- Kernel.orig/sound/soc/omap/abe/abe_dbg.h	2011-01-19 00:14:18.522072429 +0530
+++ Kernel/sound/soc/omap/abe/abe_dbg.h	2011-01-19 00:14:51.033322974 +0530
@@ -147,4 +147,3 @@
  * MACROS
  */
 #define _log(x, y, z, t) {if (x & abe_dbg_mask) abe_dbg_log(x, y, z, t); }
-
Index: Kernel/sound/soc/omap/abe/abe_def.h
===================================================================
--- Kernel.orig/sound/soc/omap/abe/abe_def.h	2011-01-19 00:14:18.522072429 +0530
+++ Kernel/sound/soc/omap/abe/abe_def.h	2011-01-19 00:14:51.033322974 +0530
@@ -120,12 +120,14 @@
 #define MIX_VXREC_INPUT_TONES 1
 #define MIX_VXREC_INPUT_VX_UL 2
 #define MIX_VXREC_INPUT_VX_DL 3
+#define MIX_ECHO_DL1	0
+#define MIX_ECHO_DL2	1
 /* nb of samples to route */
 #define NBROUTE_UL 16
 /* 10 routing tables max */
 #define NBROUTE_CONFIG_MAX 10
 /* 5 pre-computed routing tables */
-#define NBROUTE_CONFIG 5
+#define NBROUTE_CONFIG 6
 /* AMIC on VX_UL */
 #define UPROUTE_CONFIG_AMIC 0
 /* DMIC first pair on VX_UL */
@@ -136,6 +138,8 @@
 #define UPROUTE_CONFIG_DMIC3 3
 /* BT_UL on VX_UL */
 #define UPROUTE_CONFIG_BT 4
+/* ECHO_REF on MM_UL2 */
+#define UPROUTE_ECHO_MMUL2 5
 /* call-back indexes */
 #define MAXCALLBACK 100
 /* subroutines */
@@ -176,9 +180,10 @@
 #define FORCED_DRIFT_CONTROL 1
 /* for abe_set_asrc_drift_control */
 #define ADPATIVE_DRIFT_CONTROL 2
-#define DOPPMODE32_OPP100 (0x00000010 | (0x00000000<<16))
-#define DOPPMODE32_OPP50 (0x0000000C | (0x0000004<<16))
-#define DOPPMODE32_OPP25 (0x0000004 | (0x0000000C<<16))
+/* number of task/slot depending on the OPP value */
+#define DOPPMODE32_OPP100 (0x00000010)
+#define DOPPMODE32_OPP50 (0x0000000C)
+#define DOPPMODE32_OPP25 (0x0000004)
 /*
  * ABE CONST AREA FOR PARAMETERS TRANSLATION
  */
@@ -203,6 +208,7 @@
 #define GAIN_M50dB -5000L
 /* muted gain = -120 decibels */
 #define MUTE_GAIN -12000L
+#define GAIN_TOOLOW -13000L
 #define GAIN_MUTE MUTE_GAIN
 #define RAMP_MINLENGTH 3L
 /* ramp_t is in milli- seconds */
@@ -237,16 +243,10 @@
 #define NOPARAMETER 0
 /* number of ATC access upon AMIC DMArequests, all the FIFOs are enabled */
 #define MCPDM_UL_ITER 4
-/* All the McPDM FIFOs are enabled simultaneously MCPDMDL_IP THR = 4 */
+/* All the McPDM FIFOs are enabled simultaneously */
 #define MCPDM_DL_ITER 24
 /* All the DMIC FIFOs are enabled simultaneously */
 #define DMIC_ITER 12
-/* port / flow management */
-#define DEFAULT_THR_READ 1
-/* port / flow management */
-#define DEFAULT_THR_WRITE 1
-/* allows control on the PDM line */
-#define DEFAULT_CONTROL_MCPDMDL 1
 /* TBD later if needed */
 #define MAX_PINGPONG_BUFFERS 2
 /*
@@ -262,8 +262,6 @@
 #define c_write_eq2 5
 #define c_feat_read_eq3 6
 #define c_write_eq3 7
-/* ATC FIFOs pointer margin before the scheduler is resynchronized */
-#define JITTER_MARGIN 4
 /* max number of gain to be controlled by HAL */
 #define MAX_NBGAIN_CMEM 34
 /*
@@ -272,4 +270,5 @@
 #define maximum(a,b) (((a)<(b))?(b):(a))
 #define minimum(a,b) (((a)>(b))?(b):(a))
 #define absolute(a) (((a)>0)?(a):((-1)*(a)))
+#define HAL_VERSIONS 9
 #endif/* _ABE_DEF_H_ */
Index: Kernel/sound/soc/omap/abe/abe_define.h
===================================================================
--- Kernel.orig/sound/soc/omap/abe/abe_define.h	2011-01-14 00:04:13.429944571 +0530
+++ Kernel/sound/soc/omap/abe/abe_define.h	2011-01-19 00:14:51.033322974 +0530
@@ -38,8 +38,6 @@
 #define GAINS_WITH_RAMP1                                    14
 #define GAINS_WITH_RAMP2                                    22
 #define GAINS_WITH_RAMP_TOTAL                               36
-#define EANC_FIR_TAPS                                       21
-#define EANC_IIR_ORDER                                      8
 #define ASRC_MEMLENGTH                                      40
 #define ASRC_UL_VX_FIR_L                                    19
 #define ASRC_DL_VX_FIR_L                                    19
@@ -54,12 +52,14 @@
 #define SAMP_LOOP_48K                                       12
 #define SAMP_LOOP_16K                                       4
 #define SAMP_LOOP_8K                                        2
-#define INPUT_SCALE_SHIFTM2                                 5348
-#define OUTPUT_SCALE_SHIFTM2                                5352
-#define MUTE_SCALING                                        5356
+#define INPUT_SCALE_SHIFTM2                                 5052
+#define OUTPUT_SCALE_SHIFTM2                                5056
+#define MUTE_SCALING                                        5060
 #define ABE_PMEM                                            1
 #define ABE_CMEM                                            2
 #define ABE_SMEM                                            3
 #define ABE_DMEM                                            4
 #define ABE_ATC                                             5
+#define ASRC_BT_UL_FIR_L                                    19
+#define ASRC_BT_DL_FIR_L                                    19
 #endif/* _ABE_DEFINE_H_ */
Index: Kernel/sound/soc/omap/abe/abe_dm_addr.h
===================================================================
--- Kernel.orig/sound/soc/omap/abe/abe_dm_addr.h	2011-01-14 00:04:13.432765243 +0530
+++ Kernel/sound/soc/omap/abe/abe_dm_addr.h	2011-01-19 00:14:51.033322974 +0530
@@ -138,160 +138,160 @@
 #define D_McuIrqFifo_ADDR_END                               11483
 #define D_McuIrqFifo_sizeof                                 64
 #define D_PingPongDesc_ADDR                                 11484
-#define D_PingPongDesc_ADDR_END                             11531
-#define D_PingPongDesc_sizeof                               48
-#define D_PP_MCU_IRQ_ADDR                                   11532
-#define D_PP_MCU_IRQ_ADDR_END                               11533
+#define D_PingPongDesc_ADDR_END                             11507
+#define D_PingPongDesc_sizeof                               24
+#define D_PP_MCU_IRQ_ADDR                                   11508
+#define D_PP_MCU_IRQ_ADDR_END                               11509
 #define D_PP_MCU_IRQ_sizeof                                 2
-#define D_ctrlPortFifo_ADDR                                 11536
-#define D_ctrlPortFifo_ADDR_END                             11551
+#define D_ctrlPortFifo_ADDR                                 11520
+#define D_ctrlPortFifo_ADDR_END                             11535
 #define D_ctrlPortFifo_sizeof                               16
-#define D_Idle_State_ADDR                                   11552
-#define D_Idle_State_ADDR_END                               11555
+#define D_Idle_State_ADDR                                   11536
+#define D_Idle_State_ADDR_END                               11539
 #define D_Idle_State_sizeof                                 4
-#define D_Stop_Request_ADDR                                 11556
-#define D_Stop_Request_ADDR_END                             11559
+#define D_Stop_Request_ADDR                                 11540
+#define D_Stop_Request_ADDR_END                             11543
 #define D_Stop_Request_sizeof                               4
-#define D_Ref0_ADDR                                         11560
-#define D_Ref0_ADDR_END                                     11561
+#define D_Ref0_ADDR                                         11544
+#define D_Ref0_ADDR_END                                     11545
 #define D_Ref0_sizeof                                       2
-#define D_DebugRegister_ADDR                                11564
-#define D_DebugRegister_ADDR_END                            11703
+#define D_DebugRegister_ADDR                                11548
+#define D_DebugRegister_ADDR_END                            11687
 #define D_DebugRegister_sizeof                              140
-#define D_Gcount_ADDR                                       11704
-#define D_Gcount_ADDR_END                                   11705
+#define D_Gcount_ADDR                                       11688
+#define D_Gcount_ADDR_END                                   11689
 #define D_Gcount_sizeof                                     2
-#define D_DCcounter_ADDR                                    11708
-#define D_DCcounter_ADDR_END                                11711
+#define D_DCcounter_ADDR                                    11692
+#define D_DCcounter_ADDR_END                                11695
 #define D_DCcounter_sizeof                                  4
-#define D_DCsum_ADDR                                        11712
-#define D_DCsum_ADDR_END                                    11719
+#define D_DCsum_ADDR                                        11696
+#define D_DCsum_ADDR_END                                    11703
 #define D_DCsum_sizeof                                      8
-#define D_fastCounter_ADDR                                  11720
-#define D_fastCounter_ADDR_END                              11723
+#define D_fastCounter_ADDR                                  11704
+#define D_fastCounter_ADDR_END                              11707
 #define D_fastCounter_sizeof                                4
-#define D_slowCounter_ADDR                                  11724
-#define D_slowCounter_ADDR_END                              11727
+#define D_slowCounter_ADDR                                  11708
+#define D_slowCounter_ADDR_END                              11711
 #define D_slowCounter_sizeof                                4
-#define D_aUplinkRouting_ADDR                               11728
-#define D_aUplinkRouting_ADDR_END                           11759
+#define D_aUplinkRouting_ADDR                               11712
+#define D_aUplinkRouting_ADDR_END                           11743
 #define D_aUplinkRouting_sizeof                             32
-#define D_VirtAudioLoop_ADDR                                11760
-#define D_VirtAudioLoop_ADDR_END                            11763
+#define D_VirtAudioLoop_ADDR                                11744
+#define D_VirtAudioLoop_ADDR_END                            11747
 #define D_VirtAudioLoop_sizeof                              4
-#define D_AsrcVars_DL_VX_ADDR                               11764
-#define D_AsrcVars_DL_VX_ADDR_END                           11795
+#define D_AsrcVars_DL_VX_ADDR                               11748
+#define D_AsrcVars_DL_VX_ADDR_END                           11779
 #define D_AsrcVars_DL_VX_sizeof                             32
-#define D_AsrcVars_UL_VX_ADDR                               11796
-#define D_AsrcVars_UL_VX_ADDR_END                           11827
+#define D_AsrcVars_UL_VX_ADDR                               11780
+#define D_AsrcVars_UL_VX_ADDR_END                           11811
 #define D_AsrcVars_UL_VX_sizeof                             32
-#define D_CoefAddresses_VX_ADDR                             11828
-#define D_CoefAddresses_VX_ADDR_END                         11859
+#define D_CoefAddresses_VX_ADDR                             11812
+#define D_CoefAddresses_VX_ADDR_END                         11843
 #define D_CoefAddresses_VX_sizeof                           32
-#define D_AsrcVars_MM_EXT_IN_ADDR                           11860
-#define D_AsrcVars_MM_EXT_IN_ADDR_END                       11891
+#define D_AsrcVars_MM_EXT_IN_ADDR                           11844
+#define D_AsrcVars_MM_EXT_IN_ADDR_END                       11875
 #define D_AsrcVars_MM_EXT_IN_sizeof                         32
-#define D_CoefAddresses_MM_ADDR                             11892
-#define D_CoefAddresses_MM_ADDR_END                         11923
+#define D_CoefAddresses_MM_ADDR                             11876
+#define D_CoefAddresses_MM_ADDR_END                         11907
 #define D_CoefAddresses_MM_sizeof                           32
-#define D_APS_DL1_M_thresholds_ADDR                         11924
-#define D_APS_DL1_M_thresholds_ADDR_END                     11931
+#define D_APS_DL1_M_thresholds_ADDR                         11908
+#define D_APS_DL1_M_thresholds_ADDR_END                     11915
 #define D_APS_DL1_M_thresholds_sizeof                       8
-#define D_APS_DL1_M_IRQ_ADDR                                11932
-#define D_APS_DL1_M_IRQ_ADDR_END                            11933
+#define D_APS_DL1_M_IRQ_ADDR                                11916
+#define D_APS_DL1_M_IRQ_ADDR_END                            11917
 #define D_APS_DL1_M_IRQ_sizeof                              2
-#define D_APS_DL1_C_IRQ_ADDR                                11934
-#define D_APS_DL1_C_IRQ_ADDR_END                            11935
+#define D_APS_DL1_C_IRQ_ADDR                                11918
+#define D_APS_DL1_C_IRQ_ADDR_END                            11919
 #define D_APS_DL1_C_IRQ_sizeof                              2
-#define D_TraceBufAdr_ADDR                                  11936
-#define D_TraceBufAdr_ADDR_END                              11937
+#define D_TraceBufAdr_ADDR                                  11920
+#define D_TraceBufAdr_ADDR_END                              11921
 #define D_TraceBufAdr_sizeof                                2
-#define D_TraceBufOffset_ADDR                               11938
-#define D_TraceBufOffset_ADDR_END                           11939
+#define D_TraceBufOffset_ADDR                               11922
+#define D_TraceBufOffset_ADDR_END                           11923
 #define D_TraceBufOffset_sizeof                             2
-#define D_TraceBufLength_ADDR                               11940
-#define D_TraceBufLength_ADDR_END                           11941
+#define D_TraceBufLength_ADDR                               11924
+#define D_TraceBufLength_ADDR_END                           11925
 #define D_TraceBufLength_sizeof                             2
-#define D_AsrcVars_ECHO_REF_ADDR                            11944
-#define D_AsrcVars_ECHO_REF_ADDR_END                        11975
+#define D_AsrcVars_ECHO_REF_ADDR                            11928
+#define D_AsrcVars_ECHO_REF_ADDR_END                        11959
 #define D_AsrcVars_ECHO_REF_sizeof                          32
-#define D_Pempty_ADDR                                       11976
-#define D_Pempty_ADDR_END                                   11979
+#define D_Pempty_ADDR                                       11960
+#define D_Pempty_ADDR_END                                   11963
 #define D_Pempty_sizeof                                     4
-#define D_APS_DL2_L_M_IRQ_ADDR                              11980
-#define D_APS_DL2_L_M_IRQ_ADDR_END                          11981
+#define D_APS_DL2_L_M_IRQ_ADDR                              11964
+#define D_APS_DL2_L_M_IRQ_ADDR_END                          11965
 #define D_APS_DL2_L_M_IRQ_sizeof                            2
-#define D_APS_DL2_L_C_IRQ_ADDR                              11982
-#define D_APS_DL2_L_C_IRQ_ADDR_END                          11983
+#define D_APS_DL2_L_C_IRQ_ADDR                              11966
+#define D_APS_DL2_L_C_IRQ_ADDR_END                          11967
 #define D_APS_DL2_L_C_IRQ_sizeof                            2
-#define D_APS_DL2_R_M_IRQ_ADDR                              11984
-#define D_APS_DL2_R_M_IRQ_ADDR_END                          11985
+#define D_APS_DL2_R_M_IRQ_ADDR                              11968
+#define D_APS_DL2_R_M_IRQ_ADDR_END                          11969
 #define D_APS_DL2_R_M_IRQ_sizeof                            2
-#define D_APS_DL2_R_C_IRQ_ADDR                              11986
-#define D_APS_DL2_R_C_IRQ_ADDR_END                          11987
+#define D_APS_DL2_R_C_IRQ_ADDR                              11970
+#define D_APS_DL2_R_C_IRQ_ADDR_END                          11971
 #define D_APS_DL2_R_C_IRQ_sizeof                            2
-#define D_APS_DL1_C_thresholds_ADDR                         11988
-#define D_APS_DL1_C_thresholds_ADDR_END                     11995
+#define D_APS_DL1_C_thresholds_ADDR                         11972
+#define D_APS_DL1_C_thresholds_ADDR_END                     11979
 #define D_APS_DL1_C_thresholds_sizeof                       8
-#define D_APS_DL2_L_M_thresholds_ADDR                       11996
-#define D_APS_DL2_L_M_thresholds_ADDR_END                   12003
+#define D_APS_DL2_L_M_thresholds_ADDR                       11980
+#define D_APS_DL2_L_M_thresholds_ADDR_END                   11987
 #define D_APS_DL2_L_M_thresholds_sizeof                     8
-#define D_APS_DL2_L_C_thresholds_ADDR                       12004
-#define D_APS_DL2_L_C_thresholds_ADDR_END                   12011
+#define D_APS_DL2_L_C_thresholds_ADDR                       11988
+#define D_APS_DL2_L_C_thresholds_ADDR_END                   11995
 #define D_APS_DL2_L_C_thresholds_sizeof                     8
-#define D_APS_DL2_R_M_thresholds_ADDR                       12012
-#define D_APS_DL2_R_M_thresholds_ADDR_END                   12019
+#define D_APS_DL2_R_M_thresholds_ADDR                       11996
+#define D_APS_DL2_R_M_thresholds_ADDR_END                   12003
 #define D_APS_DL2_R_M_thresholds_sizeof                     8
-#define D_APS_DL2_R_C_thresholds_ADDR                       12020
-#define D_APS_DL2_R_C_thresholds_ADDR_END                   12027
+#define D_APS_DL2_R_C_thresholds_ADDR                       12004
+#define D_APS_DL2_R_C_thresholds_ADDR_END                   12011
 #define D_APS_DL2_R_C_thresholds_sizeof                     8
-#define D_ECHO_REF_48_16_WRAP_ADDR                          12028
-#define D_ECHO_REF_48_16_WRAP_ADDR_END                      12035
+#define D_ECHO_REF_48_16_WRAP_ADDR                          12012
+#define D_ECHO_REF_48_16_WRAP_ADDR_END                      12019
 #define D_ECHO_REF_48_16_WRAP_sizeof                        8
-#define D_ECHO_REF_48_8_WRAP_ADDR                           12036
-#define D_ECHO_REF_48_8_WRAP_ADDR_END                       12043
+#define D_ECHO_REF_48_8_WRAP_ADDR                           12020
+#define D_ECHO_REF_48_8_WRAP_ADDR_END                       12027
 #define D_ECHO_REF_48_8_WRAP_sizeof                         8
-#define D_BT_UL_16_48_WRAP_ADDR                             12044
-#define D_BT_UL_16_48_WRAP_ADDR_END                         12051
+#define D_BT_UL_16_48_WRAP_ADDR                             12028
+#define D_BT_UL_16_48_WRAP_ADDR_END                         12035
 #define D_BT_UL_16_48_WRAP_sizeof                           8
-#define D_BT_UL_8_48_WRAP_ADDR                              12052
-#define D_BT_UL_8_48_WRAP_ADDR_END                          12059
+#define D_BT_UL_8_48_WRAP_ADDR                              12036
+#define D_BT_UL_8_48_WRAP_ADDR_END                          12043
 #define D_BT_UL_8_48_WRAP_sizeof                            8
-#define D_BT_DL_48_16_WRAP_ADDR                             12060
-#define D_BT_DL_48_16_WRAP_ADDR_END                         12067
+#define D_BT_DL_48_16_WRAP_ADDR                             12044
+#define D_BT_DL_48_16_WRAP_ADDR_END                         12051
 #define D_BT_DL_48_16_WRAP_sizeof                           8
-#define D_BT_DL_48_8_WRAP_ADDR                              12068
-#define D_BT_DL_48_8_WRAP_ADDR_END                          12075
+#define D_BT_DL_48_8_WRAP_ADDR                              12052
+#define D_BT_DL_48_8_WRAP_ADDR_END                          12059
 #define D_BT_DL_48_8_WRAP_sizeof                            8
-#define D_VX_DL_16_48_WRAP_ADDR                             12076
-#define D_VX_DL_16_48_WRAP_ADDR_END                         12083
+#define D_VX_DL_16_48_WRAP_ADDR                             12060
+#define D_VX_DL_16_48_WRAP_ADDR_END                         12067
 #define D_VX_DL_16_48_WRAP_sizeof                           8
-#define D_VX_DL_8_48_WRAP_ADDR                              12084
-#define D_VX_DL_8_48_WRAP_ADDR_END                          12091
+#define D_VX_DL_8_48_WRAP_ADDR                              12068
+#define D_VX_DL_8_48_WRAP_ADDR_END                          12075
 #define D_VX_DL_8_48_WRAP_sizeof                            8
-#define D_VX_UL_48_16_WRAP_ADDR                             12092
-#define D_VX_UL_48_16_WRAP_ADDR_END                         12099
+#define D_VX_UL_48_16_WRAP_ADDR                             12076
+#define D_VX_UL_48_16_WRAP_ADDR_END                         12083
 #define D_VX_UL_48_16_WRAP_sizeof                           8
-#define D_VX_UL_48_8_WRAP_ADDR                              12100
-#define D_VX_UL_48_8_WRAP_ADDR_END                          12107
+#define D_VX_UL_48_8_WRAP_ADDR                              12084
+#define D_VX_UL_48_8_WRAP_ADDR_END                          12091
 #define D_VX_UL_48_8_WRAP_sizeof                            8
-#define D_APS_DL1_IRQs_WRAP_ADDR                            12108
-#define D_APS_DL1_IRQs_WRAP_ADDR_END                        12115
+#define D_APS_DL1_IRQs_WRAP_ADDR                            12092
+#define D_APS_DL1_IRQs_WRAP_ADDR_END                        12099
 #define D_APS_DL1_IRQs_WRAP_sizeof                          8
-#define D_APS_DL2_L_IRQs_WRAP_ADDR                          12116
-#define D_APS_DL2_L_IRQs_WRAP_ADDR_END                      12123
+#define D_APS_DL2_L_IRQs_WRAP_ADDR                          12100
+#define D_APS_DL2_L_IRQs_WRAP_ADDR_END                      12107
 #define D_APS_DL2_L_IRQs_WRAP_sizeof                        8
-#define D_APS_DL2_R_IRQs_WRAP_ADDR                          12124
-#define D_APS_DL2_R_IRQs_WRAP_ADDR_END                      12131
+#define D_APS_DL2_R_IRQs_WRAP_ADDR                          12108
+#define D_APS_DL2_R_IRQs_WRAP_ADDR_END                      12115
 #define D_APS_DL2_R_IRQs_WRAP_sizeof                        8
-#define D_nextMultiFrame_ADDR                               12132
-#define D_nextMultiFrame_ADDR_END                           12139
+#define D_nextMultiFrame_ADDR                               12116
+#define D_nextMultiFrame_ADDR_END                           12123
 #define D_nextMultiFrame_sizeof                             8
-#define D_HW_TEST_ADDR                                      12140
-#define D_HW_TEST_ADDR_END                                  12147
+#define D_HW_TEST_ADDR                                      12124
+#define D_HW_TEST_ADDR_END                                  12131
 #define D_HW_TEST_sizeof                                    8
-#define D_TraceBufAdr_HAL_ADDR                              12148
-#define D_TraceBufAdr_HAL_ADDR_END                          12151
+#define D_TraceBufAdr_HAL_ADDR                              12132
+#define D_TraceBufAdr_HAL_ADDR_END                          12135
 #define D_TraceBufAdr_HAL_sizeof                            4
 #define D_DEBUG_HAL_TASK_ADDR                               12288
 #define D_DEBUG_HAL_TASK_ADDR_END                           14335
@@ -300,11 +300,23 @@
 #define D_DEBUG_FW_TASK_ADDR_END                            14591
 #define D_DEBUG_FW_TASK_sizeof                              256
 #define D_FwMemInit_ADDR                                    14592
-#define D_FwMemInit_ADDR_END                                15383
-#define D_FwMemInit_sizeof                                  792
-#define D_FwMemInitDescr_ADDR                               15384
-#define D_FwMemInitDescr_ADDR_END                           15399
+#define D_FwMemInit_ADDR_END                                15551
+#define D_FwMemInit_sizeof                                  960
+#define D_FwMemInitDescr_ADDR                               15552
+#define D_FwMemInitDescr_ADDR_END                           15567
 #define D_FwMemInitDescr_sizeof                             16
+#define D_AsrcVars_BT_UL_ADDR                               15568
+#define D_AsrcVars_BT_UL_ADDR_END                           15599
+#define D_AsrcVars_BT_UL_sizeof                             32
+#define D_AsrcVars_BT_DL_ADDR                               15600
+#define D_AsrcVars_BT_DL_ADDR_END                           15631
+#define D_AsrcVars_BT_DL_sizeof                             32
+#define D_BT_DL_48_8_OPP100_WRAP_ADDR                       15632
+#define D_BT_DL_48_8_OPP100_WRAP_ADDR_END                   15639
+#define D_BT_DL_48_8_OPP100_WRAP_sizeof                     8
+#define D_BT_DL_48_16_OPP100_WRAP_ADDR                      15640
+#define D_BT_DL_48_16_OPP100_WRAP_ADDR_END                  15647
+#define D_BT_DL_48_16_OPP100_WRAP_sizeof                    8
 #define D_PING_ADDR                                         16384
 #define D_PING_ADDR_END                                     40959
 #define D_PING_sizeof                                       24576
Index: Kernel/sound/soc/omap/abe/abe_ext.c
===================================================================
--- Kernel.orig/sound/soc/omap/abe/abe_ext.c	2011-01-14 00:04:13.432765243 +0530
+++ Kernel/sound/soc/omap/abe/abe_ext.c	2011-01-19 00:14:51.033322974 +0530
@@ -19,6 +19,7 @@
  * 02110-1301 USA
  */
 #include "abe_main.h"
+#define ENABLE_DEFAULT_PLAYERS 0
 /**
  * abe_default_irq_pingpong_player
  *
@@ -26,7 +27,7 @@
  */
 void abe_default_irq_pingpong_player(void)
 {
-#if 0
+#if ENABLE_DEFAULT_PLAYERS
 #define N_SAMPLES_MAX ((int)(1024))	/* ping-pong access to MM_DL at 48kHz Mono with 20ms packet sizes */
 	static s32 idx;
 	u32 i, dst, n_samples, n_bytes;
@@ -80,7 +81,7 @@
  */
 void abe_default_irq_pingpong_player_32bits(void)
 {
-#if 0
+#if ENABLE_DEFAULT_PLAYERS
 	/* ping-pong access to MM_DL at 48kHz Mono with 20ms packet sizes */
 	static s32 idx;
 	u32 i, dst, n_samples, n_bytes;
@@ -114,6 +115,89 @@
 #endif
 }
 /**
+ * abe_rshifted16_irq_pingpong_player_32bits
+ *
+ * generates data for the cache-flush buffer  MODE 32 BITS
+ * Return value:
+ * None.
+ */
+void abe_rshifted16_irq_pingpong_player_32bits(void)
+{
+#if ENABLE_DEFAULT_PLAYERS
+	/* ping-pong access to MM_DL at 48kHz Mono with 20ms packet sizes */
+	static s32 idx;
+	u32 i, dst, n_samples, n_bytes;
+	s32 temp[N_SAMPLES_MAX], audio_sample;
+#define DATA_SIZE 20		/*  t = [0:N-1]/N; x = round(16383*sin(2*pi*t)) */
+	const s32 audio_pattern[DATA_SIZE] = {
+		0, 5063, 9630, 13254, 15581, 16383, 15581, 13254,
+		9630, 5063, 0, -5063, -9630, -13254, -15581, -16383,
+		-15581, -13254, -9630, -5063
+	};
+	/* read the address of the Pong buffer */
+	abe_read_next_ping_pong_buffer(MM_DL_PORT, &dst, &n_bytes);
+	/* each stereo sample weights 8 bytes (format 32|32) */
+	n_samples = n_bytes / 8;
+	/* generate a test pattern */
+	for (i = 0; i < n_samples; i++) {
+		/* circular addressing */
+		audio_sample = audio_pattern[idx];
+		idx = (idx >= (DATA_SIZE - 1)) ? 0 : (idx + 1);
+		temp[i * 2 + 0] = audio_sample;
+		temp[i * 2 + 1] = audio_sample;
+	}
+	abe_set_ping_pong_buffer(MM_DL_PORT, 0);
+	/* copy the pattern (flush it) to DMEM pointer update
+	 * not necessary here because the buffer size do not
+	 * change from one ping to the other pong
+	 */
+	abe_block_copy(COPY_FROM_HOST_TO_ABE, ABE_DMEM, dst,
+		       (u32 *) &(temp[0]), n_bytes);
+	abe_set_ping_pong_buffer(MM_DL_PORT, n_bytes);
+#endif
+}
+/**
+ * abe_1616_irq_pingpong_player_1616bits
+ *
+ * generates data for the cache-flush buffer  MODE 16+16 BITS
+ * Return value:
+ * None.
+ */
+void abe_1616_irq_pingpong_player_1616bits(void)
+{
+#if ENABLE_DEFAULT_PLAYERS
+	/* ping-pong access to MM_DL at 48kHz Mono with 20ms packet sizes */
+	static s32 idx;
+	u32 i, dst, n_samples, n_bytes;
+	s32 temp[N_SAMPLES_MAX], audio_sample;
+#define DATA_SIZE 20		/*  t = [0:N-1]/N; x = round(16383*sin(2*pi*t)) */
+	const s32 audio_pattern[DATA_SIZE] = {
+		0, 5063, 9630, 13254, 15581, 16383, 15581, 13254,
+		9630, 5063, 0, -5063, -9630, -13254, -15581, -16383,
+		-15581, -13254, -9630, -5063
+	};
+	/* read the address of the Pong buffer */
+	abe_read_next_ping_pong_buffer(MM_DL_PORT, &dst, &n_bytes);
+	/* each stereo sample weights 4 bytes (format 16+16) */
+	n_samples = n_bytes / 4;
+	/* generate a test pattern */
+	for (i = 0; i < n_samples; i++) {
+		/* circular addressing */
+		audio_sample = audio_pattern[idx];
+		idx = (idx >= (DATA_SIZE - 1)) ? 0 : (idx + 1);
+		temp[i] = (audio_sample << 16) | (audio_sample & 0x0000FFFF);
+	}
+	abe_set_ping_pong_buffer(MM_DL_PORT, 0);
+	/* copy the pattern (flush it) to DMEM pointer update
+	 * not necessary here because the buffer size do not
+	 * change from one ping to the other pong
+	 */
+	abe_block_copy(COPY_FROM_HOST_TO_ABE, ABE_DMEM, dst,
+		       (u32 *) &(temp[0]), n_bytes);
+	abe_set_ping_pong_buffer(MM_DL_PORT, n_bytes);
+#endif
+}
+/**
  * abe_default_irq_aps_adaptation
  *
  * updates the APS filter and gain
Index: Kernel/sound/soc/omap/abe/abe_ext.h
===================================================================
--- Kernel.orig/sound/soc/omap/abe/abe_ext.h	2011-01-14 00:04:13.432765243 +0530
+++ Kernel/sound/soc/omap/abe/abe_ext.h	2011-01-19 00:14:51.033322974 +0530
@@ -22,39 +22,18 @@
 #define _ABE_EXT_H_
 /* Tuning is done on PC ? */
 #define PC_SIMULATION 0
-#if PC_SIMULATION
-extern void target_server_read_pmem(u32 address, u32 *data,
-				    u32 nb_words_32bits);
-extern void target_server_write_pmem(u32 address, u32 *data,
-				     u32 nb_words_32bits);
-extern void target_server_read_cmem(u32 address, u32 *data,
-				    u32 nb_words_32bits);
-extern void target_server_write_cmem(u32 address, u32 *data,
-				     u32 nb_words_32bits);
-extern void target_server_read_atc(u32 address, u32 *data,
-				   u32 nb_words_32bits);
-extern void target_server_write_atc(u32 address, u32 *data,
-				    u32 nb_words_32bits);
-extern void target_server_read_smem(u32 address_48bits, u32 *data,
-				    u32 nb_words_48bits);
-extern void target_server_write_smem(u32 address_48bits, u32 *data,
-				     u32 nb_words_48bits);
-extern void target_server_read_dmem(u32 address_byte, u32 *data, u32 nb_byte);
-extern void target_server_write_dmem(u32 address_byte, u32 *data, u32 nb_byte);
-extern void target_server_activate_mcpdm_ul(void);
-extern void target_server_activate_mcpdm_dl(void);
-extern void target_server_activate_dmic(void);
-extern void target_server_set_voice_sampling(int dVirtAudioVoiceMode,
-					     int
-					     dVirtAudioVoiceSampleFrequency);
-extern void target_server_set_dVirtAudioMultimediaMode(int
-						       dVirtAudioMultimediaMode);
-#endif
 /*
  * OS DEPENDENT MMU CONFIGURATION
  */
 #define _lock_enter
 #define _lock_exit
+#define ABE_PMEM_BASE_OFFSET_MPU	0xe0000
+#define ABE_CMEM_BASE_OFFSET_MPU	0xa0000
+#define ABE_SMEM_BASE_OFFSET_MPU	0xc0000
+#define ABE_DMEM_BASE_OFFSET_MPU	0x80000
+#define ABE_ATC_BASE_OFFSET_MPU		0xf1000
+/* default base address for io_base */
+#define ABE_DEFAULT_BASE_ADDRESS_L3 0x49000000L
 /* base address used for L3/DMA access */
 #define ABE_ATC_BASE_ADDRESS_L3 0x490F1000L
 /* base address used for L4/MCU access */
Index: Kernel/sound/soc/omap/abe/abe_firmware.c
===================================================================
--- Kernel.orig/sound/soc/omap/abe/abe_firmware.c	2011-01-19 00:14:18.522072429 +0530
+++ Kernel/sound/soc/omap/abe/abe_firmware.c	2011-01-19 00:14:51.043321822 +0530
@@ -1,14 +1,14 @@
-0x00008800,  /* VERSION NUMBER */
+0x00009060,  /* VERSION NUMBER */
 0x00002000,  /* PMEM LENGTH IN BYTES */
-0x000014F8,  /* CMEM LENGTH IN BYTES */
+0x000013E0,  /* CMEM LENGTH IN BYTES */
 0x00010000,  /* DMEM LENGTH IN BYTES */
-0x000045C0,  /* SMEM LENGTH IN BYTES */
+0x000044E8,  /* SMEM LENGTH IN BYTES */
 0x1600200f,
 0x0a000670,
 0x08200000,
 0x08200000,
 0x07800000,
-0x1602d2ce,
+0x1602d1ce,
 0x014000e0,
 0x014000e1,
 0x014000e2,
@@ -27,31 +27,31 @@
 0x014000ef,
 0x144000e4,
 0x9e000000,
-0x0a202ed0,
+0x0a200c40,
 0x9e000040,
-0x0a202ed0,
+0x0a200c40,
 0x9e000080,
-0x0a202ed0,
+0x0a200c40,
 0x9e0000c0,
-0x0a202ed0,
+0x0a200c40,
 0x9e080000,
-0x0a202ed0,
+0x0a200c40,
 0x9e080100,
-0x0a202ed0,
+0x0a200c40,
 0x9e080200,
-0x0a202ed0,
+0x0a200c40,
 0x9e080300,
-0x0a202ed0,
+0x0a200c40,
 0x9e080400,
-0x0a202ed0,
+0x0a200c40,
 0x9e080500,
-0x0a202ed0,
+0x0a200c40,
 0x9e080600,
-0x0a202ed0,
+0x0a200c40,
 0x9e080700,
-0x0a202ed0,
+0x0a200c40,
 0x9c050800,
-0x0a202ed0,
+0x0a200c40,
 0x16000010,
 0x16000001,
 0x17000102,
@@ -121,7 +121,7 @@
 0x0600000c,
 0x1600274d,
 0x0a800870,
-0x1602ea03,
+0x1602e903,
 0x00000030,
 0x00000231,
 0x00000435,
@@ -169,10 +169,10 @@
 0x16003fc5,
 0x01000058,
 0x1600c005,
-0x1602d241,
+0x1602d141,
 0x16000002,
 0x40000011,
-0x1602d200,
+0x1602d100,
 0x9e0e0550,
 0xdd140530,
 0x160ffff4,
@@ -199,11 +199,31 @@
 0x003ffafb,
 0x048ffaff,
 0x08200000,
+0x07800000,
+0x01400040,
+0x01400041,
+0x01400042,
+0x01400043,
+0x08200000,
+0x16000494,
+0x160004a5,
+0x160004b6,
+0x16000007,
+0x9c032040,
+0x9c032950,
+0x9c033260,
+0x9e0f0070,
+0x9e0f0170,
+0x9e0f0270,
+0x9d032040,
+0x9d032950,
+0x9d033260,
+0x08200000,
 0x9f158048,
 0x07800000,
 0x07800000,
 0x9d088118,
-0x98800c40,
+0x98800d80,
 0x08200000,
 0x9f158048,
 0x9f040040,
@@ -213,14 +233,14 @@
 0x07800000,
 0x07800000,
 0x9d188148,
-0x98800ca0,
+0x98800de0,
 0x08200000,
 0x9f158048,
 0x07800000,
 0x07800000,
 0x9d188148,
 0x9d188108,
-0x98800d40,
+0x98800e80,
 0x08200000,
 0x9f158048,
 0x07800000,
@@ -230,7 +250,7 @@
 0x07800000,
 0x9d1e8148,
 0x9d1e8108,
-0x98800db0,
+0x98800ef0,
 0x08200000,
 0x9f158018,
 0x9f040010,
@@ -243,21 +263,21 @@
 0x07800000,
 0x07800000,
 0x9d1e8108,
-0x98800e50,
+0x98800f90,
 0x08200000,
 0x9c080048,
 0x9f1d0010,
 0x07800000,
 0x07800000,
 0x9d0c8118,
-0x98800f20,
+0x98801060,
 0x08200000,
 0x9c180028,
 0x9f1d0010,
 0x07800000,
 0x07800000,
 0x9d0c8108,
-0x98800f90,
+0x988010d0,
 0x08200000,
 0x9c180068,
 0x9c180028,
@@ -265,7 +285,7 @@
 0x07800000,
 0x07800000,
 0x9d0c8148,
-0x98801000,
+0x98801140,
 0x08200000,
 0x9c1e0048,
 0x9c1e0008,
@@ -273,18 +293,18 @@
 0x07800000,
 0x07800000,
 0x9d0c8148,
-0x98801080,
+0x988011c0,
 0x08200000,
 0x9c1e0008,
 0x9f1d0010,
 0x07800000,
 0x07800000,
 0x9d0c8108,
-0x98801100,
+0x98801240,
 0x08200000,
-0x160004d4,
-0x160004e5,
-0x160004f6,
+0x16000494,
+0x160004a5,
+0x160004b6,
 0x160000bd,
 0x9c032340,
 0x9c032c50,
@@ -304,14 +324,14 @@
 0x07800000,
 0x07800000,
 0x9d0c8518,
-0x988011e0,
+0x98801320,
 0x9d032340,
 0x9d032c50,
 0x9d033560,
 0x08200000,
-0x16000544,
-0x16000555,
-0x16000566,
+0x160004f4,
+0x16000505,
+0x16000516,
 0x9c03a440,
 0x9c03ad50,
 0x9c03b660,
@@ -327,7 +347,7 @@
 0x9d1881c8,
 0x9d188108,
 0x9d188148,
-0x98801390,
+0x988014d0,
 0x9d032440,
 0x9d032d50,
 0x9d033660,
@@ -341,7 +361,7 @@
 0x9d188108,
 0x9f158038,
 0x07800000,
-0x988014f0,
+0x98801630,
 0x9d188108,
 0x08200000,
 0x9e088100,
@@ -363,115 +383,10 @@
 0x07800000,
 0x07800000,
 0x9d0c8118,
-0x98801670,
-0x08200000,
+0x988017b0,
 0x08200000,
 0x08200000,
 0x08200000,
-0x9c0c00c0,
-0x9c030f10,
-0x9c009020,
-0x9c0c0468,
-0x9d0c8530,
-0x1600007d,
-0x9f130462,
-0x9f13056a,
-0x9c0c0428,
-0x9f130422,
-0x9d0c8570,
-0x16000004,
-0x9f1780ea,
-0x9f13052a,
-0x9c0c0468,
-0x9f130462,
-0x9d0c8530,
-0x16000005,
-0x9f1380ea,
-0x9f13056a,
-0x9c0c0428,
-0x9f130422,
-0x9d0c8570,
-0x07800000,
-0x9f1380ea,
-0x9f13052a,
-0x9c0c0468,
-0x9f130462,
-0x9d0c8530,
-0x988017f0,
-0x9f1380ea,
-0x9f13056a,
-0x9c0c0428,
-0x9f13042a,
-0x9d0c8570,
-0x16000006,
-0x9f1380ea,
-0x9f13052a,
-0x16000007,
-0x07800000,
-0x9d0c8538,
-0x9e048000,
-0x9f1380ea,
-0x9f1380ea,
-0x9c031830,
-0x07800000,
-0x9d0c83c8,
-0x07800000,
-0x07800000,
-0xa007026a,
-0x9f0628b0,
-0x07800000,
-0x9d0c8248,
-0x9d0c8190,
-0x08200000,
-0x9c180004,
-0x9c180080,
-0x16000004,
-0x07800000,
-0x9c043e60,
-0x9c043f60,
-0x9c0c02b0,
-0x9c180628,
-0xdc180668,
-0x1f040030,
-0x9f040070,
-0x9e0f0040,
-0x9d0c8138,
-0x9d188708,
-0x9d188748,
-0x08200000,
-0x9c028c10,
-0x1440000d,
-0x00000004,
-0x9c0c04b8,
-0x9d06a40a,
-0x9d06a40a,
-0x9d06a40a,
-0x9d06a40a,
-0x9d06a40a,
-0x40000205,
-0x16000002,
-0x40000406,
-0x16000003,
-0x400006d7,
-0x16000000,
-0x9d028c10,
-0x16000011,
-0x9f03a0b0,
-0x9e048000,
-0xdc1803e0,
-0x1f040020,
-0x9e040040,
-0x9f0400d0,
-0x9c0c0090,
-0x9e008000,
-0x9d1883c0,
-0x9c0c0240,
-0xc10000d4,
-0x1f040090,
-0x010002d5,
-0x010004d6,
-0x010006d7,
-0x9d0c8120,
 0x08200000,
 0x9c038600,
 0x07800000,
@@ -498,23 +413,23 @@
 0x9f0020b0,
 0x9f0400d0,
 0x05800560,
-0x0a801f20,
+0x0a8019d0,
 0x9c0c0510,
-0x0a001f30,
+0x0a0019e0,
 0x9c0c0618,
 0x16000014,
 0x9d0c81e8,
 0x9d0c8148,
-0x0a801fa0,
+0x0a801a50,
 0x9c0c05b0,
 0x9c0c0510,
-0x0a001fc0,
+0x0a001a70,
 0x9c0c06b8,
 0x9c0c0618,
 0x07800000,
 0x9d0c81e8,
 0x9d0c8148,
-0x98801da0,
+0x98801850,
 0x9d180750,
 0x08200000,
 0x9d019220,
@@ -523,13 +438,13 @@
 0x413ffefe,
 0x16000040,
 0x9c010910,
-0x0a203510,
+0x0a202e80,
 0x14400040,
 0x9c030810,
 0x16000171,
 0x9c009f30,
 0x9c019220,
-0x0a203010,
+0x0a202980,
 0x9c009830,
 0x003ffefe,
 0x048ffeff,
@@ -542,7 +457,7 @@
 0x04000400,
 0x9e0f0150,
 0x01000025,
-0x0a2022d0,
+0x0a201d80,
 0x403ffefe,
 0x16000007,
 0x9e0f0170,
@@ -552,7 +467,7 @@
 0x413ffefe,
 0x16000005,
 0x01000025,
-0x0a2022d0,
+0x0a201d80,
 0x40000024,
 0x16000005,
 0x403ffefe,
@@ -577,25 +492,25 @@
 0x9c180674,
 0x9c180650,
 0x058001a0,
-0x0aa027d0,
+0x0aa02280,
 0x04800144,
 0x04400044,
 0x05800040,
-0x0aa02510,
+0x0aa01fc0,
 0x05800160,
-0x0ac024b0,
+0x0ac01f60,
 0x9e090000,
 0x07800000,
 0x07800000,
 0x9e0d0500,
 0x9d040508,
-0x0a0026a0,
+0x0a002150,
 0x9d040008,
 0x9e090000,
 0x07800000,
 0x9d040008,
 0x9e0d0500,
-0x0a0026a0,
+0x0a002150,
 0x9d040008,
 0x9e090000,
 0x07800000,
@@ -604,18 +519,18 @@
 0x1280010a,
 0x048001a9,
 0x05800940,
-0x0aa026a0,
+0x0aa02150,
 0x05800160,
 0x40000628,
 0x160ffff9,
-0x0ac02630,
+0x0ac020e0,
 0x05800180,
-0x0ae026a0,
+0x0ae02150,
 0x160ffff6,
 0x160ffff7,
-0x0a002670,
+0x0a002120,
 0x05800810,
-0x0ae026a0,
+0x0ae02150,
 0x16000016,
 0x16000007,
 0x9d044690,
@@ -623,10 +538,10 @@
 0x9d180674,
 0x05800160,
 0x9d180654,
-0x0ac02710,
+0x0ac021c0,
 0x0420040a,
 0x04a001ab,
-0x4a002740,
+0x4a0021f0,
 0x044000bb,
 0x0480014b,
 0x044000bb,
@@ -638,24 +553,24 @@
 0x12000288,
 0x12000299,
 0x9e0e8280,
-0xca0028e0,
+0xca002390,
 0x1e0e8390,
 0xdd040604,
 0x05800160,
-0x0ac02880,
+0x0ac02330,
 0x9d040008,
 0x9e090000,
 0x07800000,
 0x05800040,
 0x9e0d0500,
-0x0aa028e0,
+0x0aa02390,
 0x9d040508,
-0x0a0028e0,
+0x0a002390,
 0x9e090000,
 0x05800040,
 0x9d040008,
 0x9e0d0500,
-0x0a8028e0,
+0x0a802390,
 0x9d040508,
 0x9c1d06c4,
 0xdc1d0644,
@@ -668,7 +583,7 @@
 0x9d108700,
 0x00000cc9,
 0x06000008,
-0x0aa02ae0,
+0x0aa02590,
 0xdc1d0684,
 0x14400005,
 0xdc1d0604,
@@ -679,16 +594,16 @@
 0xdd108700,
 0x160ffff8,
 0x05800540,
-0x0aa02aa0,
+0x0aa02550,
 0x05800160,
-0x0ac02a90,
+0x0ac02540,
 0x01000027,
-0x0a002aa0,
+0x0a002550,
 0x01000028,
 0x9e088000,
 0xa0054dba,
 0xa005c81a,
-0x0a002b70,
+0x0a002620,
 0x9e088000,
 0xa0054dba,
 0xa005c81a,
@@ -701,7 +616,7 @@
 0x9d0446a0,
 0x9e0f0070,
 0x9d0c8118,
-0x98802370,
+0x98801e20,
 0x003ffefb,
 0x003ffcfa,
 0x003ffaf9,
@@ -720,7 +635,7 @@
 0x9d0c82b8,
 0x07800000,
 0x9d0c8318,
-0x98802c70,
+0x98802720,
 0x07800000,
 0xa00602ba,
 0x9c0c0118,
@@ -734,9 +649,9 @@
 0x9c1d0548,
 0x9f093860,
 0x06000006,
-0x0aa02df0,
+0x0aa028a0,
 0x06000017,
-0x0aa02df0,
+0x0aa028a0,
 0x07800000,
 0x9c0c0118,
 0x9c0c01b0,
@@ -747,31 +662,11 @@
 0x9c1d0548,
 0x9f083860,
 0x06000006,
-0x0aa02ec0,
+0x0aa02970,
 0x06000017,
-0x0aa02ec0,
+0x0aa02970,
 0x07800000,
 0x08200000,
-0x07800000,
-0x01400040,
-0x01400041,
-0x01400042,
-0x01400043,
-0x08200000,
-0x160004d4,
-0x160004e5,
-0x160004f6,
-0x16000007,
-0x9c032040,
-0x9c032950,
-0x9c033260,
-0x9e0f0070,
-0x9e0f0170,
-0x9e0f0270,
-0x9d032040,
-0x9d032950,
-0x9d033260,
-0x08200000,
 0x9c0c0018,
 0x1440001d,
 0x04a001dd,
@@ -783,7 +678,7 @@
 0x9d0c8318,
 0x9d0c81b8,
 0x9d0c02b8,
-0x98803060,
+0x988029d0,
 0x07800000,
 0xa00602ba,
 0x07800000,
@@ -808,7 +703,7 @@
 0x07800000,
 0x9d0c8318,
 0x9d0c02b8,
-0x98803190,
+0x98802b00,
 0x9c0c0018,
 0xa00602ba,
 0x07800000,
@@ -833,7 +728,7 @@
 0x9d0c8298,
 0x9d0c8338,
 0x9d0c8198,
-0x98803370,
+0x98802ce0,
 0x07800000,
 0xa00602ba,
 0xa006821a,
@@ -848,9 +743,9 @@
 0xdd040008,
 0x06000001,
 0x04a00111,
-0x0aa03490,
+0x0aa02e00,
 0x9d0c8118,
-0x98803470,
+0x98802de0,
 0x08200000,
 0x9c0c02b0,
 0x9c0c0018,
@@ -860,8 +755,8 @@
 0xdd0c81b8,
 0x06000005,
 0x04a00155,
-0x0aa03560,
-0x98803520,
+0x0aa02ed0,
+0x98802e90,
 0x08200000,
 0x9c0c0018,
 0x9e0e0620,
@@ -881,7 +776,7 @@
 0x9d0c8318,
 0x9d0c81b8,
 0x9d0c02b8,
-0x98803610,
+0x98802f80,
 0x9c0c0610,
 0xa00602ba,
 0x07800000,
@@ -903,7 +798,7 @@
 0x07800000,
 0x9f160028,
 0x9f168298,
-0x98803800,
+0x98803170,
 0x9d0c8128,
 0x08200000,
 0x9f160020,
@@ -911,14 +806,14 @@
 0x07800000,
 0x9d0c8108,
 0x9d0c8258,
-0x98803870,
+0x988031e0,
 0x08200000,
 0x9f160010,
 0x9f168068,
 0x07800000,
 0x07800000,
 0x9d0c8128,
-0x988038e0,
+0x98803250,
 0x08200000,
 0x9d008810,
 0x1280020d,
@@ -942,7 +837,7 @@
 0x9d0c87b8,
 0x9d1082c8,
 0x9d108288,
-0x988039b0,
+0x98803320,
 0x08200000,
 0x00000003,
 0x00000205,
@@ -955,21 +850,21 @@
 0x07800000,
 0x07800000,
 0x9d0c8128,
-0x98803b30,
+0x988034a0,
 0x08200000,
 0x010002fe,
 0x00801605,
-0x16002ac3,
+0x16002a63,
 0x12000155,
 0x0200035e,
 0x0b200000,
 0x00800405,
-0x16002ac3,
+0x16002a63,
 0x12000155,
 0x0200035e,
 0x0b200000,
 0x00801705,
-0x16002ac3,
+0x16002a63,
 0x12000155,
 0x0200035e,
 0x0b200000,
@@ -986,7 +881,7 @@
 0xdc180404,
 0x06000003,
 0x9c180480,
-0x0aa040a0,
+0x0aa03a10,
 0x9c052b20,
 0x9c042820,
 0x9c023970,
@@ -998,27 +893,27 @@
 0x00800e04,
 0x00800503,
 0x05800420,
-0x0ae03f90,
+0x0ae03900,
 0x160fffe6,
 0x04000344,
 0x05800420,
-0x0ae04080,
+0x0ae039f0,
 0x160ffff6,
 0x04000344,
 0x05800420,
-0x0ae04080,
+0x0ae039f0,
 0x16000006,
 0x04000344,
 0x05800420,
-0x0ae04080,
+0x0ae039f0,
 0x16000016,
 0x04000344,
 0x05800420,
-0x0ae04080,
+0x0ae039f0,
 0x16000026,
 0x04000344,
 0x05800420,
-0x0ae04080,
+0x0ae039f0,
 0x16000036,
 0x010000f6,
 0x12000132,
@@ -1036,7 +931,7 @@
 0x9e0f0070,
 0x000000f6,
 0x01000606,
-0x0a0044a0,
+0x0a003e10,
 0x9c042b20,
 0x9c052920,
 0x9c023870,
@@ -1048,43 +943,43 @@
 0x160fffb6,
 0x00800503,
 0x05800420,
-0x0ae043b0,
+0x0ae03d20,
 0x160fffc6,
 0x04000344,
 0x05800420,
-0x0ae04490,
+0x0ae03e00,
 0x160fffd6,
 0x04000344,
 0x05800420,
-0x0ae04490,
+0x0ae03e00,
 0x160fffe6,
 0x04000344,
 0x05800420,
-0x0ae04490,
+0x0ae03e00,
 0x160ffff6,
 0x04000344,
 0x05800420,
-0x0ae04490,
+0x0ae03e00,
 0x16000006,
 0x04000344,
 0x05800420,
-0x0ae04490,
+0x0ae03e00,
 0x16000016,
 0x04000344,
 0x05800420,
-0x0ae04490,
+0x0ae03e00,
 0x16000026,
 0x04000344,
 0x05800420,
-0x0ae04490,
+0x0ae03e00,
 0x16000036,
 0x04000344,
 0x05800420,
-0x0ae04490,
+0x0ae03e00,
 0x16000046,
 0x04000344,
 0x05800420,
-0x0ae04490,
+0x0ae03e00,
 0x16000056,
 0x010000f6,
 0x12000232,
@@ -1102,14 +997,14 @@
 0x000000f6,
 0x01000606,
 0x00800715,
-0x16002ac6,
+0x16002a66,
 0x410004fe,
 0x12000155,
 0x00000202,
 0x00800d04,
 0x0200056e,
-0x16014e46,
-0x16014e87,
+0x16013bc6,
+0x16013c07,
 0x0400042d,
 0x04a001dd,
 0x9e0e0260,
@@ -1124,7 +1019,7 @@
 0x06000005,
 0x40800f02,
 0x04c07f77,
-0x4a8046d0,
+0x4a804040,
 0x04500273,
 0x00800a02,
 0x9e088100,
@@ -1148,19 +1043,19 @@
 0x08200000,
 0x00001807,
 0x00801e02,
-0x07800000,
+0x16000003,
 0x9c01b970,
-0x12000c23,
-0x07800000,
+0x06000082,
+0x17000233,
 0x9e088100,
 0x07800000,
-0x07800000,
+0x12000c33,
 0x04c3ff66,
 0x04500366,
 0x07800000,
 0x16000003,
 0x9e0c8100,
-0x1602dd06,
+0x1602dc06,
 0x00000064,
 0x1600003d,
 0x04a00122,
@@ -1175,8 +1070,8 @@
 0x9d0c810c,
 0x9d0c815c,
 0x9d0c81ac,
-0x988048e0,
-0x0aa04860,
+0x98804250,
+0x0aa041d0,
 0x9e0f0120,
 0x08200000,
 0x4080070d,
@@ -1188,42 +1083,42 @@
 0x413ffefe,
 0x06000004,
 0x9c03a950,
-0x4aa04a80,
+0x4aa043f0,
 0x144000d2,
-0x0a204d40,
+0x0a2046b0,
 0x40000e04,
 0x1440002d,
 0x06000004,
-0x0a804bc0,
+0x0a804530,
 0x05800d40,
-0x0ae04ac0,
-0x0a204bf0,
-0x0a004b70,
+0x0ae04430,
+0x0a204560,
+0x0a0044e0,
 0x042004d2,
 0x1440004d,
-0x0a204bf0,
-0x0a204d40,
+0x0a204560,
+0x0a2046b0,
 0x06000002,
-0x0a804b70,
+0x0a8044e0,
 0x1440002d,
 0x00000e04,
 0x05800d40,
-0x0ac04bc0,
-0x0a204bf0,
+0x0ac04530,
+0x0a204560,
 0x003ffefe,
 0x40800905,
 0x048ffeff,
 0x9d03a950,
 0x08200000,
 0x04a0012d,
-0x0a201550,
-0x0a004b70,
-0x16014e46,
+0x0a201690,
+0x0a0044e0,
+0x16013bc6,
 0x40800605,
 0x048002ff,
 0x413ffefe,
 0x144000d3,
-0x16002ace,
+0x16002a6e,
 0x9e0e0260,
 0x12000155,
 0x420005ee,
@@ -1244,19 +1139,19 @@
 0x40000403,
 0x04c001d7,
 0x06000007,
-0x4a804e30,
+0x4a8047a0,
 0x16000017,
 0x00001604,
 0x06000004,
-0x0a804f50,
+0x0a8048c0,
 0x40001405,
 0x048001dd,
 0x01000e04,
 0x01000c05,
-0x0a004ea0,
+0x0a004810,
 0x00001204,
 0x06000004,
-0x0a804f50,
+0x0a8048c0,
 0x40001005,
 0x048001dd,
 0x01000e04,
@@ -1266,11 +1161,11 @@
 0x16000005,
 0x40800a04,
 0x05c00630,
-0x0a804f40,
+0x0a8048b0,
 0x12000233,
 0x9e0e0530,
 0x9d140550,
-0x0a004f50,
+0x0a0048c0,
 0x01800017,
 0x08200000,
 0x048008ff,
@@ -1296,17 +1191,17 @@
 0x01c00127,
 0x01c0012b,
 0x9c018201,
-0x98805050,
+0x988049c0,
 0x04800633,
 0x1440001d,
 0x00000034,
 0x04802833,
 0x01c00124,
-0x98805100,
-0x1602e9ca,
+0x98804a70,
+0x1602e8ca,
 0x16002102,
 0x408000a4,
-0x1602eccd,
+0x1602ebcd,
 0x408001a5,
 0x16000007,
 0x9e0e0220,
@@ -1326,7 +1221,7 @@
 0x408002d6,
 0x04500944,
 0x410000d7,
-0x1602ed0a,
+0x1602ec0a,
 0x408003d9,
 0x12000455,
 0x410002d7,
@@ -1345,8 +1240,8 @@
 0x04500944,
 0x12000855,
 0x04500544,
-0x1602dc8a,
-0x1602dccb,
+0x1602db8a,
+0x1602dbcb,
 0x12000922,
 0x04500244,
 0x12000a88,
@@ -1360,14 +1255,14 @@
 0x16000005,
 0x16000006,
 0x06000008,
-0x0aa05500,
+0x0aa04e70,
 0x16000015,
 0x000002a8,
 0x06000009,
-0x0aa05540,
+0x0aa04eb0,
 0x16000016,
 0x000002b9,
-0x1602d0c2,
+0x1602cf42,
 0x410000a8,
 0x12000166,
 0x410000b9,
@@ -1376,12 +1271,12 @@
 0x1602c90d,
 0x41800027,
 0x06000004,
-0x0aa05630,
+0x0aa04fa0,
 0x06000005,
-0x0aa056b0,
+0x0aa05020,
 0x06000001,
-0x0aa05740,
-0x0a005830,
+0x0aa050b0,
+0x0a0051a0,
 0x160000a8,
 0x400000d6,
 0x12000c88,
@@ -1389,7 +1284,7 @@
 0x07800000,
 0x06000005,
 0x9d180078,
-0x0a805720,
+0x0a805090,
 0x160000c8,
 0x400000d6,
 0x12000c88,
@@ -1398,7 +1293,7 @@
 0x07800000,
 0x9d180078,
 0x06000001,
-0x0a8057b0,
+0x0a805120,
 0x160000d8,
 0x400000d6,
 0x12000c88,
@@ -1407,7 +1302,7 @@
 0x07800000,
 0x9d180078,
 0x16000903,
-0x160010a9,
+0x16000f99,
 0x16000016,
 0x9e0e0530,
 0x16000007,
@@ -1422,7 +1317,7 @@
 0x06000000,
 0x00000049,
 0x16000005,
-0x0a8058d0,
+0x0a805240,
 0x04200959,
 0x160ffff6,
 0x05800590,
@@ -1452,15 +1347,15 @@
 0x013ffcfa,
 0x413ffefb,
 0x04803322,
-0x1602e145,
-0x16000efd,
+0x1602e045,
+0x16000ded,
 0x00000454,
 0x00000856,
 0x9c0768d0,
 0x01c00124,
 0x01c00126,
 0x40000087,
-0x16002b49,
+0x16002b89,
 0x0000028d,
 0x40000c54,
 0x12000299,
@@ -1469,7 +1364,7 @@
 0x0180012d,
 0x9e0e0490,
 0x41400224,
-0x16002b58,
+0x16002b98,
 0x41400226,
 0x12000288,
 0x9c100480,
@@ -1477,7 +1372,7 @@
 0x9e0e0580,
 0x9e010080,
 0xdc1005c0,
-0x1600064d,
+0x160005fd,
 0x9f03e0b0,
 0x01400229,
 0x9e0080c0,
@@ -1485,13 +1380,13 @@
 0x9c01ead0,
 0x01400225,
 0x41400226,
-0x16000673,
+0x16000623,
 0x9e090200,
 0x04800122,
 0x9c029c30,
 0x128002bb,
 0x01c0012b,
-0x160005fd,
+0x160005ad,
 0x9e088400,
 0x07800000,
 0x9c01ead0,
@@ -1514,15 +1409,15 @@
 0x128002bb,
 0x01c0012b,
 0x04800222,
-0x1602df45,
-0x16000f1d,
+0x1602de45,
+0x16000e0d,
 0x00000454,
 0x00000856,
 0x9c0768d0,
 0x01c00124,
 0x01c00126,
 0x40000087,
-0x16002b69,
+0x16002ba9,
 0x0000028d,
 0x40000c54,
 0x12000299,
@@ -1531,7 +1426,7 @@
 0x0180012d,
 0x9e0e0490,
 0x41400224,
-0x16002b78,
+0x16002bb8,
 0x41400226,
 0x12000288,
 0x9c100480,
@@ -1546,7 +1441,7 @@
 0x0140022a,
 0x9c01ead0,
 0x01400225,
-0x160005a3,
+0x16000553,
 0x01400226,
 0x9e090200,
 0x9c029c30,
@@ -1575,20 +1470,20 @@
 0x07800000,
 0x06000033,
 0x9e0e8220,
-0x0aa062a0,
+0x0aa05c10,
 0x9c1d0004,
 0x9c1d0044,
 0x07800000,
 0x9d0c0210,
-0x0a006350,
+0x0a005cc0,
 0x06000023,
-0x0aa06300,
+0x0aa05c70,
 0x9c1d0004,
 0x9d040004,
 0x9d100200,
-0x0a006350,
+0x0a005cc0,
 0x06000043,
-0x0aa06350,
+0x0aa05cc0,
 0x9c180024,
 0x9d040004,
 0x9d180200,
@@ -1596,7 +1491,112 @@
 0x05c00740,
 0x17800644,
 0x01000004,
-0x0a0061c0,
+0x0a005b30,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
 0x00000000,
 0x00000000,
 0x00000000,
@@ -2118,10 +2118,6 @@
 0x00001000,
 0x00001001,
 0x00001001,
-0x00001000,
-0x00001000,
-0x00001001,
-0x00001001,
 0x00001001,
 0x00001001,
 0x00001001,
@@ -2131,7 +2127,6 @@
 0x00001000,
 0x00001000,
 0x00001000,
-0x00001001,
 0x00001000,
 0x00000000,
 0x00000000,
@@ -2145,21 +2140,21 @@
 0x00001001,
 0x00000001,
 0x00001000,
-0x00002e34,
+0x00002e24,
 0x00001000,
 0x00001001,
 0x00000001,
 0x00001000,
-0x00002e34,
+0x00002e24,
 0x00151000,
-0x00002e34,
-0x00002e34,
+0x00002e24,
+0x00002e24,
 0x00151000,
 0x00001000,
 0x00001001,
 0x00000001,
 0x00001000,
-0x00002e74,
+0x00002e64,
 0x00001000,
 0x00001001,
 0x00001000,
@@ -2243,28 +2238,18 @@
 0x00001000,
 0x00001001,
 0x00001001,
-0x00001000,
-0x00001000,
-0x00001081,
-0x00001001,
-0x00001001,
-0x00001001,
-0x00001001,
-0x000000c6,
 0x00001041,
 0x00001000,
 0x00001041,
 0x00001001,
 0x00001001,
-0x00000000,
-0x00001001,
 0x00001000,
 0x00001051,
 0x00001000,
 0x00001001,
 0x00001051,
 0x00001001,
-0x000000d4,
+0x000000c5,
 0x00001000,
 0x00001001,
 0x00001001,
@@ -2283,8 +2268,6 @@
 0x00001091,
 0x00001091,
 0x00001091,
-0x00001091,
-0x00000000,
 0x00000000,
 0x00000000,
 0x00000000,
@@ -2356,6 +2339,27 @@
 0x00001001,
 0x00000000,
 0x00011001,
+0x00001000,
+0x00151000,
+0x00001001,
+0x00000001,
+0x00001000,
+0x00002e24,
+0x00002e24,
+0x00001000,
+0x00151000,
+0x00151000,
+0x00001000,
+0x00001000,
+0x00001000,
+0x00001000,
+0x00001001,
+0x00000001,
+0x00001000,
+0x00002e24,
+0x00002e24,
+0x00000000,
+0x00000000,
 0x00000000,
 0x00000008,
 0x00700001,
@@ -3168,84 +3172,6 @@
 0x00651dd9,
 0x00f5c6b6,
 0x000b0ede,
-0x00666669,
-0x00999999,
-0x00000003,
-0x0008c704,
-0x00000003,
-0x00f4b6f8,
-0x00000003,
-0x000fcca4,
-0x00000003,
-0x00e5aaf0,
-0x00000003,
-0x004eff30,
-0x007c1680,
-0x004eff30,
-0x00000003,
-0x00e5aaf0,
-0x00000003,
-0x000fcca4,
-0x00000003,
-0x00f4b6f8,
-0x00000003,
-0x0008c704,
-0x00000003,
-0x00028e88,
-0x00b46d8b,
-0x00051de8,
-0x00183def,
-0x0004d91c,
-0x00183def,
-0x00051de8,
-0x00b46d8b,
-0x00028e88,
-0x00fd245c,
-0x0022e2b4,
-0x009f3a1d,
-0x0009cf9e,
-0x00eb653a,
-0x001cb806,
-0x00e5ac1e,
-0x000ea2c6,
-0x00000003,
-0x0008c704,
-0x00000003,
-0x00f4b6f8,
-0x00000003,
-0x000fcca4,
-0x00000003,
-0x00e5aaf0,
-0x00000003,
-0x004eff30,
-0x007c1680,
-0x004eff30,
-0x00000003,
-0x00e5aaf0,
-0x00000003,
-0x000fcca4,
-0x00000003,
-0x00f4b6f8,
-0x00000003,
-0x0008c704,
-0x00000003,
-0x00028e88,
-0x00b46d8b,
-0x00051de8,
-0x00183def,
-0x0004d91c,
-0x00183def,
-0x00051de8,
-0x00b46d8b,
-0x00028e88,
-0x00fd245c,
-0x0022e2b4,
-0x009f3a1d,
-0x0009cf9e,
-0x00eb653a,
-0x001cb806,
-0x00e5ac1e,
-0x000ea2c6,
 0x00000003,
 0x00000003,
 0x0002c197,
@@ -3390,9 +3316,13 @@
 0x000fea26,
 0x003c0001,
 0x00080002,
-0x00000000,
+0x007f0001,
 0x00040002,
 0x00040002,
+0x00000020,
+0x003fffe0,
+0x00000020,
+0x003fffe0,
 0x00000000,
 0x00000000,
 0x00000000,
@@ -3434,7 +3364,6 @@
 0x00000000,
 0x00000000,
 0x00000000,
-
 0x00000000,
 0x00000000,
 0x00000000,
@@ -3550,32 +3479,30 @@
 0x00000000,
 0x00000000,
 0x00000000,
-0x00008800,
-0x037C0301,
-0x03470387,
-0x00430351,
-0x038E003A,
-0x039503AD,
-0x01B40332,
-0x03BA0498,
-0x02F304F6,
-0x020201D6,
-0x031402C1,
-0x01A400B4,
-0x0221016D,
-0x06180213,
-0x035C05A2,
-0x00C40002,
-0x00D400CA,
-0x00E500DB,
-0x00F900F2,
-0x01080110,
-0x01170100,
-0x01490132,
-0x016A0003,
-0x016C016B,
-0x03CD0477,
-0x00000155,
+0x00009060,
+0x03130298,
+0x02DE031E,
+0x004302E8,
+0x0325003A,
+0x032C0344,
+0x042F02C9,
+0x048D0351,
+0x018100CA,
+0x026C01AD,
+0x00B402AB,
+0x01BE01CC,
+0x053905AF,
+0x000202F3,
+0x00DE00D8,
+0x00EF00E8,
+0x010600F9,
+0x0124010D,
+0x0114011C,
+0x0146012B,
+0x0003015D,
+0x017F017E,
+0x040E0180,
+0x01690364,
 0x00000000,
 0x00000000,
 0x00000000,
@@ -5728,101 +5655,99 @@
 0x00000000,
 0x00000000,
 0x00000000,
-0x002E0012,
-0x00A200A1,
-0x00A400A3,
 0x00000000,
-0x002E0012,
-0x00A800A7,
-0x00AA00A9,
 0x00000000,
-0x00BE0012,
-0x00B000AF,
-0x00A500B1,
+0x00B80011,
+0x009D009C,
+0x009F009E,
 0x00000000,
-0x00BE0012,
-0x00B600B5,
-0x00B800B7,
+0x002E0011,
+0x00A300A2,
+0x00A500A4,
 0x00000000,
-0x00BF0012,
-0x00B300B2,
-0x00A600B4,
+0x00B90011,
+0x00AB00AA,
+0x00A000AC,
 0x00000000,
-0x00BF0012,
-0x00BA00B9,
-0x00BC00BB,
+0x00B90011,
+0x00B100B0,
+0x00B300B2,
 0x00000000,
-0x005A0017,
-0x005B0003,
-0x005E005C,
+0x00BA0011,
+0x00AE00AD,
+0x00A100AF,
+0x00000000,
+0x00BA0011,
+0x00B500B4,
+0x00B700B6,
+0x00000000,
+0x00550014,
+0x00560003,
+0x00590057,
 0x00000013,
-0x005A0017,
-0x005B0006,
-0x0065005C,
+0x00550014,
+0x00560006,
+0x00600057,
 0x00000013,
-0x00680017,
-0x0069011C,
-0x006C006A,
+0x00630014,
+0x0064010B,
+0x00670065,
 0x00000012,
-0x005F0018,
-0x00600002,
-0x00630061,
+0x005A0015,
+0x005B0002,
+0x005E005C,
 0x00000013,
-0x005F0018,
-0x00600005,
-0x00660061,
+0x005A0015,
+0x005B0005,
+0x0061005C,
 0x00000013,
-0x0001000B,
-0x00CC00C0,
-0x00E90001,
-0x00000000,
-0x01140003,
-0x00010092,
-0x00940001,
-0x00000000,
-0x01150003,
-0x00010093,
-0x00950001,
-0x00000000,
-0x01160003,
-0x00010118,
-0x00940001,
-0x00000000,
-0x01160003,
-0x00010119,
-0x00950001,
-0x00000000,
-0x00510003,
-0x00010092,
-0x00940001,
-0x00000000,
-0x00510003,
-0x00010093,
-0x00950001,
+0x01030003,
+0x0001008D,
+0x008F0001,
+0x00000000,
+0x01040003,
+0x0001008E,
+0x00900001,
+0x00000000,
+0x01050003,
+0x0001012A,
+0x008F0001,
+0x00000000,
+0x01050003,
+0x0001012B,
+0x00900001,
+0x00000000,
+0x004C0003,
+0x0001008D,
+0x008F0001,
+0x00000000,
+0x004C0003,
+0x0001008E,
+0x00900001,
 0x00000000,
 0x0031000A,
-0x0075002F,
-0x00520076,
+0x0070002F,
+0x004D0071,
 0x00000000,
-0x00BE0000,
-0x00AB00BE,
-0x00A000AD,
-0x00000000,
-0x00BF0000,
-0x00AC00BF,
-0x00A000AE,
+0x00B90000,
+0x00A600B9,
+0x009B00A8,
+0x00000000,
+0x00BA0000,
+0x00A700BA,
+0x009B00A9,
 0x00000000,
 0x002F000A,
-0x00CA002F,
-0x00A000CB,
+0x00BD002F,
+0x009B00BE,
 0x00000000,
-0x00010014,
+0x00010013,
 0x00010001,
-0x011F0001,
+0x010E0001,
 0x00000000,
-0x00010014,
+0x00010013,
 0x00010001,
-0x01200001,
+0x010F0001,
 0x00000000,
 0x000D0009,
 0x000F000E,
@@ -5833,104 +5758,104 @@
 0x002C002B,
 0x00000000,
 0x00230000,
-0x007D0023,
-0x00960078,
+0x00780023,
+0x00910073,
 0x00000000,
 0x00030000,
-0x007E0003,
-0x00970079,
+0x00790003,
+0x00920074,
 0x00000000,
 0x00230000,
-0x007F0023,
-0x0098007B,
+0x007A0023,
+0x00930076,
 0x00000000,
 0x00060000,
-0x00800006,
-0x0099007C,
+0x007B0006,
+0x00940077,
 0x00000000,
 0x00280000,
-0x00810114,
-0x00960077,
+0x007C0103,
+0x00910072,
 0x00000000,
-0x00920000,
-0x00820064,
-0x00970079,
+0x008D0000,
+0x007D005F,
+0x00920074,
 0x00000000,
 0x00280000,
-0x00830115,
-0x0098007A,
+0x007E0104,
+0x00930075,
 0x00000000,
-0x00930000,
-0x00840067,
-0x0099007C,
-0x00000000,
-0x01170000,
-0x00850117,
-0x00960078,
-0x00000000,
-0x011A0000,
-0x0086011A,
-0x00970079,
-0x00000000,
-0x01170000,
-0x00870117,
-0x0098007B,
-0x00000000,
-0x011B0000,
-0x0088011B,
-0x0099007C,
+0x008E0000,
+0x007F0062,
+0x00940077,
+0x00000000,
+0x01060000,
+0x00800106,
+0x00910073,
+0x00000000,
+0x01090000,
+0x00810109,
+0x00920074,
+0x00000000,
+0x01060000,
+0x00820106,
+0x00930076,
+0x00000000,
+0x010A0000,
+0x0083010A,
+0x00940077,
 0x00000000,
 0x00300000,
-0x00890116,
-0x00960077,
+0x00840105,
+0x00910072,
 0x00000000,
-0x01180000,
-0x008A0118,
-0x00970079,
+0x012A0000,
+0x00850107,
+0x00920074,
 0x00000000,
 0x00300000,
-0x008B0116,
-0x0098007A,
+0x00860105,
+0x00930075,
 0x00000000,
-0x01190000,
-0x008C0119,
-0x0099007C,
+0x012B0000,
+0x00870108,
+0x00940077,
 0x00000000,
 0x00260000,
-0x008F0051,
-0x00960077,
+0x008A004C,
+0x00910072,
 0x00000000,
-0x00920000,
-0x00900091,
-0x00970079,
+0x008D0000,
+0x008B008C,
+0x00920074,
 0x00000000,
 0x00260000,
-0x008D0051,
-0x0098007A,
+0x0088004C,
+0x00930075,
 0x00000000,
-0x00930000,
-0x008E0091,
-0x0099007C,
+0x008E0000,
+0x0089008C,
+0x00940077,
 0x00000000,
 0x00300000,
-0x0073002E,
-0x00520074,
+0x006E002E,
+0x004D006F,
 0x00000000,
 0x002E0000,
-0x009E00BD,
-0x00A0009F,
+0x009900B8,
+0x009B009A,
 0x00000000,
 0x002E0000,
-0x00C8002E,
-0x00A000C9,
+0x00BB002E,
+0x009B00BC,
 0x00000000,
-0x002F001B,
-0x009C0055,
-0x009B00DF,
-0x00000000,
-0x002E001B,
-0x009A0054,
-0x009B00DF,
+0x002F0018,
+0x00970050,
+0x009600D0,
+0x00000000,
+0x002E0018,
+0x0095004F,
+0x009600D0,
 0x00000000,
 0x002D0007,
 0x00010030,
@@ -5940,81 +5865,81 @@
 0x00010031,
 0x00000018,
 0x00000000,
-0x00DD000C,
+0x00CE000B,
 0x00010001,
-0x00DE0001,
+0x00CF0001,
 0x00000000,
-0x0001000D,
+0x0001000C,
 0x00010001,
-0x00EA0001,
+0x00D90001,
 0x00000000,
-0x0001000D,
+0x0001000C,
 0x00010001,
-0x00EB0001,
+0x00DA0001,
 0x00000000,
-0x0001000D,
+0x0001000C,
 0x00010001,
-0x00EC0001,
+0x00DB0001,
 0x00000000,
-0x0001000D,
+0x0001000C,
 0x00010001,
-0x00ED0001,
+0x00DC0001,
 0x00000000,
-0x0001000D,
+0x0001000C,
 0x00010001,
-0x00EE0001,
+0x00DD0001,
 0x00000000,
-0x0001000D,
+0x0001000C,
 0x00010001,
-0x00EF0001,
+0x00DE0001,
 0x00000000,
-0x0001000D,
+0x0001000C,
 0x00010001,
-0x00F00001,
+0x00DF0001,
 0x00000000,
-0x0001000D,
+0x0001000C,
 0x00010001,
-0x00F10001,
+0x00E00001,
 0x00000000,
-0x0001000D,
+0x0001000C,
 0x00010001,
-0x00F20001,
+0x00E10001,
 0x00000000,
-0x0001000D,
+0x0001000C,
 0x00010001,
-0x00F30001,
+0x00E20001,
 0x00000000,
-0x0001000D,
+0x0001000C,
 0x00010001,
-0x00F40001,
+0x00E30001,
 0x00000000,
-0x0001000D,
+0x0001000C,
 0x00010001,
-0x00F50001,
+0x00E40001,
 0x00000000,
-0x0001000D,
+0x0001000C,
 0x00010001,
-0x00F60001,
+0x00E50001,
 0x00000000,
-0x0001000D,
+0x0001000C,
 0x00010001,
-0x00F70001,
+0x00E60001,
 0x00000000,
-0x0001000D,
+0x0001000C,
 0x00010001,
-0x00F80001,
+0x00E70001,
 0x00000000,
-0x0001000D,
+0x0001000C,
 0x00010001,
-0x00F90001,
+0x00E80001,
 0x00000000,
-0x010A000E,
+0x00F9000D,
 0x00010001,
-0x010B0001,
+0x00FA0001,
 0x00000000,
-0x00200005,
+0x002E0005,
 0x001C0026,
-0x00000021,
+0x0000002F,
 0x00000000,
 0x00290005,
 0x001D002D,
@@ -6029,40 +5954,40 @@
 0x0000001B,
 0x00000000,
 0x00080006,
-0x006E006D,
+0x00690068,
 0x0000001E,
 0x00000000,
 0x00080006,
-0x006E0028,
+0x00690028,
 0x0000001F,
 0x00000000,
-0x00CF0001,
-0x00D70056,
-0x00000130,
+0x00C00001,
+0x00C80051,
+0x0000011F,
 0x00000000,
 0x00030004,
 0x000C0023,
-0x00940001,
+0x008F0001,
 0x00000000,
 0x00060004,
 0x000C0023,
-0x00950001,
+0x00900001,
 0x00000000,
-0x011A0004,
-0x000C0117,
-0x00940001,
-0x00000000,
-0x011B0004,
-0x000C0117,
-0x00950001,
+0x01090004,
+0x000C0106,
+0x008F0001,
+0x00000000,
+0x010A0004,
+0x000C0106,
+0x00900001,
 0x00000000,
 0x002F0004,
-0x010D0055,
-0x010C0001,
+0x00FC0050,
+0x00FB0001,
 0x00000000,
 0x002E0004,
-0x010D0054,
-0x010C0001,
+0x00FC004F,
+0x00FB0001,
 0x00000000,
 0x00400002,
 0x00420041,
@@ -6080,32 +6005,32 @@
 0x003A0039,
 0x00000015,
 0x00000000,
-0x006D0002,
-0x0070006F,
+0x00680002,
+0x006B006A,
 0x00000019,
 0x00000000,
-0x01170002,
+0x01060002,
 0x003F003E,
 0x00000019,
 0x00000000,
 0x00080002,
-0x004A0049,
+0x00460045,
 0x00000019,
 0x00000000,
 0x002F0002,
-0x00BF00BE,
+0x00BA00B9,
 0x00000019,
 0x00000000,
-0x00DC0002,
-0x00D600CE,
+0x00CD0002,
+0x00C700BF,
 0x00000019,
 0x00000000,
-0x011C0002,
-0x011E011D,
+0x010B0002,
+0x010D010C,
 0x00000019,
 0x00000000,
-0x00440002,
-0x00460045,
+0x00260002,
+0x00440043,
 0x00000019,
 0x00000000,
 0x003B0002,
@@ -6114,94 +6039,123 @@
 0x00000000,
 0x00010008,
 0x00010027,
-0x00570001,
+0x00520001,
 0x00000000,
 0x00010008,
 0x00010022,
-0x00580001,
+0x00530001,
 0x00000000,
-0x00CE0011,
-0x00D000CF,
-0x00D500D1,
+0x00BF0010,
+0x00C100C0,
+0x00C600C2,
 0x00000000,
-0x00D60010,
-0x00D800D7,
-0x00DB00D9,
+0x00C7000F,
+0x00C900C8,
+0x00CC00CA,
 0x00000000,
-0x00010014,
+0x00010013,
 0x00010001,
-0x01210001,
+0x01100001,
 0x00000000,
-0x00010014,
+0x00010013,
 0x00010001,
-0x01220001,
+0x01110001,
 0x00000000,
-0x00010014,
+0x00010013,
 0x00010001,
-0x01230001,
+0x01120001,
 0x00000000,
-0x00010014,
+0x00010013,
 0x00010001,
-0x01240001,
+0x01130001,
 0x00000000,
-0x00010014,
+0x00010013,
 0x00010001,
-0x01250001,
+0x01140001,
 0x00000000,
-0x00010014,
+0x00010013,
 0x00010001,
-0x01260001,
+0x01150001,
 0x00000000,
-0x00010014,
+0x00010013,
 0x00010001,
-0x01270001,
+0x01160001,
 0x00000000,
-0x00010014,
+0x00010013,
 0x00010001,
-0x01280001,
+0x01170001,
 0x00000000,
-0x0001000F,
+0x0001000E,
 0x00010001,
 0x00010001,
 0x00000000,
-0x00010014,
+0x00010013,
 0x00010001,
-0x01290001,
+0x01180001,
 0x00000000,
-0x00010014,
+0x00010013,
 0x00010001,
-0x012A0001,
+0x01190001,
 0x00000000,
-0x00010014,
+0x00010013,
 0x00010001,
-0x012B0001,
+0x011A0001,
 0x00000000,
-0x004C0013,
-0x00E00040,
-0x00E300E1,
+0x00480012,
+0x00D10040,
+0x00D400D2,
 0x00000000,
-0x004D0013,
-0x00E50032,
-0x00E400E2,
+0x00490012,
+0x00D60032,
+0x00D500D3,
 0x00000000,
-0x004E0013,
-0x00E60035,
-0x00E400E2,
+0x004A0012,
+0x00D70035,
+0x00D500D3,
 0x00000000,
-0x004F0013,
-0x00E70038,
-0x00E400E2,
+0x004B0012,
+0x00D80038,
+0x00D500D3,
 0x00000000,
-0x012D0019,
-0x012E0001,
-0x012F0001,
+0x011C0016,
+0x011D0001,
+0x011E0001,
 0x00000000,
-0x0001001A,
+0x00010017,
 0x00010001,
 0x00000001,
 0x00000000,
+0x01200014,
+0x01220109,
+0x01250123,
+0x00000013,
+0x01200014,
+0x0122010A,
+0x01260123,
+0x00000013,
+0x01270015,
+0x012E012C,
+0x0131012F,
+0x00000013,
+0x01270015,
+0x012E012D,
+0x0132012F,
+0x00000013,
+0x012A0000,
+0x00850128,
+0x00920074,
+0x00000000,
+0x012B0000,
+0x00870129,
+0x00940077,
 0x00000000,
+0x00010013,
+0x00010001,
+0x01330001,
 0x00000000,
+0x00010013,
+0x00010001,
+0x01340001,
 0x00000000,
 0x00000000,
 0x00000000,
@@ -6216,10 +6170,14 @@
 0x00000000,
 0x00000000,
 0x00000000,
+0x00000010,
 0x00000000,
 0x00000000,
+0x000022E8,
 0x00000000,
 0x00000000,
+0x00000018,
+0x000022E0,
 0x00000000,
 0x00000000,
 0x00000000,
@@ -6241,14 +6199,9 @@
 0x00000000,
 0x00000000,
 0x00000000,
-0x00000010,
-0x00000000,
 0x00000000,
-0x000022E8,
 0x00000000,
 0x00000000,
-0x00000018,
-0x000022E0,
 0x00000000,
 0x00000000,
 0x00000000,
@@ -6292,40 +6245,12 @@
 0x00000000,
 0x00000000,
 0x00000000,
+0x0000000A,
 0x00000000,
 0x00000000,
 0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x0000000A,
-0x00000000,
-0x00000000,
-0x00000000,
-0x7FFF7FFF,
-0x7FFF7FFF,
+0x7FFF7FFF,
+0x7FFF7FFF,
 0x00000000,
 0x00000000,
 0x00000000,
@@ -6351,14 +6276,14 @@
 0x003FFFF0,
 0x00000000,
 0x00400000,
-0x01970184,
-0x01BD01AA,
-0x01E301D0,
-0x020901F6,
-0x022F021C,
-0x02550242,
-0x027B0268,
-0x02A1028E,
+0x019B0188,
+0x01C101AE,
+0x01E701D4,
+0x020D01FA,
+0x02330220,
+0x02590246,
+0x027F026C,
+0x02A50292,
 0x00000004,
 0x00000001,
 0x00000000,
@@ -6367,14 +6292,14 @@
 0x003FFFF0,
 0x00000000,
 0x00400000,
-0x02CA02B8,
-0x02EE02DC,
-0x03120300,
-0x03360324,
-0x035A0348,
-0x037E036C,
-0x03A20390,
-0x03C603B4,
+0x02CE02BC,
+0x02F202E0,
+0x03160304,
+0x033A0328,
+0x035E034C,
+0x03820370,
+0x03A60394,
+0x03CA03B8,
 0x00008363,
 0x00000428,
 0x00000000,
@@ -6391,41 +6316,41 @@
 0x00000000,
 0x00000000,
 0x00000000,
+0x000CE13D,
+0x00006845,
 0x00008363,
 0x00000428,
+0x000CE13D,
+0x00006845,
 0x00008363,
 0x00000428,
-0x00008363,
-0x00000428,
-0x00008363,
-0x00000428,
-0x00008363,
-0x00000428,
-0x25882738,
-0x00002748,
-0x25782718,
-0x00002728,
-0x298826C8,
-0x000026B8,
-0x297826A8,
-0x00002698,
-0x256826F8,
-0x00002708,
-0x255826D8,
-0x000026E8,
-0x29682648,
-0x00002638,
-0x29582628,
-0x00002618,
-0x25482678,
+0x000CE13D,
+0x00006845,
+0x25782728,
+0x00002738,
+0x25682708,
+0x00002718,
+0x297826B8,
+0x000026A8,
+0x29682698,
 0x00002688,
-0x25382658,
-0x00002668,
-0x27682488,
+0x255826E8,
+0x000026F8,
+0x254826C8,
+0x000026D8,
+0x29582638,
+0x00002628,
+0x29482618,
+0x00002608,
+0x25382668,
+0x00002678,
+0x25282648,
+0x00002658,
+0x27582488,
 0x00002478,
-0x25A824A8,
+0x259824A8,
 0x00002498,
-0x25B824C8,
+0x25A824C8,
 0x000024B8,
 0x00000000,
 0x00000000,
@@ -7240,18 +7165,6 @@
 0x00000000,
 0x00000000,
 0x00000000,
-0x00003900,
-0x00003900,
-0x00003900,
-0x00003C17,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
 0x00000000,
 0x00000000,
 0x00000000,
@@ -7298,14 +7211,30 @@
 0x00000000,
 0x00000000,
 0x00000000,
+0x00003900,
+0x00003900,
+0x00003900,
+0x00003CBF,
+0x00000004,
+0x00000001,
 0x00000000,
 0x00000000,
 0x00000000,
+0x003FFFF0,
 0x00000000,
+0x00400000,
+0x00000004,
+0x00000001,
 0x00000000,
 0x00000000,
 0x00000000,
+0x003FFFF0,
 0x00000000,
+0x00400000,
+0x254826C8,
+0x00002C08,
+0x255826E8,
+0x00002C18,
 0x00000000,
 0x00000000,
 0x00000000,
@@ -11627,7 +11556,6 @@
 0x00000000,
 0x00000000,
 0x00000000,
-
 0x00000000,
 0x00000000,
 0x00000000,
@@ -19784,298 +19712,287 @@
 0x00000000,
 0x00000000,
 0x00000000,
-0x00044B03,
+0x00041503,
 0x00000000,
-0x00044E02,
+0x00041802,
 0x00000000,
-0x0006C703,
+0x00066903,
 0x00000000,
-0x00049805,
+0x00046205,
 0x00000000,
-0x00049D04,
+0x00046704,
 0x00000000,
-0x0006C205,
+0x00066405,
 0x00000000,
-0x00017E0C,
+0x0001820C,
 0x00000000,
-0x0004A128,
+0x00046B28,
 0x00000000,
-0x0004F128,
+0x0004BB28,
 0x00000000,
-0x00074F06,
+0x0006F106,
 0x00000000,
-0x00022318,
+0x00022918,
 0x00000000,
-0x00013512,
+0x00013912,
 0x00000000,
-0x00014712,
-0x00013200,
-0x00015724,
-0x00013312,
-0x00014512,
+0x00014B12,
+0x00013600,
+0x00015B24,
+0x00013712,
+0x00014912,
 0x00120024,
-0x00056400,
-0x0001570E,
-0x0001570E,
-0x0001570E,
-0x0001570E,
-0x0001570E,
-
-0x0001570E,
-0x0001570E,
-0x0001570E,
-0x0001570E,
-0x0001570E,
-0x0001570E,
-0x0001570E,
-0x0001570E,
-0x0001570E,
-0x0001570E,
-0x0001570E,
-0x00015A0C,
-0x00016504,
-0x00015A0C,
+0x00057400,
+0x00015B0E,
+0x00015B0E,
+0x00015B0E,
+0x00015B0E,
+0x00015B0E,
+0x00015B0E,
+0x00015B0E,
+0x00015B0E,
+0x00015B0E,
+0x00015B0E,
+0x00015B0E,
+0x00015B0E,
+0x00015B0E,
+0x00015B0E,
+0x00015B0E,
+0x00015B0E,
+0x00015E0C,
 0x00016904,
+0x00015E0C,
+0x00016D04,
 0x00000000,
-0x00016D02,
+0x00017102,
 0x00000000,
-0x00016F02,
-0x0001660C,
-0x00017104,
-0x0001660C,
+0x00017302,
+0x00016A0C,
 0x00017504,
+0x00016A0C,
+0x00017904,
 0x00000000,
-0x00018A0C,
+0x00018E0C,
 0x00000000,
-0x0001960C,
+0x00019A0C,
 0x00000000,
-0x0001720C,
+0x0001760C,
 0x00000000,
-0x0001660C,
+0x00016A0C,
 0x00000000,
-0x00015A0C,
-0x0001660C,
-0x0001720C,
+0x00015E0C,
+0x00016A0C,
+0x0001760C,
 0x00000000,
-0x0001A20C,
+0x0001A60C,
 0x00000000,
-0x0001BA0C,
+0x0001BE0C,
 0x00000000,
-0x0001C60C,
+0x0001CA0C,
 0x00000000,
-0x0001F60C,
-0x00020209,
-0x00020209,
+0x0001FC0C,
+0x00020809,
+0x00020809,
 0x00000000,
-0x00017B09,
+0x00017F09,
 0x000B0009,
 0x00000000,
 0x00000000,
-0x0001AE0C,
-0x00000000,
-0x0006CA0C,
+0x0001B20C,
 0x00000000,
-0x0006D60C,
+0x00066C0C,
 0x00000000,
-0x0006E20C,
+0x0006780C,
 0x00000000,
-0x0006EE0C,
-0x00000000,
-0x00023B0C,
-0x00022318,
-0x00028F0C,
-0x00022318,
-0x00029B0C,
-0x00000000,
-0x0002470C,
-0x00022300,
-0x0002A70C,
-0x00022300,
-0x0002B30C,
-0x00000000,
-0x0002530C,
-0x00022318,
-0x0002BF0C,
-0x00022318,
-0x0002CB0C,
-0x00000000,
-0x0008930C,
-0x00022318,
-0x00089F0C,
-0x00022318,
-0x0008AB0C,
-0x00022318,
-0x0002D70C,
-0x00022318,
-0x0002E30C,
-0x00000000,
-0x00025F0C,
-0x00022318,
-0x0002EF0C,
-0x00022318,
-0x0002FB0C,
-0x00000000,
-0x00026B18,
-0x00000000,
-0x0002830C,
-0x00022318,
-0x0003070C,
-0x00022318,
-0x0003130C,
-0x00022318,
-0x00031F0C,
-0x00022318,
-0x00032B0C,
-0x00022318,
-0x0003370C,
-0x00022318,
-0x0003430C,
-0x00000000,
-0x00034F78,
+0x0006840C,
 0x00000000,
-0x0003C718,
+0x0006900C,
+0x00000000,
+0x0002410C,
+0x00022918,
+0x0002710C,
+0x00022918,
+0x00027D0C,
+0x00000000,
+0x00024D0C,
+0x00022900,
+0x0002890C,
+0x00022900,
+0x0002950C,
+0x00000000,
+0x0002590C,
+0x00022918,
+0x0002A10C,
+0x00022918,
+0x0002AD0C,
+0x00000000,
+0x0008220C,
+0x00022918,
+0x00082E0C,
+0x00022918,
+0x00083A0C,
+0x00022918,
+0x0002B90C,
+0x00022918,
+0x0002C50C,
+0x00000000,
+0x0002650C,
+0x00022918,
+0x0002D10C,
+0x00022918,
+0x0002DD0C,
+0x00022918,
+0x0002E90C,
+0x00022918,
+0x0002F50C,
+0x00022918,
+0x0003010C,
+0x00022918,
+0x00030D0C,
+0x00000000,
+0x00031978,
+0x00000000,
+0x00039118,
 0x00000000,
-0x0003DF18,
+0x0003A918,
 0x00000000,
-0x0003F718,
+0x0003C118,
 0x00000000,
-0x00040F18,
-0x00067D01,
-0x00000202,
+0x0003D918,
 0x00000000,
-0x00043F0C,
+0x0004090C,
 0x000B0019,
 0x00000000,
 0x000B0009,
 0x00000000,
 0x00000000,
-0x00045018,
+0x00041A18,
 0x00000000,
-0x00046818,
+0x00043218,
 0x00000000,
-0x00048018,
-0x000B2DE8,
+0x00044A18,
+0x000B2DD8,
 0x00000000,
-0x000B2DE4,
+0x000B2DD4,
 0x00000000,
-0x000B2DD0,
+0x000B2DC0,
 0x00000000,
 0x00000000,
-0x0004A128,
-0x00028E13,
-0x0002A113,
-0x0004A128,
-0x0002B600,
-0x0002B700,
-0x000B7D00,
-0x005D0002,
+0x00046B28,
+0x00029213,
+0x0002A513,
+0x00046B28,
+0x0002BA00,
+0x0002BB00,
+0x000B7900,
+0x00580002,
 0x00217800,
 0x00000000,
-0x0004C928,
-0x00028E13,
-0x0002A113,
-0x0004C928,
-0x0002B400,
-0x0002B500,
-0x000B8500,
-0x00620002,
+0x00049328,
+0x00029213,
+0x0002A513,
+0x00049328,
+0x0002B800,
+0x0002B900,
+0x000B8100,
+0x005D0002,
 0x00212800,
 0x00000000,
-0x0004C928,
-0x005D0004,
+0x00049328,
+0x00580004,
 0x00217800,
-0x00620004,
+0x005D0004,
 0x00212800,
 0x00000000,
-0x0004C928,
+0x00049328,
 0x00000000,
-0x0004F128,
-0x0003B412,
-0x0003C612,
-0x0004F128,
-0x0003D800,
-0x0003D900,
-0x000B9500,
-0x006B000C,
+0x0004BB28,
+0x0003B812,
+0x0003CA12,
+0x0004BB28,
+0x0003DC00,
+0x0003DD00,
+0x000B9100,
+0x0066000C,
 0x00226800,
 0x00000000,
-0x0005190C,
-0x0001BA0C,
-0x00015A0C,
-0x00000000,
-0x0005250C,
-0x00000000,
-0x0005310C,
-0x00022318,
-0x00053D0C,
-0x00022318,
-0x0005490C,
-0x00056E19,
-0x00056E19,
-0x00000000,
-0x00040C19,
-0x00055519,
-0x00055519,
-0x0003F319,
-0x0003DA19,
-0x00000000,
-0x0004400B,
-0x00000000,
-0x00044B0B,
-0x00000000,
-0x00045607,
-0x00000000,
-0x0004250B,
-0x00000000,
-0x0004300B,
-0x00000000,
-0x00043B05,
-0x0005AB0B,
-0x0005AB0B,
-0x0005B607,
-0x0005B607,
-0x0005BD0B,
-0x0005BD0B,
-0x0005C805,
-0x0005C805,
+0x0004E30C,
+0x0001BE0C,
+0x00015E0C,
+0x00000000,
+0x0004EF0C,
+0x00000000,
+0x0004FB0C,
+0x00022918,
+0x0005070C,
+0x00022918,
+0x0005130C,
+0x00053819,
+0x00053819,
+0x00000000,
+0x00041019,
+0x00051F19,
+0x00051F19,
+0x0003F719,
+0x0003DE19,
+0x00000000,
+0x0004440B,
+0x00000000,
+0x00044F0B,
+0x00000000,
+0x00045A07,
+0x00000000,
+0x0004290B,
+0x00000000,
+0x0004340B,
+0x00000000,
+0x00043F05,
+0x0005750B,
+0x0005750B,
+0x00058007,
+0x00058007,
+0x0005870B,
+0x0005870B,
+0x00059205,
+0x00059205,
+0x0005970B,
+0x0005970B,
+0x0005A207,
+0x0005A207,
+0x0005A90B,
+0x0005A90B,
+0x0005B405,
+0x0005B405,
+0x0005BB0B,
+0x0005BB0B,
+0x0005C607,
+0x0005C607,
 0x0005CD0B,
 0x0005CD0B,
-0x0005D807,
-0x0005D807,
-0x0005DF0B,
-0x0005DF0B,
-0x0005EA05,
-0x0005EA05,
-0x0005F10B,
-0x0005F10B,
-0x0005FC07,
-0x0005FC07,
-0x0006030B,
-0x0006030B,
-0x00060E05,
-0x00060E05,
-0x0006130B,
-0x0006130B,
-0x00061E07,
-0x00061E07,
-0x0006250B,
-0x0006250B,
-0x00063005,
-0x00063005,
-0x0006470B,
-0x0006470B,
-0x00065207,
-0x00065207,
-0x0006350B,
-0x0006350B,
-0x00064005,
-0x00064005,
+0x0005D805,
+0x0005D805,
+0x0005DD0B,
+0x0005DD0B,
+0x0005E807,
+0x0005E807,
+0x0005EF0B,
+0x0005EF0B,
+0x0005FA05,
+0x0005FA05,
+0x0006110B,
+0x0006110B,
+0x00061C07,
+0x00061C07,
+0x0005FF0B,
+0x0005FF0B,
+0x00060A05,
+0x00060A05,
 0x00000000,
-0x00069A28,
+0x00063C28,
 0x00000000,
-0x0005A502,
+0x00056F02,
 0x00000000,
-0x0005A704,
+0x00057104,
 0x00000006,
 0x00000000,
 0x00000003,
@@ -20088,166 +20005,142 @@
 0x00000000,
 0x00030005,
 0x00000000,
-0x0005870F,
-0x0005870F,
+0x0005510F,
+0x0005510F,
 0x000B000F,
-0x00088C00,
-0x0005960F,
-0x0005960F,
+0x0008A400,
+0x0005600F,
+0x0005600F,
 0x00030007,
 0x00000000,
-0x00067F09,
-0x00067F09,
-0x0004AB09,
-0x0004AB09,
+0x00062109,
+0x00062109,
+0x00046109,
+0x00046109,
 0x000B0009,
 0x00000000,
 0x00000000,
-0x00068E02,
-0x00068803,
-0x00068803,
-0x000BA502,
-0x0004B403,
+0x00063002,
+0x00062A03,
+0x00062A03,
+0x000BA102,
+0x00046A03,
 0x00000003,
-0x002E9C00,
+0x002E8C00,
 0x00000003,
-0x002ECC00,
+0x002EBC00,
 0x00000003,
-0x002ED000,
+0x002EC000,
 0x00000000,
-0x00069002,
-0x00068B03,
-0x00068B03,
-0x000BB502,
-0x0004B703,
+0x00063202,
+0x00062D03,
+0x00062D03,
+0x000BB102,
+0x00046D03,
 0x00000003,
-0x002E9E00,
-0x0006FA09,
-0x0006FA09,
-0x00070309,
-0x00070309,
-0x00000000,
-0x0004BA09,
-0x00000000,
-0x0004C309,
-0x00000000,
-0x00069202,
-0x00070C03,
-0x00070C03,
+0x002E8E00,
+0x00069C09,
+0x00069C09,
+0x0006A509,
+0x0006A509,
+0x00000000,
+0x00047009,
+0x00000000,
+0x00047909,
+0x00000000,
+0x00063402,
+0x0006AE03,
+0x0006AE03,
+0x000BB302,
+0x00048203,
+0x00000000,
+0x00063802,
+0x0006B103,
+0x0006B103,
 0x000BB702,
-0x0004CC03,
+0x00048503,
 0x00000000,
-0x00069602,
-0x00070F03,
-0x00070F03,
-0x000BBB02,
-0x0004CF03,
-0x00000000,
-0x00069402,
-0x00071203,
-0x00071203,
-0x000BB902,
-0x0004D203,
+0x00063602,
+0x0006B403,
+0x0006B403,
+0x000BB502,
+0x00048803,
 0x00000003,
-0x002ECE00,
+0x002EBE00,
 0x00000000,
-0x00069802,
-0x00071503,
-0x00071503,
-0x000BBD02,
-0x0004D503,
+0x00063A02,
+0x0006B703,
+0x0006B703,
+0x000BB902,
+0x00048B03,
 0x00000003,
-0x002ED200,
+0x002EC200,
 0x00000000,
-0x0007180C,
-0x00022318,
-0x0007240C,
-0x00022318,
-0x0007300C,
-0x00000000,
-0x00067D01,
-0x00000000,
-0x00067E01,
-0x00065711,
-0x00065711,
-0x00066815,
-0x00066815,
-0x00045D02,
-0x00045F15,
-0x00067E01,
-0x00066815,
-0x00047411,
-0x00067D01,
-0x00C40011,
-0x0000C500,
-0x00073C09,
-0x00073C09,
-0x00000000,
-0x0004DA09,
-0x00074509,
-0x00074509,
-0x0004EC09,
-0x0004E309,
-0x000B6F00,
-0x00074E01,
-0x00002DC0,
-0x00000000,
-0x00000000,
-0x00078706,
-0x00022300,
-0x0007A518,
-0x0007BD0B,
-0x0007BD0B,
-0x00000000,
-0x0004F90B,
-0x00013200,
-0x00078D18,
-0x0007BD0B,
-0x0007BD0B,
-0x0007A518,
-0x00078706,
-0x00D2000B,
-0x0000D300,
-0x00000000,
-0x00075506,
-0x00022318,
-0x00075C18,
-0x0004F504,
-0x00075B00,
-0x00013200,
-0x00077400,
-0x000BB200,
-0x00077512,
-0x00EA00DA,
+0x0006BA0C,
+0x00022918,
+0x0006C60C,
+0x00022918,
+0x0006D20C,
+0x0006DE09,
+0x0006DE09,
+0x00000000,
+0x00049009,
+0x0006E709,
+0x0006E709,
+0x0004A209,
+0x00049909,
+0x00000000,
+0x00072906,
+0x00022900,
+0x00074718,
+0x00075F0B,
+0x00075F0B,
+0x00000000,
+0x0004AF0B,
+0x00013600,
+0x00072F18,
+0x00075F0B,
+0x00075F0B,
+0x00074718,
+0x00072906,
+0x00C3000B,
+0x0000C400,
+0x00000000,
+0x0006F706,
+0x00022918,
+0x0006FE18,
+0x0004AB04,
+0x0006FD00,
+0x00013600,
+0x00071600,
+0x000BAE00,
+0x00071712,
+0x00EA00CB,
 0x000026FF,
 0x00000000,
-0x00074F06,
+0x0006F106,
 0x00000000,
 0x00100020,
-0x000C2CDC,
-0x0000002D,
+0x00F42CDC,
+0x0000002C,
 0x00000000,
-0x0005040F,
-0x0007E013,
-0x0007E013,
+0x0004BA0F,
+0x00078213,
+0x00078213,
 0x00000000,
-0x00051313,
+0x0004C913,
 0x00000000,
-0x00052613,
+0x0004DC13,
 0x00170013,
 0x00000000,
 0x00170013,
 0x00000000,
-0x0007F313,
-0x0007F313,
-0x00080613,
-0x00080613,
-0x00081913,
-0x00081913,
-0x00082C13,
-0x00082C13,
-0x00FA2DC0,
-0x00000000,
+0x00079513,
+0x00079513,
+0x0007A813,
+0x0007A813,
+0x0007BB13,
+0x0007BB13,
 0x00002060,
 0x00000000,
 0x00002088,
@@ -20314,46 +20207,50 @@
 0x00000000,
 0x00000000,
 0x000B2710,
-0x000F00FA,
+0x000F00E9,
 0x00000000,
 0x00000002,
 0x00000000,
 0x00000000,
-0x00013200,
+0x00013600,
+0x00000000,
+0x0001400C,
+0x00000000,
+0x0007CE02,
 0x00000000,
-0x00013C0C,
+0x0007D004,
 0x00000000,
-0x00083F02,
+0x0007D406,
 0x00000000,
-0x00084104,
+0x0007DA0C,
 0x00000000,
-0x00084506,
+0x0007E648,
 0x00000000,
-0x00084B0C,
+0x0003F10C,
 0x00000000,
-0x00085748,
+0x0003FD0C,
 0x00000000,
-0x0004270C,
+0x0001D60C,
 0x00000000,
-0x0004330C,
+0x0001E20C,
 0x00000000,
-0x0001D20C,
+0x0001EE02,
 0x00000000,
-0x0001DE0C,
+0x0001F104,
 0x00000000,
-0x0001EA02,
+0x0001F602,
 0x00000000,
-0x0001EC04,
+0x0001F804,
 0x00000000,
-0x0001F002,
+0x0007FE0C,
+0x00022918,
+0x00080A0C,
+0x00022918,
+0x0008160C,
+0x00002EEC,
 0x00000000,
-0x0001F204,
+0x00002EF4,
 0x00000000,
-0x00086F0C,
-0x00022318,
-0x00087B0C,
-0x00022318,
-0x0008870C,
 0x00002EFC,
 0x00000000,
 0x00002F04,
@@ -20376,20 +20273,58 @@
 0x00000000,
 0x00002F4C,
 0x00000000,
-0x00002F54,
-0x00000000,
-0x00002F5C,
-0x00000000,
 0x00000000,
 0x0008B800,
 0x00000000,
 0x000E4000,
 0x0008B800,
-0x00013200,
-0x00003C18,
+0x00013600,
+0x00003CC0,
+0x00000000,
+0x0004F200,
+0x0004F201,
+0x00000000,
+0x00084728,
+0x00000000,
+0x00084728,
+0x00029213,
+0x0002A513,
+0x00084728,
+0x0004F400,
+0x0004F500,
+0x000F3400,
+0x00240002,
+0x0020B001,
+0x00240004,
+0x0020B001,
+0x00000000,
+0x00086F28,
+0x00000000,
+0x00086F28,
+0x00000000,
+0x00086F28,
+0x00000000,
+0x00089702,
+0x00000000,
+0x00089904,
+0x00000000,
+0x0001EE03,
+0x00000000,
+0x0001F105,
+0x00029213,
+0x0002A513,
+0x00086F28,
+0x0004F600,
+0x0004F700,
+0x000F3C00,
+0x00300002,
+0x0021F001,
+0x00300004,
+0x0021F001,
+0x00003D10,
+0x00000000,
+0x00003D18,
 0x00000000,
-0x00053C00,
-0x00053C01,
 0x00000000,
 0x00000000,
 0x00000000,
@@ -23350,6 +23285,7 @@
 0x00000000,
 0x00000000,
 0x00000000,
+0x0000001B,
 0x00000000,
 0x00000000,
 0x00000000,
@@ -23401,23 +23337,41 @@
 0x00000000,
 0x00000000,
 0x00000000,
+0x00000003,
 0x00000000,
+0x00000003,
 0x00000000,
+0x00000003,
 0x00000000,
+0x00000006,
 0x00000000,
+0x00000006,
 0x00000000,
+0x00000006,
 0x00000000,
+0x00000009,
 0x00000000,
+0x00000009,
 0x00000000,
+0x00000009,
 0x00000000,
+0x00000005,
 0x00000000,
+0x00000005,
 0x00000000,
+0x00000005,
 0x00000000,
+0x00000007,
 0x00000000,
+0x00000007,
 0x00000000,
+0x00000007,
 0x00000000,
+0x00000008,
 0x00000000,
+0x00000008,
 0x00000000,
+0x00000008,
 0x00000000,
 0x00000000,
 0x00000000,
@@ -23546,93 +23500,12 @@
 0x00000000,
 0x00000000,
 0x00000000,
-0x0000001B,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000000,
-0x00000003,
-0x00000000,
-0x00000003,
-0x00000000,
-0x00000003,
-0x00000000,
-0x00000006,
-0x00000000,
-0x00000006,
-0x00000000,
-0x00000006,
-0x00000000,
-0x00000009,
-0x00000000,
-0x00000009,
-0x00000000,
-0x00000009,
-0x00000000,
-0x00000005,
-0x00000000,
-0x00000005,
-0x00000000,
-0x00000005,
 0x00000000,
-0x00000007,
 0x00000000,
-0x00000007,
 0x00000000,
-0x00000007,
 0x00000000,
-0x00000008,
 0x00000000,
-0x00000008,
 0x00000000,
-0x00000008,
 0x00000000,
 0x00000000,
 0x00000000,
@@ -23830,12 +23703,102 @@
 0x00000000,
 0x00000000,
 0x00000000,
+0x00E66666,
+0x00199999,
+0x00199999,
+0x00199999,
 0x00000000,
 0x00000000,
+0x00E66666,
+0x00E66666,
+0x00FFFFFF,
+0x00FFFFFF,
+0x00199999,
+0x00199999,
+0x00F33333,
+0x000CCCCC,
+0x00F33333,
+0x00F33333,
+0x00199999,
+0x00E66666,
+0x00F33333,
+0x00F33333,
+0x00F33333,
+0x000CCCCC,
+0x00199999,
+0x00199999,
+0x000CCCCC,
+0x00162B95,
+0x00F33333,
+0x000CCCCC,
+0x00E66666,
 0x00000000,
+0x00F33333,
+0x00F33333,
+0x000CCCCC,
+0x00E9D46A,
+0x00199999,
+0x00E66666,
+0x000CCCCC,
+0x00E9D46A,
+0x00F33333,
+0x00F33333,
+0x00E66666,
+0x00FFFFFF,
+0x00F33333,
+0x000CCCCC,
+0x000CCCCC,
+0x00162B95,
+0x00199999,
+0x00199999,
+0x00162B95,
+0x0018BA4A,
+0x000CCCCC,
+0x00162B95,
 0x00000000,
+0x00121A18,
+0x00F33333,
+0x000CCCCC,
+0x00E9D46A,
+0x0006A032,
+0x00E66666,
 0x00000000,
+0x00E9D46A,
+0x00F95FCD,
+0x00F33333,
+0x00F33333,
+0x00FFFFFF,
+0x00EDE5E7,
+0x000CCCCC,
+0x00E9D46A,
+0x00162B95,
+0x00E745B5,
+0x00199999,
+0x00E66666,
+0x00162B95,
+0x00E745B5,
+0x000CCCCC,
+0x00E9D46A,
 0x00000000,
+0x00EDE5E7,
+0x00F33333,
+0x00F33333,
+0x00E9D46A,
+0x00F95FCF,
+0x00E66666,
+0x00FFFFFF,
+0x00E9D46A,
+0x0006A032,
+0x00F33333,
+0x000CCCCC,
+0x00FFFFFF,
+0x00121A18,
+0x000CCCCC,
+0x00162B95,
+0x00162B95,
+0x0018BA4A,
+0x00199999,
+0x00199999,
 0x00000000,
 0x00000000,
 0x00000000,
@@ -23980,6 +23943,8 @@
 0x00000000,
 0x00000000,
 0x00000000,
+0x00010000,
+0x00010000,
 0x00000000,
 0x00000000,
 0x00000000,
@@ -24002,102 +23967,12 @@
 0x00000000,
 0x00000000,
 0x00000000,
-0x00E66666,
-0x00199999,
-0x00199999,
-0x00199999,
 0x00000000,
 0x00000000,
-0x00E66666,
-0x00E66666,
-0x00FFFFFF,
-0x00FFFFFF,
-0x00199999,
-0x00199999,
-0x00F33333,
-0x000CCCCC,
-0x00F33333,
-0x00F33333,
-0x00199999,
-0x00E66666,
-0x00F33333,
-0x00F33333,
-0x00F33333,
-0x000CCCCC,
-0x00199999,
-0x00199999,
-0x000CCCCC,
-0x00162B95,
-0x00F33333,
-0x000CCCCC,
-0x00E66666,
 0x00000000,
-0x00F33333,
-0x00F33333,
-0x000CCCCC,
-0x00E9D46A,
-0x00199999,
-0x00E66666,
-0x000CCCCC,
-0x00E9D46A,
-0x00F33333,
-0x00F33333,
-0x00E66666,
-0x00FFFFFF,
-0x00F33333,
-0x000CCCCC,
-0x000CCCCC,
-0x00162B95,
-0x00199999,
-0x00199999,
-0x00162B95,
-0x0018BA4A,
-0x000CCCCC,
-0x00162B95,
 0x00000000,
-0x00121A18,
-0x00F33333,
-0x000CCCCC,
-0x00E9D46A,
-0x0006A032,
-0x00E66666,
 0x00000000,
-0x00E9D46A,
-0x00F95FCD,
-0x00F33333,
-0x00F33333,
-0x00FFFFFF,
-0x00EDE5E7,
-0x000CCCCC,
-0x00E9D46A,
-0x00162B95,
-0x00E745B5,
-0x00199999,
-0x00E66666,
-0x00162B95,
-0x00E745B5,
-0x000CCCCC,
-0x00E9D46A,
 0x00000000,
-0x00EDE5E7,
-0x00F33333,
-0x00F33333,
-0x00E9D46A,
-0x00F95FCF,
-0x00E66666,
-0x00FFFFFF,
-0x00E9D46A,
-0x0006A032,
-0x00F33333,
-0x000CCCCC,
-0x00FFFFFF,
-0x00121A18,
-0x000CCCCC,
-0x00162B95,
-0x00162B95,
-0x0018BA4A,
-0x00199999,
-0x00199999,
 0x00000000,
 0x00000000,
 0x00000000,
@@ -24242,6 +24117,3 @@
 0x00000000,
 0x00000000,
 0x00000000,
-0x00010000,
-0x00010000,
-
Index: Kernel/sound/soc/omap/abe/abe_functionsid.h
===================================================================
--- Kernel.orig/sound/soc/omap/abe/abe_functionsid.h	2011-01-14 00:04:13.444345796 +0530
+++ Kernel/sound/soc/omap/abe/abe_functionsid.h	2011-01-19 00:14:51.043321822 +0530
@@ -34,23 +34,20 @@
 #define C_ABE_FW_FUNCTION_StreamRouting                     8
 #define C_ABE_FW_FUNCTION_gainConverge                      9
 #define C_ABE_FW_FUNCTION_dualIir                           10
-#define C_ABE_FW_FUNCTION_DCOFFSET                          11
-#define C_ABE_FW_FUNCTION_IO_DL_pp                          12
-#define C_ABE_FW_FUNCTION_IO_generic                        13
-#define C_ABE_FW_FUNCTION_irq_fifo_debug                    14
-#define C_ABE_FW_FUNCTION_synchronize_pointers              15
-#define C_ABE_FW_FUNCTION_VIBRA2                            16
-#define C_ABE_FW_FUNCTION_VIBRA1                            17
-#define C_ABE_FW_FUNCTION_APS_core                          18
-#define C_ABE_FW_FUNCTION_IIR_SRC_MIC                       19
-#define C_ABE_FW_FUNCTION_wrappers                          20
-#define C_ABE_FW_FUNCTION_EANCUpdateOutSample               21
-#define C_ABE_FW_FUNCTION_EANC                              22
-#define C_ABE_FW_FUNCTION_ASRC_DL_wrapper                   23
-#define C_ABE_FW_FUNCTION_ASRC_UL_wrapper                   24
-#define C_ABE_FW_FUNCTION_mem_init                          25
-#define C_ABE_FW_FUNCTION_debug_vx_asrc                     26
-#define C_ABE_FW_FUNCTION_IIR_SRC2                          27
+#define C_ABE_FW_FUNCTION_IO_DL_pp                          11
+#define C_ABE_FW_FUNCTION_IO_generic                        12
+#define C_ABE_FW_FUNCTION_irq_fifo_debug                    13
+#define C_ABE_FW_FUNCTION_synchronize_pointers              14
+#define C_ABE_FW_FUNCTION_VIBRA2                            15
+#define C_ABE_FW_FUNCTION_VIBRA1                            16
+#define C_ABE_FW_FUNCTION_APS_core                          17
+#define C_ABE_FW_FUNCTION_IIR_SRC_MIC                       18
+#define C_ABE_FW_FUNCTION_wrappers                          19
+#define C_ABE_FW_FUNCTION_ASRC_DL_wrapper                   20
+#define C_ABE_FW_FUNCTION_ASRC_UL_wrapper                   21
+#define C_ABE_FW_FUNCTION_mem_init                          22
+#define C_ABE_FW_FUNCTION_debug_vx_asrc                     23
+#define C_ABE_FW_FUNCTION_IIR_SRC2                          24
 /*
  *    COPY function ID definitions
  */
Index: Kernel/sound/soc/omap/abe/abe_fw.h
===================================================================
--- Kernel.orig/sound/soc/omap/abe/abe_fw.h	2011-01-19 00:14:18.522072429 +0530
+++ Kernel/sound/soc/omap/abe/abe_fw.h	2011-01-19 00:14:51.043321822 +0530
@@ -17,6 +17,8 @@
  * along with this program; if not, write to the Free Software`
  * 02110-1301 USA
  */
+#ifndef _ABE_FW_H_
+#define _ABE_FW_H_
 #include "abe_cm_addr.h"
 #include "abe_sm_addr.h"
 #include "abe_dm_addr.h"
@@ -238,10 +240,14 @@
 #define smem_mm_ext_in_opp50 MM_EXT_IN_labelID
 #define dmem_bt_vx_dl D_BT_DL_FIFO_ADDR
 #define dmem_bt_vx_dl_size (D_BT_DL_FIFO_sizeof/4)
-#define smem_bt_vx_dl BT_DL_8k_labelID
+#define smem_bt_vx_dl_opp50 BT_DL_8k_labelID
+/*BT_DL_8k_opp100_labelID  ASRC output buffer, size 40 */
+#define smem_bt_vx_dl_opp100 BT_DL_8k_opp100_labelID
 #define dmem_bt_vx_ul D_BT_UL_FIFO_ADDR
 #define dmem_bt_vx_ul_size (D_BT_UL_FIFO_sizeof/4)
-#define smem_bt_vx_ul BT_UL_8k_labelID
+#define smem_bt_vx_ul_opp50 BT_UL_8k_labelID
+/*IO_BT_UL_ASRC_labelID	 ASRC input buffer, size 40 */
+#define smem_bt_vx_ul_opp100 IO_BT_UL_ASRC_labelID
 /*
  * INITPTR / INITREG AREA
  */
@@ -370,3 +376,4 @@
  * int24 cmem_dither(x) [4]
  */
 #define cmem_dither
+#endif /* _ABE_FW_H_ */
Index: Kernel/sound/soc/omap/abe/abe_ini.c
===================================================================
--- Kernel.orig/sound/soc/omap/abe/abe_ini.c	2011-01-19 00:14:39.022073720 +0530
+++ Kernel/sound/soc/omap/abe/abe_ini.c	2011-01-19 00:14:51.043321822 +0530
@@ -20,9 +20,6 @@
  */
 #include "abe_main.h"
 #include "abe_dm_addr.h"
-
-short MultiFrame[PROCESSING_SLOTS][TASKS_IN_SLOT];
-
 /*
  * initialize the default values for call-backs to subroutines
  * - FIFO IRQ call-backs for sequenced tasks
@@ -46,25 +43,6 @@
 	abe_block_copy(COPY_FROM_HOST_TO_ABE, ABE_ATC, 0x3C, &atc_reg, 4);
 }
 /**
- * abe_disable_clear - disable MCU/DSP ABE interrupt
- *
- * This subroutine is disabling ABE MCU/DSP Irq
- */
-abehal_status abe_disable_irq(void)
-{
-	u32 atc_reg;
-
-	/* disables the DMAreq from AESS AESS_DMAENABLE_CLR = 127
-	 * DMA_Req7 will still be enabled as it is used for ABE trace */
-	atc_reg = 0x7F;
-	abe_block_copy(COPY_FROM_HOST_TO_ABE, ABE_ATC, 0x64, &atc_reg, 4);
-	/* disables the MCU IRQ from AESS to Cortex A9 */
-	atc_reg = 0x01;
-	abe_block_copy(COPY_FROM_HOST_TO_ABE, ABE_ATC, 0x40, &atc_reg, 4);
-
-	return 0;
-}
-/**
  * abe_build_scheduler_table
  *
  */
@@ -108,14 +86,14 @@
 	MultiFrame[2][5] = ABE_TASK_ID(C_ABE_FW_TASK_IO_DMIC);
 	/* MultiFrame[2][6] = 0; */
 	/* MultiFrame[2][7] = 0; */
-	MultiFrame[3][1] = ABE_TASK_ID(C_ABE_FW_TASK_DL1_GAIN);
-	MultiFrame[3][0] = ABE_TASK_ID(C_ABE_FW_TASK_DL1_APS_EQ);
-	MultiFrame[3][2] = ABE_TASK_ID(C_ABE_FW_TASK_EchoMixer);
+	MultiFrame[3][0] = ABE_TASK_ID(C_ABE_FW_TASK_DL1_GAIN);
+	/* MultiFrame[3][1] = 0; */
+	/* MultiFrame[3][2] = 0; */
 	/* MultiFrame[3][3] = 0; */
 	/* MultiFrame[3][4] = 0; */
 	/* MultiFrame[3][5] = 0; */
 	MultiFrame[3][6] = ABE_TASK_ID(C_ABE_FW_TASK_DL2_GAIN);
-	MultiFrame[3][7] = ABE_TASK_ID(C_ABE_FW_TASK_DL2_APS_EQ);
+	MultiFrame[3][7] = ABE_TASK_ID(C_ABE_FW_TASK_DL2_EQ);
 	MultiFrame[4][0] = ABE_TASK_ID(C_ABE_FW_TASK_DL1_EQ);
 	/* MultiFrame[4][1] = 0; */
 	MultiFrame[4][2] = ABE_TASK_ID(C_ABE_FW_TASK_VXRECMixer);
@@ -130,24 +108,24 @@
 	/* MultiFrame[5][3] = 0; */
 	/* MultiFrame[5][4] = 0; */
 	/* MultiFrame[5][5] = 0; */
-	MultiFrame[5][6] = ABE_TASK_ID(C_ABE_FW_TASK_DL2_EQ);
+	/* MultiFrame[5][6] = 0; */
 	MultiFrame[5][7] = ABE_TASK_ID(C_ABE_FW_TASK_VIBRA_SPLIT);
 	MultiFrame[6][0] = ABE_TASK_ID(C_ABE_FW_TASK_EARP_48_96_LP);
 	/* MultiFrame[6][1] = 0; */
 	/* MultiFrame[6][2] = 0; */
 	/* MultiFrame[6][3] = 0; */
 	/* MultiFrame[6][4] = 0; */
-	/* MultiFrame[6][5] = 0; */
-	MultiFrame[6][6] = ABE_TASK_ID(C_ABE_FW_TASK_DL2_APS_SPLIT);
+	MultiFrame[6][5] = ABE_TASK_ID(C_ABE_FW_TASK_EchoMixer);
+	/* MultiFrame[6][6] = 0; */
 	/* MultiFrame[6][7] = 0; */
 	MultiFrame[7][0] = ABE_TASK_ID(C_ABE_FW_TASK_IO_PDM_DL);
 	/* MultiFrame[7][1] = 0; */
 	MultiFrame[7][2] = ABE_TASK_ID(C_ABE_FW_TASK_BT_UL_SPLIT);
 	MultiFrame[7][3] = ABE_TASK_ID(C_ABE_FW_TASK_DBG_SYNC);
 	/* MultiFrame[7][4] = 0; */
-	/* MultiFrame[7][5] = 0; */
-	MultiFrame[7][6] = ABE_TASK_ID(C_ABE_FW_TASK_DL2_R_APS_CORE);
-	MultiFrame[7][7] = ABE_TASK_ID(C_ABE_FW_TASK_DL2_L_APS_CORE);
+	MultiFrame[7][5] = ABE_TASK_ID(C_ABE_FW_TASK_ECHO_REF_SPLIT);
+	/* MultiFrame[7][6] = 0; */
+	/* MultiFrame[7][7] = 0; */
 	/* MultiFrame[8][0] = 0; */
 	/* MultiFrame[8][1] = 0; */
 	MultiFrame[8][2] = ABE_TASK_ID(C_ABE_FW_TASK_DMIC1_96_48_LP);
@@ -208,13 +186,15 @@
 	/* MultiFrame[14][5] = 0; */
 	/* MultiFrame[14][6] = 0; */
 	/* MultiFrame[14][7] = 0; */
-	MultiFrame[15][0] = ABE_TASK_ID(C_ABE_FW_TASK_DL1_APS_IIR);
-	MultiFrame[15][1] = ABE_TASK_ID(C_ABE_FW_TASK_DL1_APS_CORE);
+#define TASK_ASRC_BT_UL_SLT 15
+#define TASK_ASRC_BT_UL_IDX 6
+	MultiFrame[15][0] = ABE_TASK_ID(C_ABE_FW_TASK_IO_MM_EXT_OUT);
+	/* MultiFrame[15][1] = 0; */
 	/* MultiFrame[15][2] = 0; */
 	MultiFrame[15][3] = ABE_TASK_ID(C_ABE_FW_TASK_IO_BT_VX_UL);
 	/* MultiFrame[15][4] = 0; */
 	/* MultiFrame[15][5] = 0; */
-	/* MultiFrame[15][6] = 0; */
+	MultiFrame[15][6] = ABE_TASK_ID(C_ABE_FW_TASK_ASRC_BT_UL_8);
 	/* MultiFrame[15][7] = 0; */
 	/* MultiFrame[16][0] = 0; */
 	/* MultiFrame[16][1] = 0; */
@@ -244,7 +224,9 @@
 	/* MultiFrame[18][3] = 0; */
 	/* MultiFrame[18][4] = 0; */
 	/* MultiFrame[18][5] = 0; */
-	/* MultiFrame[18][6] = 0; */
+#define TASK_ASRC_BT_DL_SLT 18
+#define TASK_ASRC_BT_DL_IDX 6
+	MultiFrame[18][6] = ABE_TASK_ID(C_ABE_FW_TASK_ASRC_BT_DL_8);
 	/* MultiFrame[18][7] = 0; */
 	MultiFrame[19][0] = ABE_TASK_ID(C_ABE_FW_TASK_IO_PDM_DL);
 	/* MultiFrame[19][1] = 0 */
@@ -265,7 +247,7 @@
 	/* MultiFrame[20][7] = 0; */
 	/* MultiFrame[21][0] = 0; */
 	MultiFrame[21][1] = ABE_TASK_ID(C_ABE_FW_TASK_DEBUGTRACE_VX_ASRCs);
-	MultiFrame[21][2] = ABE_TASK_ID(C_ABE_FW_TASK_IO_MM_EXT_OUT);
+	/* MultiFrame[21][2] = 0; */
 	MultiFrame[21][3] = ABE_TASK_ID(C_ABE_FW_TASK_IO_MM_EXT_IN);
 	/* MultiFrame[21][4] = 0; */
 	/* MultiFrame[21][5] = 0; */
@@ -315,14 +297,15 @@
  */
 void abe_init_atc(u32 id)
 {
-	abe_satcdescriptor_aess desc;
 	u8 iter;
 	s32 datasize;
+#define JITTER_MARGIN 4
 	/* load default values of the descriptor */
-	desc.rdpt = desc.wrpt = desc.irqdest = desc.cberr = 0;
-	desc.desen = desc.nw = 0;
-	desc.reserved0 = desc.reserved1 = desc.reserved2 = 0;
-	desc.srcid = desc.destid = desc.badd = desc.iter = desc.cbsize = 0;
+	atc_desc.rdpt = atc_desc.wrpt = atc_desc.irqdest = atc_desc.cberr = 0;
+	atc_desc.desen = atc_desc.nw = 0;
+	atc_desc.reserved0 = atc_desc.reserved1 = atc_desc.reserved2 = 0;
+	atc_desc.srcid = atc_desc.destid = atc_desc.badd = atc_desc.iter =
+		atc_desc.cbsize = 0;
 	datasize = abe_dma_port_iter_factor(&((abe_port[id]).format));
 	iter = (u8) abe_dma_port_iteration(&((abe_port[id]).format));
 	/* if the ATC FIFO is too small there will be two ABE firmware
@@ -338,107 +321,117 @@
 	/* IN from AESS point of view */
 	if (abe_port[id].protocol.direction == ABE_ATC_DIRECTION_IN)
 		if (iter + 2 * datasize > 126)
-			desc.wrpt = (iter >> 1) + ((JITTER_MARGIN - 1) * datasize);
+			atc_desc.wrpt =
+				(iter >> 1) + ((JITTER_MARGIN - 1) * datasize);
 		else
-			desc.wrpt = iter + ((JITTER_MARGIN - 1) * datasize);
+			atc_desc.wrpt = iter + ((JITTER_MARGIN - 1) * datasize);
 	else
-		desc.wrpt = 0 + ((JITTER_MARGIN + 1) * datasize);
+		atc_desc.wrpt = 0 + ((JITTER_MARGIN + 1) * datasize);
 	switch ((abe_port[id]).protocol.protocol_switch) {
 	case SLIMBUS_PORT_PROT:
-		desc.cbdir = (abe_port[id]).protocol.direction;
-		desc.cbsize = (abe_port[id]).protocol.p.prot_slimbus.buf_size;
-		desc.badd =
+		atc_desc.cbdir = (abe_port[id]).protocol.direction;
+		atc_desc.cbsize =
+			(abe_port[id]).protocol.p.prot_slimbus.buf_size;
+		atc_desc.badd =
 			((abe_port[id]).protocol.p.prot_slimbus.buf_addr1) >> 4;
-		desc.iter = (abe_port[id]).protocol.p.prot_slimbus.iter;
-		desc.srcid =
+		atc_desc.iter = (abe_port[id]).protocol.p.prot_slimbus.iter;
+		atc_desc.srcid =
 			abe_atc_srcid[(abe_port[id]).protocol.p.prot_slimbus.
 				      desc_addr1 >> 3];
 		abe_block_copy(COPY_FROM_HOST_TO_ABE, ABE_DMEM,
 			       (abe_port[id]).protocol.p.prot_slimbus.
-			       desc_addr1, (u32 *) &desc, sizeof(desc));
-		desc.badd = (abe_port[id]).protocol.p.prot_slimbus.buf_addr2;
-		desc.srcid =
+			       desc_addr1, (u32 *) &atc_desc,
+			       sizeof(atc_desc));
+		atc_desc.badd =
+			(abe_port[id]).protocol.p.prot_slimbus.buf_addr2;
+		atc_desc.srcid =
 			abe_atc_srcid[(abe_port[id]).protocol.p.prot_slimbus.
 				      desc_addr2 >> 3];
 		abe_block_copy(COPY_FROM_HOST_TO_ABE, ABE_DMEM,
 			       (abe_port[id]).protocol.p.prot_slimbus.
-			       desc_addr2, (u32 *) &desc, sizeof(desc));
+			       desc_addr2, (u32 *) &atc_desc,
+			       sizeof(atc_desc));
 		break;
 	case SERIAL_PORT_PROT:
-		desc.cbdir = (abe_port[id]).protocol.direction;
-		desc.cbsize = (abe_port[id]).protocol.p.prot_serial.buf_size;
-		desc.badd =
+		atc_desc.cbdir = (abe_port[id]).protocol.direction;
+		atc_desc.cbsize =
+			(abe_port[id]).protocol.p.prot_serial.buf_size;
+		atc_desc.badd =
 			((abe_port[id]).protocol.p.prot_serial.buf_addr) >> 4;
-		desc.iter = (abe_port[id]).protocol.p.prot_serial.iter;
-		desc.srcid =
+		atc_desc.iter = (abe_port[id]).protocol.p.prot_serial.iter;
+		atc_desc.srcid =
 			abe_atc_srcid[(abe_port[id]).protocol.p.prot_serial.
 				      desc_addr >> 3];
-		desc.destid =
+		atc_desc.destid =
 			abe_atc_dstid[(abe_port[id]).protocol.p.prot_serial.
 				      desc_addr >> 3];
 		abe_block_copy(COPY_FROM_HOST_TO_ABE, ABE_DMEM,
 			       (abe_port[id]).protocol.p.prot_serial.desc_addr,
-			       (u32 *) &desc, sizeof(desc));
+			       (u32 *) &atc_desc, sizeof(atc_desc));
 		break;
 	case DMIC_PORT_PROT:
-		desc.cbdir = ABE_ATC_DIRECTION_IN;
-		desc.cbsize = (abe_port[id]).protocol.p.prot_dmic.buf_size;
-		desc.badd = ((abe_port[id]).protocol.p.prot_dmic.buf_addr) >> 4;
-		desc.iter = DMIC_ITER;
-		desc.srcid = abe_atc_srcid[ABE_ATC_DMIC_DMA_REQ];
+		atc_desc.cbdir = ABE_ATC_DIRECTION_IN;
+		atc_desc.cbsize = (abe_port[id]).protocol.p.prot_dmic.buf_size;
+		atc_desc.badd =
+			((abe_port[id]).protocol.p.prot_dmic.buf_addr) >> 4;
+		atc_desc.iter = DMIC_ITER;
+		atc_desc.srcid = abe_atc_srcid[ABE_ATC_DMIC_DMA_REQ];
 		abe_block_copy(COPY_FROM_HOST_TO_ABE, ABE_DMEM,
 			       (ABE_ATC_DMIC_DMA_REQ*ATC_SIZE),
-			       (u32 *) &desc, sizeof(desc));
+			       (u32 *) &atc_desc, sizeof(atc_desc));
 		break;
 	case MCPDMDL_PORT_PROT:
-		desc.cbdir = ABE_ATC_DIRECTION_OUT;
-		desc.cbsize = (abe_port[id]).protocol.p.prot_mcpdmdl.buf_size;
-		desc.badd =
+		atc_desc.cbdir = ABE_ATC_DIRECTION_OUT;
+		atc_desc.cbsize =
+			(abe_port[id]).protocol.p.prot_mcpdmdl.buf_size;
+		atc_desc.badd =
 			((abe_port[id]).protocol.p.prot_mcpdmdl.buf_addr) >> 4;
-		desc.iter = MCPDM_DL_ITER;
-		desc.destid = abe_atc_dstid[ABE_ATC_MCPDMDL_DMA_REQ];
+		atc_desc.iter = MCPDM_DL_ITER;
+		atc_desc.destid = abe_atc_dstid[ABE_ATC_MCPDMDL_DMA_REQ];
 		abe_block_copy(COPY_FROM_HOST_TO_ABE, ABE_DMEM,
 			       (ABE_ATC_MCPDMDL_DMA_REQ*ATC_SIZE),
-			       (u32 *) &desc, sizeof(desc));
+			       (u32 *) &atc_desc, sizeof(atc_desc));
 		break;
 	case MCPDMUL_PORT_PROT:
-		desc.cbdir = ABE_ATC_DIRECTION_IN;
-		desc.cbsize = (abe_port[id]).protocol.p.prot_mcpdmul.buf_size;
-		desc.badd =
+		atc_desc.cbdir = ABE_ATC_DIRECTION_IN;
+		atc_desc.cbsize =
+			(abe_port[id]).protocol.p.prot_mcpdmul.buf_size;
+		atc_desc.badd =
 			((abe_port[id]).protocol.p.prot_mcpdmul.buf_addr) >> 4;
-		desc.iter = MCPDM_UL_ITER;
-		desc.srcid = abe_atc_srcid[ABE_ATC_MCPDMUL_DMA_REQ];
+		atc_desc.iter = MCPDM_UL_ITER;
+		atc_desc.srcid = abe_atc_srcid[ABE_ATC_MCPDMUL_DMA_REQ];
 		abe_block_copy(COPY_FROM_HOST_TO_ABE, ABE_DMEM,
 			       (ABE_ATC_MCPDMUL_DMA_REQ*ATC_SIZE),
-			       (u32 *) &desc, sizeof(desc));
+			       (u32 *) &atc_desc, sizeof(atc_desc));
 		break;
 	case PINGPONG_PORT_PROT:
 		/* software protocol, nothing to do on ATC */
 		break;
 	case DMAREQ_PORT_PROT:
-		desc.cbdir = (abe_port[id]).protocol.direction;
-		desc.cbsize = (abe_port[id]).protocol.p.prot_dmareq.buf_size;
-		desc.badd =
+		atc_desc.cbdir = (abe_port[id]).protocol.direction;
+		atc_desc.cbsize =
+			(abe_port[id]).protocol.p.prot_dmareq.buf_size;
+		atc_desc.badd =
 			((abe_port[id]).protocol.p.prot_dmareq.buf_addr) >> 4;
 		/* CBPr needs ITER=1. this is the eDMA job to do the iterations */
-		desc.iter = 1;
+		atc_desc.iter = 1;
 		/* input from ABE point of view */
 		if (abe_port[id].protocol.direction == ABE_ATC_DIRECTION_IN) {
-			/* desc.rdpt = 127; */
-			/* desc.wrpt = 0; */
-			desc.srcid = abe_atc_srcid
+			/* atc_atc_desc.rdpt = 127; */
+			/* atc_atc_desc.wrpt = 0; */
+			atc_desc.srcid = abe_atc_srcid
 				[(abe_port[id]).protocol.p.prot_dmareq.
 				 desc_addr >> 3];
 		} else {
-			/* desc.rdpt = 0; */
-			/* desc.wrpt = 127; */
-			desc.destid = abe_atc_dstid
+			/* atc_atc_desc.rdpt = 0; */
+			/* atc_atc_desc.wrpt = 127; */
+			atc_desc.destid = abe_atc_dstid
 				[(abe_port[id]).protocol.p.prot_dmareq.
 				 desc_addr >> 3];
 		}
 		abe_block_copy(COPY_FROM_HOST_TO_ABE, ABE_DMEM,
 			       (abe_port[id]).protocol.p.prot_dmareq.desc_addr,
-			       (u32 *) &desc, sizeof(desc));
+			       (u32 *) &atc_desc, sizeof(atc_desc));
 		break;
 	}
 }
@@ -499,8 +492,6 @@
  */
 void abe_disable_enable_dma_request(u32 id, u32 on_off)
 {
-	ABE_SIODescriptor desc;
-	ABE_SPingPongDescriptor desc_pp;
 	u8 desc_third_word[4], irq_dmareq_field;
 	u32 sio_desc_address;
 	u32 struct_offset;
@@ -518,22 +509,25 @@
 			       sio_desc_address + struct_offset,
 			       (u32 *) desc_third_word, 4);
 	} else {
+		/* serial interface: sync ATC with Firmware activity */
 		sio_desc_address =
 			dmem_port_descriptors +
 			(id * sizeof(ABE_SIODescriptor));
 		abe_block_copy(COPY_FROM_ABE_TO_HOST, ABE_DMEM,
-			       sio_desc_address, (u32 *) &desc, sizeof(desc));
+			       sio_desc_address, (u32 *) &sio_desc,
+			       sizeof(sio_desc));
 		if (on_off) {
-			desc.atc_irq_data =
+			sio_desc.atc_irq_data =
 				(u8) abe_port[id].protocol.p.prot_dmareq.
 				dma_data;
-			desc.on_off = 0x80;
+			sio_desc.on_off = 0x80;
 		} else {
-			desc.atc_irq_data = 0;
-			desc.on_off = 0;
+			sio_desc.atc_irq_data = 0;
+			sio_desc.on_off = 0;
 		}
 		abe_block_copy(COPY_FROM_HOST_TO_ABE, ABE_DMEM,
-			       sio_desc_address, (u32 *) &desc, sizeof(desc));
+			       sio_desc_address, (u32 *) &sio_desc,
+			       sizeof(sio_desc));
 	}
 }
 void abe_enable_dma_request(u32 id)
@@ -560,6 +554,13 @@
  */
 void abe_enable_atc(u32 id)
 {
+	abe_block_copy(COPY_FROM_ABE_TO_HOST, ABE_DMEM,
+		       (abe_port[id]).protocol.p.prot_dmareq.desc_addr,
+		       (u32 *) &atc_desc, sizeof(atc_desc));
+	atc_desc.desen = 1;
+	abe_block_copy(COPY_FROM_HOST_TO_ABE, ABE_DMEM,
+		       (abe_port[id]).protocol.p.prot_dmareq.desc_addr,
+		       (u32 *) &atc_desc, sizeof(atc_desc));
 }
 /**
  * abe_disable_atc
@@ -569,14 +570,13 @@
  */
 void abe_disable_atc(u32 id)
 {
-	abe_satcdescriptor_aess desc;
 	abe_block_copy(COPY_FROM_ABE_TO_HOST, ABE_DMEM,
 		       (abe_port[id]).protocol.p.prot_dmareq.desc_addr,
-		       (u32 *) &desc, sizeof(desc));
-	desc.desen = 0;
+		       (u32 *) &atc_desc, sizeof(atc_desc));
+	atc_desc.desen = 0;
 	abe_block_copy(COPY_FROM_HOST_TO_ABE, ABE_DMEM,
 		       (abe_port[id]).protocol.p.prot_dmareq.desc_addr,
-		       (u32 *) &desc, sizeof(desc));
+		       (u32 *) &atc_desc, sizeof(atc_desc));
 }
 /**
  * abe_init_io_tasks
@@ -592,8 +592,6 @@
 void abe_init_io_tasks(u32 id, abe_data_format_t *format,
 		       abe_port_protocol_t *prot)
 {
-	ABE_SIODescriptor desc;
-	ABE_SPingPongDescriptor desc_pp;
 	u32 x_io, direction, iter_samples, smem1, smem2, smem3, io_sub_id,
 		io_flag;
 	u32 copy_func_index, before_func_index, after_func_index;
@@ -601,7 +599,6 @@
 	u32 sio_desc_address, datasize, iter, nsamp, datasize2, dOppMode32;
 	u32 atc_ptr_saved, atc_ptr_saved2, copy_func_index1;
 	u32 copy_func_index2, atc_desc_address1, atc_desc_address2;
-
 	if (prot->protocol_switch == PINGPONG_PORT_PROT) {
 		/* ping_pong is only supported on MM_DL */
 		if (MM_DL_PORT != id) {
@@ -794,18 +791,46 @@
 		/* check for 8kHz/16kHz */
 		if (BT_VX_DL_PORT == id) {
 			abe_block_copy(COPY_FROM_ABE_TO_HOST, ABE_DMEM,
-				       D_multiFrame_ADDR,
-				       (u32 *) MultiFrame, sizeof(MultiFrame));
+				       D_multiFrame_ADDR, (u32 *) MultiFrame,
+				       sizeof(MultiFrame));
+			abe_block_copy(COPY_FROM_ABE_TO_HOST, ABE_DMEM,
+				       D_maxTaskBytesInSlot_ADDR, &dOppMode32,
+				       sizeof(u32));
 			if (abe_port[id].format.f == 8000) {
-				MultiFrame[TASK_BT_DL_48_8_SLT]
-					[TASK_BT_DL_48_8_IDX] =
-					ABE_TASK_ID(C_ABE_FW_TASK_BT_DL_48_8);
-				smem1 = BT_DL_8k_labelID;
+				MultiFrame[TASK_ASRC_BT_DL_SLT]
+					[TASK_ASRC_BT_DL_IDX] =
+					ABE_TASK_ID(C_ABE_FW_TASK_ASRC_BT_DL_8);
+				if (dOppMode32 == DOPPMODE32_OPP100) {
+					MultiFrame[TASK_BT_DL_48_8_SLT]
+						[TASK_BT_DL_48_8_IDX] =
+						ABE_TASK_ID
+						(C_ABE_FW_TASK_BT_DL_48_8_OPP100);
+					smem1 = BT_DL_8k_opp100_labelID;
+				} else {
+					MultiFrame[TASK_BT_DL_48_8_SLT]
+						[TASK_BT_DL_48_8_IDX] =
+						ABE_TASK_ID
+						(C_ABE_FW_TASK_BT_DL_48_8);
+					smem1 = BT_DL_8k_labelID;
+				}
 			} else {
-				MultiFrame[TASK_BT_DL_48_8_SLT]
-					[TASK_BT_DL_48_8_IDX] =
-					ABE_TASK_ID(C_ABE_FW_TASK_BT_DL_48_16);
-				smem1 = BT_DL_16k_labelID;
+				MultiFrame[TASK_ASRC_BT_DL_SLT]
+					[TASK_ASRC_BT_DL_IDX] =
+					ABE_TASK_ID
+					(C_ABE_FW_TASK_ASRC_BT_DL_16);
+				if (dOppMode32 == DOPPMODE32_OPP100) {
+					MultiFrame[TASK_BT_DL_48_8_SLT]
+						[TASK_BT_DL_48_8_IDX] =
+						ABE_TASK_ID
+						(C_ABE_FW_TASK_BT_DL_48_16_OPP100);
+					smem1 = BT_DL_16k_opp100_labelID;
+				} else {
+					MultiFrame[TASK_BT_DL_48_8_SLT]
+						[TASK_BT_DL_48_8_IDX] =
+						ABE_TASK_ID
+						(C_ABE_FW_TASK_BT_DL_48_16);
+					smem1 = BT_DL_16k_labelID;
+				}
 			}
 			abe_block_copy(COPY_FROM_HOST_TO_ABE, ABE_DMEM,
 				       D_multiFrame_ADDR, (u32 *) MultiFrame,
@@ -814,18 +839,39 @@
 		/* check for 8kHz/16kHz */
 		if (BT_VX_UL_PORT == id) {
 			abe_block_copy(COPY_FROM_ABE_TO_HOST, ABE_DMEM,
-				       D_multiFrame_ADDR,
-				       (u32 *) MultiFrame, sizeof(MultiFrame));
+				       D_multiFrame_ADDR, (u32 *) MultiFrame,
+				       sizeof(MultiFrame));
+			/* set the SMEM buffer -- programming sequence */
+			abe_block_copy(COPY_FROM_ABE_TO_HOST, ABE_DMEM,
+				       D_maxTaskBytesInSlot_ADDR, &dOppMode32,
+				       sizeof(u32));
 			if (abe_port[id].format.f == 8000) {
+				MultiFrame[TASK_ASRC_BT_UL_SLT]
+					[TASK_ASRC_BT_UL_IDX] =
+					ABE_TASK_ID(C_ABE_FW_TASK_ASRC_BT_UL_8);
 				MultiFrame[TASK_BT_UL_8_48_SLT]
 					[TASK_BT_UL_8_48_IDX] =
 					ABE_TASK_ID(C_ABE_FW_TASK_BT_UL_8_48);
-				smem1 = BT_UL_8k_labelID;
+				if (dOppMode32 == DOPPMODE32_OPP100)
+					/* ASRC input buffer, size 40 */
+					smem1 = smem_bt_vx_ul_opp100;
+				else
+					/* at OPP 50 without ASRC */
+					smem1 = BT_UL_8k_labelID;
 			} else {
+				MultiFrame[TASK_ASRC_BT_UL_SLT]
+					[TASK_ASRC_BT_UL_IDX] =
+					ABE_TASK_ID
+					(C_ABE_FW_TASK_ASRC_BT_UL_16);
 				MultiFrame[TASK_BT_UL_8_48_SLT]
 					[TASK_BT_UL_8_48_IDX] =
 					ABE_TASK_ID(C_ABE_FW_TASK_BT_UL_16_48);
-				smem1 = BT_UL_16k_labelID;
+				if (dOppMode32 == DOPPMODE32_OPP100)
+					/* ASRC input buffer, size 40 */
+					smem1 = smem_bt_vx_ul_opp100;
+				else
+					/* at OPP 50 without ASRC */
+					smem1 = BT_UL_16k_labelID;
 			}
 			abe_block_copy(COPY_FROM_HOST_TO_ABE, ABE_DMEM,
 				       D_multiFrame_ADDR, (u32 *) MultiFrame,
@@ -860,39 +906,40 @@
 		else
 			/* offset of the write pointer in the ATC descriptor */
 			direction = 3;
-		desc.drift_ASRC = 0;
-		desc.drift_io = 0;
-		desc.io_type_idx = (u8) io_sub_id;
-		desc.samp_size = (u8) datasize;
-		desc.hw_ctrl_addr = (u16) (dmareq_addr << 2);
-		desc.atc_irq_data = (u8) dmareq_field;
-		desc.flow_counter = (u16) 0;
-		desc.direction_rw = (u8) direction;
-		desc.repeat_last_samp = (u8) io_flag;
-		desc.nsamp = (u8) nsamp;
-		desc.x_io = (u8) x_io;
+		sio_desc.drift_ASRC = 0;
+		sio_desc.drift_io = 0;
+		sio_desc.io_type_idx = (u8) io_sub_id;
+		sio_desc.samp_size = (u8) datasize;
+		sio_desc.hw_ctrl_addr = (u16) (dmareq_addr << 2);
+		sio_desc.atc_irq_data = (u8) dmareq_field;
+		sio_desc.flow_counter = (u16) 0;
+		sio_desc.direction_rw = (u8) direction;
+		sio_desc.repeat_last_samp = (u8) io_flag;
+		sio_desc.nsamp = (u8) nsamp;
+		sio_desc.x_io = (u8) x_io;
 		/* set ATC ON */
-		desc.on_off = 0x80;
-		desc.split_addr1 = (u16) smem1;
-		desc.split_addr2 = (u16) smem2;
-		desc.split_addr3 = (u16) smem3;
-		desc.before_f_index = (u8) before_func_index;
-		desc.after_f_index = (u8) after_func_index;
-		desc.smem_addr1 = (u16) smem1;
-		desc.atc_address1 = (u16) atc_desc_address1;
-		desc.atc_pointer_saved1 = (u16) atc_ptr_saved;
-		desc.data_size1 = (u8) datasize;
-		desc.copy_f_index1 = (u8) copy_func_index1;
-		desc.smem_addr2 = (u16) smem2;
-		desc.atc_address2 = (u16) atc_desc_address2;
-		desc.atc_pointer_saved2 = (u16) atc_ptr_saved2;
-		desc.data_size2 = (u8) datasize2;
-		desc.copy_f_index2 = (u8) copy_func_index2;
+		sio_desc.on_off = 0x80;
+		sio_desc.split_addr1 = (u16) smem1;
+		sio_desc.split_addr2 = (u16) smem2;
+		sio_desc.split_addr3 = (u16) smem3;
+		sio_desc.before_f_index = (u8) before_func_index;
+		sio_desc.after_f_index = (u8) after_func_index;
+		sio_desc.smem_addr1 = (u16) smem1;
+		sio_desc.atc_address1 = (u16) atc_desc_address1;
+		sio_desc.atc_pointer_saved1 = (u16) atc_ptr_saved;
+		sio_desc.data_size1 = (u8) datasize;
+		sio_desc.copy_f_index1 = (u8) copy_func_index1;
+		sio_desc.smem_addr2 = (u16) smem2;
+		sio_desc.atc_address2 = (u16) atc_desc_address2;
+		sio_desc.atc_pointer_saved2 = (u16) atc_ptr_saved2;
+		sio_desc.data_size2 = (u8) datasize2;
+		sio_desc.copy_f_index2 = (u8) copy_func_index2;
 		sio_desc_address = dmem_port_descriptors + (id *
 							    sizeof
 							    (ABE_SIODescriptor));
 		abe_block_copy(COPY_FROM_HOST_TO_ABE, ABE_DMEM,
-			       sio_desc_address, (u32 *) &desc, sizeof(desc));
+			       sio_desc_address, (u32 *) &sio_desc,
+			       sizeof(sio_desc));
 	}
 }
 /**
@@ -903,7 +950,6 @@
  */
 void abe_enable_pp_io_task(u32 id)
 {
-
 	/* MM_DL managed in ping-pong */
 	if (MM_DL_PORT == id) {
 		abe_block_copy(COPY_FROM_ABE_TO_HOST, ABE_DMEM,
@@ -1018,8 +1064,8 @@
 	abe_write_mixer(MIXDL2, MUTE_GAIN, RAMP_100MS, MIX_DL2_INPUT_MM_UL2);
 	abe_write_mixer(MIXSDT, MUTE_GAIN, RAMP_100MS, MIX_SDT_INPUT_UP_MIXER);
 	abe_write_mixer(MIXSDT, GAIN_0dB, RAMP_100MS, MIX_SDT_INPUT_DL1_MIXER);
-	abe_write_mixer(MIXECHO, GAIN_0dB, RAMP_100MS, GAIN_LEFT_OFFSET);
-	abe_write_mixer(MIXECHO, GAIN_0dB, RAMP_100MS, GAIN_RIGHT_OFFSET);
+	abe_write_mixer(MIXECHO, MUTE_GAIN, RAMP_100MS, MIX_ECHO_DL1);
+	abe_write_mixer(MIXECHO, MUTE_GAIN, RAMP_100MS, MIX_ECHO_DL2);
 	abe_write_mixer(MIXAUDUL, MUTE_GAIN, RAMP_100MS, MIX_AUDUL_INPUT_MM_DL);
 	abe_write_mixer(MIXAUDUL, MUTE_GAIN, RAMP_100MS, MIX_AUDUL_INPUT_TONES);
 	abe_write_mixer(MIXAUDUL, GAIN_0dB, RAMP_100MS, MIX_AUDUL_INPUT_UPLINK);
@@ -1827,3 +1873,407 @@
 	el[i + 2] = temp0;
 	abe_write_fifo(ABE_DMEM, D_FwMemInitDescr_ADDR, (u32 *) &el[0], 42);
 }
+/**
+ * abe_init_asrc_bt_ul
+ *
+ * Initialize the following ASRC BT_UL parameters :
+ * 1. DriftSign = D_AsrcVars[1] = 1 or -1
+ * 2. Subblock = D_AsrcVars[2] = 0
+ * 3. DeltaAlpha = D_AsrcVars[3] = (round(nb_phases * drift[ppm] * 10^-6 * 2^20)) << 2
+ * 4. MinusDeltaAlpha = D_AsrcVars[4] = (-round(nb_phases * drift[ppm] * 10^-6 * 2^20)) << 2
+ * 5. OneMinusEpsilon = D_AsrcVars[5] = 1 - DeltaAlpha/2
+ * 6. AlphaCurrent = 0x000020 (CMEM), initial value of Alpha parameter
+ * 7. BetaCurrent = 0x3fffe0 (CMEM), initial value of Beta parameter
+ * AlphaCurrent + BetaCurrent = 1 (=0x400000 in CMEM = 2^20 << 2)
+ * 8. drift_ASRC = 0 & drift_io = 0
+ * 9. SMEM for ASRC_BT_UL_Coefs pointer
+ * 10. CMEM for ASRC_BT_UL_Coefs pointer
+ * ASRC_BT_UL_Coefs = C_CoefASRC16_VX_ADDR/C_CoefASRC16_VX_sizeof/0/1/
+ * C_CoefASRC15_VX_ADDR/C_CoefASRC15_VX_sizeof/0/1
+ * 11. SMEM for XinASRC_BT_UL pointer
+ * 12. CMEM for XinASRC_BT_UL pointer
+ * XinASRC_BT_UL = S_XinASRC_BT_UL_ADDR/S_XinASRC_BT_UL_sizeof/0/1/0/0/0/0
+ * 13. SMEM for IO_BT_UL_ASRC pointer
+ * 14. CMEM for IO_BT_UL_ASRC pointer
+ * IO_BT_UL_ASRC = S_XinASRC_BT_UL_ADDR/S_XinASRC_BT_UL_sizeof/ASRC_BT_UL_FIR_L+ASRC_margin/1/0/0/0/0
+ */
+void abe_init_asrc_bt_ul(s32 dppm)
+{
+	s32 el[45];
+	s32 temp0, temp1, adppm, dtemp, mem_tag, mem_addr;
+	u32 i = 0;
+	temp0 = 0;
+	temp1 = 1;
+
+	/* 1. DriftSign = D_AsrcVars[1] = 1 */
+	mem_tag = ABE_DMEM;
+	mem_addr = D_AsrcVars_BT_UL_ADDR + (1 * sizeof(s32));
+	el[i] = (mem_tag << 16) + mem_addr;
+	if (dppm >= 0) {
+		el[i + 1] = 1;
+		adppm = dppm;
+	} else {
+		el[i + 1] = -1;
+		adppm = (-1 * dppm);
+	}
+	/* dummy field */
+	el[i + 2] = temp0;
+	i = i + 3;
+	dtemp = (adppm << 4) + adppm - ((adppm * 3481L) / 15625L);
+
+	/* 2. Subblock = D_AsrcVars[2] = 0 */
+	mem_tag = ABE_DMEM;
+	mem_addr = D_AsrcVars_BT_UL_ADDR + (2 * sizeof(s32));
+	el[i] = (mem_tag << 16) + mem_addr;
+	el[i + 1] = temp0;
+	/* dummy field */
+	el[i + 2] = temp0;
+	i = i + 3;
+
+	/* 3. DeltaAlpha = D_AsrcVars[3] = 0 */
+	mem_tag = ABE_DMEM;
+	mem_addr = D_AsrcVars_BT_UL_ADDR + (3 * sizeof(s32));
+	el[i] = (mem_tag << 16) + mem_addr;
+	if (dppm == 0)
+		el[i + 1] = 0;
+	else
+		el[i + 1] = dtemp << 2;
+	/* dummy field */
+	el[i + 2] = temp0;
+	i = i + 3;
+
+	/* 4. MinusDeltaAlpha = D_AsrcVars[4] = 0 */
+	mem_tag = ABE_DMEM;
+	mem_addr = D_AsrcVars_BT_UL_ADDR + (4 * sizeof(s32));
+	el[i] = (mem_tag << 16) + mem_addr;
+	if (dppm == 0)
+		el[i + 1] = 0;
+	else
+		el[i + 1] = (-dtemp) << 2;
+	/* dummy field */
+	el[i + 2] = temp0;
+	i = i + 3;
+
+	/*5. OneMinusEpsilon = D_AsrcVars[5] = 0x00400000 */
+	mem_tag = ABE_DMEM;
+	mem_addr = D_AsrcVars_BT_UL_ADDR + (5 * sizeof(s32));
+	el[i] = (mem_tag << 16) + mem_addr;
+	if (dppm == 0)
+		el[i + 1] = 0x00400000;
+	else
+		el[i + 1] = (0x00100000 - (dtemp / 2)) << 2;
+	/* dummy field */
+	el[i + 2] = temp0;
+	i = i + 3;
+
+	/* 6. AlphaCurrent = 0x000020 (CMEM) */
+	mem_tag = ABE_CMEM;
+	mem_addr = C_AlphaCurrent_BT_UL_ADDR;
+	el[i] = (mem_tag << 16) + (mem_addr << 2);
+	el[i + 1] = 0x00000020;
+	/* dummy field */
+	el[i + 2] = temp0;
+	i = i + 3;
+
+	/* 7. BetaCurrent = 0x3fffe0 (CMEM) */
+	mem_tag = ABE_CMEM;
+	mem_addr = C_BetaCurrent_BT_UL_ADDR;
+	el[i] = (mem_tag << 16) + (mem_addr << 2);
+	el[i + 1] = 0x003fffe0;
+	/* dummy field */
+	el[i + 2] = temp0;
+	i = i + 3;
+
+	/* 8. drift_ASRC = 0 & drift_io = 0 */
+	mem_tag = ABE_DMEM;
+	mem_addr = D_IOdescr_ADDR + (BT_VX_UL_PORT * sizeof(ABE_SIODescriptor))
+		+ drift_asrc_;
+	el[i] = (mem_tag << 16) + mem_addr;
+	el[i + 1] = temp0;
+	/* dummy field */
+	el[i + 2] = temp0;
+	i = i + 3;
+
+	/* 9. SMEM for ASRC_BT_UL_Coefs pointer */
+	/* ASRC_BT_UL_Coefs = C_CoefASRC16_VX_ADDR/C_CoefASRC16_VX_sizeof/0
+	   /1/C_CoefASRC15_VX_ADDR/C_CoefASRC15_VX_sizeof/0/1 */
+	mem_tag = ABE_SMEM;
+	mem_addr = ASRC_BT_UL_Coefs_labelID;
+	el[i] = (mem_tag << 16) + (mem_addr << 2);
+	el[i + 1] = C_CoefASRC16_VX_ADDR;
+	el[i + 1] = (el[i + 1] << 8) + C_CoefASRC16_VX_sizeof;
+	el[i + 2] = C_CoefASRC15_VX_ADDR;
+	el[i + 2] = (el[i + 2] << 8) + C_CoefASRC15_VX_sizeof;
+	i = i + 3;
+
+	/* 10. CMEM for ASRC_BT_UL_Coefs pointer */
+	/* ASRC_BT_UL_Coefs = C_CoefASRC16_VX_ADDR/C_CoefASRC16_VX_sizeof/0/
+	   1/C_CoefASRC15_VX_ADDR/C_CoefASRC15_VX_sizeof/0/1 */
+	mem_tag = ABE_CMEM;
+	mem_addr = ASRC_BT_UL_Coefs_labelID;
+	el[i] = (mem_tag << 16) + (mem_addr << 2);
+	/* el[i+1] = iam1<<16 + inc1<<12 + iam2<<4 + inc2 */
+	el[i + 1] = (temp0 << 16) + (temp1 << 12) + (temp0 << 4) + temp1;
+	/* dummy field */
+	el[i + 2] = temp0;
+	i = i + 3;
+
+	/* 11. SMEM for XinASRC_BT_UL pointer */
+	/* XinASRC_BT_UL = S_XinASRC_BT_UL_ADDR/S_XinASRC_BT_UL_sizeof/0/1/0/0/0/0 */
+	mem_tag = ABE_SMEM;
+	mem_addr = XinASRC_BT_UL_labelID;
+	el[i] = (mem_tag << 16) + (mem_addr << 2);
+	el[i + 1] = S_XinASRC_BT_UL_ADDR;
+	el[i + 1] = (el[i + 1] << 8) + S_XinASRC_BT_UL_sizeof;
+	el[i + 2] = temp0;
+	i = i + 3;
+
+	/* 12. CMEM for XinASRC_BT_UL pointer */
+	/* XinASRC_BT_UL = S_XinASRC_BT_UL_ADDR/S_XinASRC_BT_UL_sizeof/0/1/0/0/0/0 */
+	mem_tag = ABE_CMEM;
+	mem_addr = XinASRC_BT_UL_labelID;
+	el[i] = (mem_tag << 16) + (mem_addr << 2);
+	/* el[i+1] = iam1<<16 + inc1<<12 + iam2<<4 + inc2 */
+	el[i + 1] = (temp0 << 16) + (temp1 << 12) + (temp0 << 4) + temp0;
+	/* dummy field */
+	el[i + 2] = temp0;
+	i = i + 3;
+
+	/* 13. SMEM for IO_BT_UL_ASRC pointer */
+	/* IO_BT_UL_ASRC = S_XinASRC_BT_UL_ADDR/S_XinASRC_BT_UL_sizeof/
+	   ASRC_BT_UL_FIR_L+ASRC_margin/1/0/0/0/0 */
+	mem_tag = ABE_SMEM;
+	mem_addr = IO_BT_UL_ASRC_labelID;
+	el[i] = (mem_tag << 16) + (mem_addr << 2);
+	el[i + 1] = S_XinASRC_BT_UL_ADDR;
+	el[i + 1] = (el[i + 1] << 8) + S_XinASRC_BT_UL_sizeof;
+	el[i + 2] = temp0;
+	i = i + 3;
+
+	/* 14. CMEM for IO_BT_UL_ASRC pointer */
+	/* IO_BT_UL_ASRC = S_XinASRC_BT_UL_ADDR/S_XinASRC_BT_UL_sizeof/
+	   ASRC_BT_UL_FIR_L+ASRC_margin/1/0/0/0/0 */
+	mem_tag = ABE_CMEM;
+	mem_addr = IO_BT_UL_ASRC_labelID;
+	el[i] = (mem_tag << 16) + (mem_addr << 2);
+	/* el[i+1] = iam1<<16 + inc1<<12 + iam2<<4 + inc2 */
+	el[i + 1] = ((ASRC_BT_UL_FIR_L + ASRC_margin) << 16) + (temp1 << 12)
+		+ (temp0 << 4) + temp0;
+	/* dummy field */
+	el[i + 2] = temp0;
+	abe_write_fifo(ABE_DMEM, D_FwMemInitDescr_ADDR, (u32 *) &el[0], 42);
+}
+/**
+ * abe_init_asrc_bt_dl
+ *
+ * Initialize the following ASRC BT_DL parameters :
+ * 1. DriftSign = D_AsrcVars[1] = 1 or -1
+ * 2. Subblock = D_AsrcVars[2] = 0
+ * 3. DeltaAlpha = D_AsrcVars[3] = (round(nb_phases * drift[ppm] * 10^-6 * 2^20)) << 2
+ * 4. MinusDeltaAlpha = D_AsrcVars[4] = (-round(nb_phases * drift[ppm] * 10^-6 * 2^20)) << 2
+ * 5. OneMinusEpsilon = D_AsrcVars[5] = 1 - DeltaAlpha/2
+ * 6. AlphaCurrent = 0x000020 (CMEM), initial value of Alpha parameter
+ * 7. BetaCurrent = 0x3fffe0 (CMEM), initial value of Beta parameter
+ * AlphaCurrent + BetaCurrent = 1 (=0x400000 in CMEM = 2^20 << 2)
+ * 8. drift_ASRC = 0 & drift_io = 0
+ * 9. SMEM for ASRC_BT_DL_Coefs pointer
+ * 10. CMEM for ASRC_BT_DL_Coefs pointer
+ *		ASRC_BT_DL_Coefs = C_CoefASRC16_VX_ADDR/C_CoefASRC16_VX_sizeof
+ *	/0/1/C_CoefASRC15_VX_ADDR/C_CoefASRC15_VX_sizeof/0/1
+ * 11. SMEM for XinASRC_BT_DL pointer
+ * 12. CMEM for XinASRC_BT_DL pointer
+ *		XinASRC_BT_DL = S_XinASRC_BT_DL_ADDR/S_XinASRC_BT_DL_sizeof/0/1/0/0/0/0
+ * 13. SMEM for DL_48_8_DEC pointer
+ * 14. CMEM for DL_48_8_DEC pointer
+ *		DL_48_8_DEC = S_XinASRC_BT_DL_ADDR/S_XinASRC_BT_DL_sizeof/
+ *	ASRC_BT_DL_FIR_L+ASRC_margin/1/0/0/0/0
+ * 15. SMEM for DL_48_16_DEC pointer
+ * 16. CMEM for DL_48_16_DEC pointer
+ *		DL_48_16_DEC = S_XinASRC_BT_DL_ADDR/S_XinASRC_BT_DL_sizeof/
+ *	ASRC_BT_DL_FIR_L+ASRC_margin/1/0/0/0/0
+ */
+void abe_init_asrc_bt_dl(s32 dppm)
+{
+	s32 el[51];
+	s32 temp0, temp1, adppm, dtemp, mem_tag, mem_addr;
+	u32 i = 0;
+	temp0 = 0;
+	temp1 = 1;
+
+	/* 1. DriftSign = D_AsrcVars[1] = 1 */
+	mem_tag = ABE_DMEM;
+	mem_addr = D_AsrcVars_BT_DL_ADDR + (1 * sizeof(s32));
+	el[i] = (mem_tag << 16) + mem_addr;
+	if (dppm >= 0) {
+		el[i + 1] = 1;
+		adppm = dppm;
+	} else {
+		el[i + 1] = -1;
+		adppm = (-1 * dppm);
+	}
+	/* dummy field */
+	el[i + 2] = temp0;
+	i = i + 3;
+	dtemp = (adppm << 4) + adppm - ((adppm * 3481L) / 15625L);
+
+	/* 2. Subblock = D_AsrcVars[2] = 0 */
+	mem_tag = ABE_DMEM;
+	mem_addr = D_AsrcVars_BT_DL_ADDR + (2 * sizeof(s32));
+	el[i] = (mem_tag << 16) + mem_addr;
+	el[i + 1] = temp0;
+	/* dummy field */
+	el[i + 2] = temp0;
+	i = i + 3;
+
+	/* 3. DeltaAlpha = D_AsrcVars[3] = 0 */
+	mem_tag = ABE_DMEM;
+	mem_addr = D_AsrcVars_BT_DL_ADDR + (3 * sizeof(s32));
+	el[i] = (mem_tag << 16) + mem_addr;
+	if (dppm == 0)
+		el[i + 1] = 0;
+	else
+		el[i + 1] = dtemp << 2;
+	/* dummy field */
+	el[i + 2] = temp0;
+	i = i + 3;
+
+	/* 4. MinusDeltaAlpha = D_AsrcVars[4] = 0 */
+	mem_tag = ABE_DMEM;
+	mem_addr = D_AsrcVars_BT_DL_ADDR + (4 * sizeof(s32));
+	el[i] = (mem_tag << 16) + mem_addr;
+	if (dppm == 0)
+		el[i + 1] = 0;
+	else
+		el[i + 1] = (-dtemp) << 2;
+	/* dummy field */
+	el[i + 2] = temp0;
+	i = i + 3;
+
+	/* 5. OneMinusEpsilon = D_AsrcVars[5] = 0x00400000 */
+	mem_tag = ABE_DMEM;
+	mem_addr = D_AsrcVars_BT_DL_ADDR + (5 * sizeof(s32));
+	el[i] = (mem_tag << 16) + mem_addr;
+	if (dppm == 0)
+		el[i + 1] = 0x00400000;
+	else
+		el[i + 1] = (0x00100000 - (dtemp / 2)) << 2;
+	/* dummy field */
+	el[i + 2] = temp0;
+	i = i + 3;
+
+	/* 6. AlphaCurrent = 0x000020 (CMEM) */
+	mem_tag = ABE_CMEM;
+	mem_addr = C_AlphaCurrent_BT_DL_ADDR;
+	el[i] = (mem_tag << 16) + (mem_addr << 2);
+	el[i + 1] = 0x00000020;
+	/* dummy field */
+	el[i + 2] = temp0;
+	i = i + 3;
+
+	/* 7. BetaCurrent = 0x3fffe0 (CMEM) */
+	mem_tag = ABE_CMEM;
+	mem_addr = C_BetaCurrent_BT_DL_ADDR;
+	el[i] = (mem_tag << 16) + (mem_addr << 2);
+	el[i + 1] = 0x003fffe0;
+	/* dummy field */
+	el[i + 2] = temp0;
+	i = i + 3;
+
+	/* 8. drift_ASRC = 0 & drift_io = 0 */
+	mem_tag = ABE_DMEM;
+	mem_addr = D_IOdescr_ADDR + (BT_VX_DL_PORT * sizeof(ABE_SIODescriptor))
+		+ drift_asrc_;
+	el[i] = (mem_tag << 16) + mem_addr;
+	el[i + 1] = temp0;
+	/* dummy field */
+	el[i + 2] = temp0;
+	i = i + 3;
+
+	/* 9. SMEM for ASRC_BT_DL_Coefs pointer */
+	/* ASRC_BT_DL_Coefs = C_CoefASRC16_VX_ADDR/C_CoefASRC16_VX_sizeof/0/1/
+	   C_CoefASRC15_VX_ADDR/C_CoefASRC15_VX_sizeof/0/1 */
+	mem_tag = ABE_SMEM;
+	mem_addr = ASRC_BT_DL_Coefs_labelID;
+	el[i] = (mem_tag << 16) + (mem_addr << 2);
+	el[i + 1] = (C_CoefASRC16_VX_ADDR << 8) + C_CoefASRC16_VX_sizeof;
+	el[i + 2] = (C_CoefASRC15_VX_ADDR << 8) + C_CoefASRC15_VX_sizeof;
+	i = i + 3;
+
+	/* 10. CMEM for ASRC_BT_DL_Coefs pointer */
+	/* ASRC_BT_DL_Coefs = C_CoefASRC16_VX_ADDR/C_CoefASRC16_VX_sizeof/0/1/
+	   C_CoefASRC15_VX_ADDR/C_CoefASRC15_VX_sizeof/0/1 */
+	mem_tag = ABE_CMEM;
+	mem_addr = ASRC_BT_DL_Coefs_labelID;
+	el[i] = (mem_tag << 16) + (mem_addr << 2);
+	/* el[i+1] = iam1<<16 + inc1<<12 + iam2<<4 + inc2 */
+	el[i + 1] = (temp0 << 16) + (temp1 << 12) + (temp0 << 4) + temp1;
+	/* dummy field */
+	el[i + 2] = temp0;
+	i = i + 3;
+
+	/* 11. SMEM for XinASRC_BT_DL pointer */
+	/* XinASRC_BT_DL = S_XinASRC_BT_DL_ADDR/S_XinASRC_BT_DL_sizeof/0/1/0/0/0/0 */
+	mem_tag = ABE_SMEM;
+	mem_addr = XinASRC_BT_DL_labelID;
+	el[i] = (mem_tag << 16) + (mem_addr << 2);
+	el[i + 1] = (S_XinASRC_BT_DL_ADDR << 8) + S_XinASRC_BT_DL_sizeof;
+	el[i + 2] = temp0;
+	i = i + 3;
+
+	/* 12. CMEM for XinASRC_BT_DL pointer */
+	/* XinASRC_BT_DL = S_XinASRC_BT_DL_ADDR/S_XinASRC_BT_DL_sizeof/0/1/0/0/0/0 */
+	mem_tag = ABE_CMEM;
+	mem_addr = XinASRC_BT_DL_labelID;
+	el[i] = (mem_tag << 16) + (mem_addr << 2);
+	/* el[i+1] = iam1<<16 + inc1<<12 + iam2<<4 + inc2 */
+	el[i + 1] = (temp0 << 16) + (temp1 << 12) + (temp0 << 4) + temp0;
+	/* dummy field */
+	el[i + 2] = temp0;
+	i = i + 3;
+
+	/* 13. SMEM for DL_48_8_DEC pointer */
+	/* DL_48_8_DEC = S_XinASRC_BT_DL_ADDR/S_XinASRC_BT_DL_sizeof/
+	   ASRC_BT_DL_FIR_L+ASRC_margin/1/0/0/0/0 */
+	mem_tag = ABE_SMEM;
+	mem_addr = DL_48_8_DEC_labelID;
+	el[i] = (mem_tag << 16) + (mem_addr << 2);
+	el[i + 1] = (S_XinASRC_BT_DL_ADDR << 8) + S_XinASRC_BT_DL_sizeof;
+	el[i + 2] = temp0;
+	i = i + 3;
+
+	/* 14. CMEM for DL_48_8_DEC pointer */
+	/* DL_48_8_DEC = S_XinASRC_BT_DL_ADDR/S_XinASRC_BT_DL_sizeof/
+	   ASRC_BT_DL_FIR_L+ASRC_margin/1/0/0/0/0 */
+	mem_tag = ABE_CMEM;
+	mem_addr = DL_48_8_DEC_labelID;
+	el[i] = (mem_tag << 16) + (mem_addr << 2);
+	/* el[i+1] = iam1<<16 + inc1<<12 + iam2<<4 + inc2 */
+	el[i + 1] = ((ASRC_BT_DL_FIR_L + ASRC_margin) << 16) + (temp1 << 12)
+		+ (temp0 << 4) + temp0;
+	/* dummy field */
+	el[i + 2] = temp0;
+	i = i + 3;
+
+	/* 15. SMEM for DL_48_16_DEC pointer */
+	/* DL_48_16_DEC = S_XinASRC_BT_DL_ADDR/S_XinASRC_BT_DL_sizeof/
+	   ASRC_BT_DL_FIR_L+ASRC_margin/1/0/0/0/0 */
+	mem_tag = ABE_SMEM;
+	mem_addr = DL_48_16_DEC_labelID;
+	el[i] = (mem_tag << 16) + (mem_addr << 2);
+	el[i + 1] = (S_XinASRC_BT_DL_ADDR << 8) + S_XinASRC_BT_DL_sizeof;
+	el[i + 2] = temp0;
+	i = i + 3;
+
+	/* 16. CMEM for DL_48_16_DEC pointer */
+	/* DL_48_16_DEC = S_XinASRC_BT_DL_ADDR/S_XinASRC_BT_DL_sizeof/
+	   ASRC_BT_DL_FIR_L+ASRC_margin/1/0/0/0/0 */
+	mem_tag = ABE_CMEM;
+	mem_addr = DL_48_16_DEC_labelID;
+	el[i] = (mem_tag << 16) + (mem_addr << 2);
+	/* el[i+1] = iam1<<16 + inc1<<12 + iam2<<4 + inc2 */
+	el[i + 1] = ((ASRC_BT_DL_FIR_L + ASRC_margin) << 16) + (temp1 << 12)
+		+ (temp0 << 4) + temp0;
+	/* dummy field */
+	el[i + 2] = temp0;
+	abe_write_fifo(ABE_DMEM, D_FwMemInitDescr_ADDR, (u32 *) &el[0], 48);
+}
Index: Kernel/sound/soc/omap/abe/abe_initxxx_labels.h
===================================================================
--- Kernel.orig/sound/soc/omap/abe/abe_initxxx_labels.h	2011-01-14 00:04:13.454346370 +0530
+++ Kernel/sound/soc/omap/abe/abe_initxxx_labels.h	2011-01-19 00:14:51.043321822 +0530
@@ -87,242 +87,246 @@
 #define AMIC_labelID                                        64
 #define AMIC_L_labelID                                      65
 #define AMIC_R_labelID                                      66
-#define EANC_FBK_In_labelID                                 67
-#define EANC_FBK_Out_labelID                                68
-#define EANC_FBK_L_labelID                                  69
-#define EANC_FBK_R_labelID                                  70
-#define EchoRef_L_labelID                                   71
-#define EchoRef_R_labelID                                   72
-#define MM_DL_L_labelID                                     73
-#define MM_DL_R_labelID                                     74
-#define MM_UL_labelID                                       75
-#define AMIC_96_labelID                                     76
-#define DMIC0_96_labelID                                    77
-#define DMIC1_96_labelID                                    78
-#define DMIC2_96_labelID                                    79
-#define DMIC_desc_labelID                                   80
-#define UL_MIC_48K_labelID                                  81
-#define EQ_DL_48K_labelID                                   82
-#define EQ_48K_labelID                                      83
-#define McPDM_Out1_labelID                                  84
-#define McPDM_Out2_labelID                                  85
-#define McPDM_Out3_labelID                                  86
-#define VX_UL_MUX_labelID                                   87
-#define MM_UL2_MUX_labelID                                  88
-#define MM_UL_MUX_labelID                                   89
-#define XinASRC_DL_VX_labelID                               90
-#define ASRC_DL_VX_Coefs_labelID                            91
-#define ASRC_DL_VX_Alpha_labelID                            92
-#define ASRC_DL_VX_VarsBeta_labelID                         93
-#define ASRC_DL_VX_8k_Regs_labelID                          94
-#define XinASRC_UL_VX_labelID                               95
-#define ASRC_UL_VX_Coefs_labelID                            96
-#define ASRC_UL_VX_Alpha_labelID                            97
-#define ASRC_UL_VX_VarsBeta_labelID                         98
-#define ASRC_UL_VX_8k_Regs_labelID                          99
-#define UL_48_8_DEC_labelID                                 100
-#define ASRC_DL_VX_16k_Regs_labelID                         101
-#define ASRC_UL_VX_16k_Regs_labelID                         102
-#define UL_48_16_DEC_labelID                                103
-#define XinASRC_MM_EXT_IN_labelID                           104
-#define ASRC_MM_EXT_IN_Coefs_labelID                        105
-#define ASRC_MM_EXT_IN_Alpha_labelID                        106
-#define ASRC_MM_EXT_IN_VarsBeta_labelID                     107
-#define ASRC_MM_EXT_IN_Regs_labelID                         108
-#define VX_REC_labelID                                      109
-#define VXREC_UL_M_Tones_VX_UL_labelID                      110
-#define VX_REC_L_labelID                                    111
-#define VX_REC_R_labelID                                    112
-#define DL2_M_L_labelID                                     113
-#define DL2_M_R_labelID                                     114
-#define DL1_M_data_labelID                                  115
-#define DL1_M_Coefs_labelID                                 116
-#define DL2_M_LR_data_labelID                               117
-#define DL2_M_LR_Coefs_labelID                              118
-#define SRC_6_LP_COEFS_labelID                              119
-#define SRC_6_LP_GAIN_COEFS_labelID                         120
-#define SRC_6_HP_COEFS_labelID                              121
-#define SRC_3_LP_COEFS_labelID                              122
-#define SRC_3_LP_GAIN_COEFS_labelID                         123
-#define SRC_3_HP_COEFS_labelID                              124
-#define VX_DL_8_48_LP_DATA_labelID                          125
-#define VX_DL_8_48_HP_DATA_labelID                          126
-#define VX_DL_16_48_LP_DATA_labelID                         127
-#define VX_DL_16_48_HP_DATA_labelID                         128
-#define VX_UL_48_8_LP_DATA_labelID                          129
-#define VX_UL_48_8_HP_DATA_labelID                          130
-#define VX_UL_48_16_LP_DATA_labelID                         131
-#define VX_UL_48_16_HP_DATA_labelID                         132
-#define BT_UL_8_48_LP_DATA_labelID                          133
-#define BT_UL_8_48_HP_DATA_labelID                          134
-#define BT_UL_16_48_LP_DATA_labelID                         135
-#define BT_UL_16_48_HP_DATA_labelID                         136
-#define BT_DL_48_8_LP_DATA_labelID                          137
-#define BT_DL_48_8_HP_DATA_labelID                          138
-#define BT_DL_48_16_LP_DATA_labelID                         139
-#define BT_DL_48_16_HP_DATA_labelID                         140
-#define ECHO_REF_48_16_LP_DATA_labelID                      141
-#define ECHO_REF_48_16_HP_DATA_labelID                      142
-#define ECHO_REF_48_8_LP_DATA_labelID                       143
-#define ECHO_REF_48_8_HP_DATA_labelID                       144
-#define ECHO_REF_DEC_labelID                                145
-#define VX_UL_8_TEMP_labelID                                146
-#define VX_UL_16_TEMP_labelID                               147
-#define UP_DOWN_8_48_labelID                                148
-#define UP_DOWN_16_48_labelID                               149
-#define SRC_6_LP_48k_labelID                                150
-#define SRC_6_HP_labelID                                    151
-#define SRC_3_LP_48k_labelID                                152
-#define SRC_3_HP_labelID                                    153
-#define EARP_48_96_LP_DATA_labelID                          154
-#define SRC_48_96_LP_labelID                                155
-#define IHF_48_96_LP_DATA_labelID                           156
-#define EQ_VX_UL_16K_labelID                                157
-#define pAPS_iir1_p23_labelID                               158
-#define pAPS_iir1_p45_labelID                               159
-#define APS_IIR_Regs_labelID                                160
-#define pAPS_core_DL1_p1_labelID                            161
-#define pAPS_core_DL1_p23_labelID                           162
-#define pAPS_core_DL1_p45_labelID                           163
-#define pAPS_core_DL1_r_labelID                             164
-#define pAPS_DL2L_core_r_labelID                            165
-#define pAPS_DL2R_core_r_labelID                            166
-#define pAPS_COIL_core_DL1_p1_labelID                       167
-#define pAPS_COIL_core_DL1_p23_labelID                      168
-#define pAPS_COIL_core_DL1_p45_labelID                      169
-#define pAPS_COIL_core_DL1_r_labelID                        170
-#define DL2_L_APS_IIR_p23_labelID                           171
-#define DL2_R_APS_IIR_p23_labelID                           172
-#define DL2_L_APS_IIR_p45_labelID                           173
-#define DL2_R_APS_IIR_p45_labelID                           174
-#define DL2_L_APS_CORE_p1_labelID                           175
-#define DL2_L_APS_CORE_p23_labelID                          176
-#define DL2_L_APS_CORE_p45_labelID                          177
-#define DL2_R_APS_CORE_p1_labelID                           178
-#define DL2_R_APS_CORE_p23_labelID                          179
-#define DL2_R_APS_CORE_p45_labelID                          180
-#define DL2_L_APS_COIL_CORE_p1_labelID                      181
-#define DL2_L_APS_COIL_CORE_p23_labelID                     182
-#define DL2_L_APS_COIL_CORE_p45_labelID                     183
-#define pAPS_COIL_DL2L_core_r_labelID                       184
-#define DL2_R_APS_COIL_CORE_p1_labelID                      185
-#define DL2_R_APS_COIL_CORE_p23_labelID                     186
-#define DL2_R_APS_COIL_CORE_p45_labelID                     187
-#define pAPS_COIL_DL2R_core_r_labelID                       188
-#define DL1_APS_labelID                                     189
-#define DL2_L_APS_labelID                                   190
-#define DL2_R_APS_labelID                                   191
-#define pEANC_p0_labelID                                    192
-#define pEANC_p1_labelID                                    193
-#define pEANC_p23_labelID                                   194
-#define pEANC_p45_labelID                                   195
-#define pEANC_reg1_labelID                                  196
-#define pEANC_reg2_labelID                                  197
-#define pEANC_reg3_labelID                                  198
-#define pEANC_r_labelID                                     199
-#define DL1_APS_EQ_p23_labelID                              200
-#define DL1_APS_EQ_p45_labelID                              201
-#define DL2_APS_EQ_p23_labelID                              202
-#define DL2_APS_EQ_p45_labelID                              203
-#define pDC_EANC_p23_labelID                                204
-#define pDC_EANC_r_labelID                                  205
-#define pVIBRA1_p0_labelID                                  206
-#define pVIBRA1_p1_labelID                                  207
-#define pVIBRA1_p23_labelID                                 208
-#define pVIBRA1_p45_labelID                                 209
-#define pVibra1_pR1_labelID                                 210
-#define pVibra1_pR2_labelID                                 211
-#define pVibra1_pR3_labelID                                 212
-#define pVIBRA1_r_labelID                                   213
-#define pVIBRA2_p0_labelID                                  214
-#define pVIBRA2_p1_labelID                                  215
-#define pVIBRA2_p23_labelID                                 216
-#define pVIBRA2_p45_labelID                                 217
-#define pCtrl_p67_labelID                                   218
-#define pVIBRA2_r_labelID                                   219
-#define VIBRA_labelID                                       220
-#define PING_labelID                                        221
-#define PING_Regs_labelID                                   222
-#define UP_48_96_LP_COEFS_labelID                           223
-#define AMIC_96_48_data_labelID                             224
-#define DOWN_96_48_AMIC_Coefs_labelID                       225
-#define DOWN_96_48_DMIC_Coefs_labelID                       226
-#define DOWN_96_48_AMIC_Regs_labelID                        227
-#define DOWN_96_48_DMIC_Regs_labelID                        228
-#define DMIC0_96_48_data_labelID                            229
-#define DMIC1_96_48_data_labelID                            230
-#define DMIC2_96_48_data_labelID                            231
-#define EANC_FBK_96_48_data_labelID                         232
-#define pDC_EANC_r2_labelID                                 233
-#define SIO_DMIC_labelID                                    234
-#define SIO_PDM_UL_labelID                                  235
-#define SIO_BT_VX_UL_labelID                                236
-#define SIO_MM_UL_labelID                                   237
-#define SIO_MM_UL2_labelID                                  238
-#define SIO_VX_UL_labelID                                   239
-#define SIO_MM_DL_labelID                                   240
-#define SIO_VX_DL_labelID                                   241
-#define SIO_TONES_DL_labelID                                242
-#define SIO_VIB_DL_labelID                                  243
-#define SIO_BT_VX_DL_labelID                                244
-#define SIO_PDM_DL_labelID                                  245
-#define SIO_MM_EXT_OUT_labelID                              246
-#define SIO_MM_EXT_IN_labelID                               247
-#define SIO_TDM_OUT_labelID                                 248
-#define SIO_TDM_IN_labelID                                  249
-#define DMIC_ATC_PTR_labelID                                250
-#define MCPDM_UL_ATC_PTR_labelID                            251
-#define BT_VX_UL_ATC_PTR_labelID                            252
-#define MM_UL_ATC_PTR_labelID                               253
-#define MM_UL2_ATC_PTR_labelID                              254
-#define VX_UL_ATC_PTR_labelID                               255
-#define MM_DL_ATC_PTR_labelID                               256
-#define VX_DL_ATC_PTR_labelID                               257
-#define TONES_DL_ATC_PTR_labelID                            258
-#define VIB_DL_ATC_PTR_labelID                              259
-#define BT_VX_DL_ATC_PTR_labelID                            260
-#define PDM_DL_ATC_PTR_labelID                              261
-#define MM_EXT_OUT_ATC_PTR_labelID                          262
-#define MM_EXT_IN_ATC_PTR_labelID                           263
-#define TDM_OUT_ATC_PTR_labelID                             264
-#define TDM_IN_ATC_PTR_labelID                              265
-#define MCU_IRQ_FIFO_ptr_labelID                            266
-#define DEBUG_IRQ_FIFO_reg_labelID                          267
-#define UP_DOWN_48_96_labelID                               268
-#define OSR96_2_labelID                                     269
-#define DEBUG_GAINS_labelID                                 270
-#define DBG_8K_PATTERN_labelID                              271
-#define DBG_16K_PATTERN_labelID                             272
-#define DBG_24K_PATTERN_labelID                             273
-#define DBG_48K_PATTERN_labelID                             274
-#define DBG_96K_PATTERN_labelID                             275
-#define UL_VX_UL_48_8K_labelID                              276
-#define UL_VX_UL_48_16K_labelID                             277
-#define BT_DL_labelID                                       278
-#define BT_UL_labelID                                       279
-#define BT_DL_8k_labelID                                    280
-#define BT_DL_16k_labelID                                   281
-#define BT_UL_8k_labelID                                    282
-#define BT_UL_16k_labelID                                   283
-#define MM_EXT_IN_labelID                                   284
-#define MM_EXT_IN_L_labelID                                 285
-#define MM_EXT_IN_R_labelID                                 286
-#define ECHO_REF_48_16_WRAP_labelID                         287
-#define ECHO_REF_48_8_WRAP_labelID                          288
-#define BT_UL_16_48_WRAP_labelID                            289
-#define BT_UL_8_48_WRAP_labelID                             290
-#define BT_DL_48_16_WRAP_labelID                            291
-#define BT_DL_48_8_WRAP_labelID                             292
-#define VX_DL_16_48_WRAP_labelID                            293
-#define VX_DL_8_48_WRAP_labelID                             294
-#define VX_UL_48_16_WRAP_labelID                            295
-#define VX_UL_48_8_WRAP_labelID                             296
-#define APS_DL1_IRQs_WRAP_labelID                           297
-#define APS_DL2_L_IRQs_WRAP_labelID                         298
-#define APS_DL2_R_IRQs_WRAP_labelID                         299
-#define ATC_NULL_BUFFER_labelID                             300
-#define MEM_INIT_hal_mem_labelID                            301
-#define MEM_INIT_write_mem_labelID                          302
-#define MEM_INIT_regs_labelID                               303
-#define GAIN_0DB_labelID                                    304
+#define EchoRef_L_labelID                                   67
+#define EchoRef_R_labelID                                   68
+#define MM_DL_L_labelID                                     69
+#define MM_DL_R_labelID                                     70
+#define MM_UL_labelID                                       71
+#define AMIC_96_labelID                                     72
+#define DMIC0_96_labelID                                    73
+#define DMIC1_96_labelID                                    74
+#define DMIC2_96_labelID                                    75
+#define UL_MIC_48K_labelID                                  76
+#define EQ_DL_48K_labelID                                   77
+#define EQ_48K_labelID                                      78
+#define McPDM_Out1_labelID                                  79
+#define McPDM_Out2_labelID                                  80
+#define McPDM_Out3_labelID                                  81
+#define VX_UL_MUX_labelID                                   82
+#define MM_UL2_MUX_labelID                                  83
+#define MM_UL_MUX_labelID                                   84
+#define XinASRC_DL_VX_labelID                               85
+#define ASRC_DL_VX_Coefs_labelID                            86
+#define ASRC_DL_VX_Alpha_labelID                            87
+#define ASRC_DL_VX_VarsBeta_labelID                         88
+#define ASRC_DL_VX_8k_Regs_labelID                          89
+#define XinASRC_UL_VX_labelID                               90
+#define ASRC_UL_VX_Coefs_labelID                            91
+#define ASRC_UL_VX_Alpha_labelID                            92
+#define ASRC_UL_VX_VarsBeta_labelID                         93
+#define ASRC_UL_VX_8k_Regs_labelID                          94
+#define UL_48_8_DEC_labelID                                 95
+#define ASRC_DL_VX_16k_Regs_labelID                         96
+#define ASRC_UL_VX_16k_Regs_labelID                         97
+#define UL_48_16_DEC_labelID                                98
+#define XinASRC_MM_EXT_IN_labelID                           99
+#define ASRC_MM_EXT_IN_Coefs_labelID                        100
+#define ASRC_MM_EXT_IN_Alpha_labelID                        101
+#define ASRC_MM_EXT_IN_VarsBeta_labelID                     102
+#define ASRC_MM_EXT_IN_Regs_labelID                         103
+#define VX_REC_labelID                                      104
+#define VXREC_UL_M_Tones_VX_UL_labelID                      105
+#define VX_REC_L_labelID                                    106
+#define VX_REC_R_labelID                                    107
+#define DL2_M_L_labelID                                     108
+#define DL2_M_R_labelID                                     109
+#define DL1_M_data_labelID                                  110
+#define DL1_M_Coefs_labelID                                 111
+#define DL2_M_LR_data_labelID                               112
+#define DL2_M_LR_Coefs_labelID                              113
+#define SRC_6_LP_COEFS_labelID                              114
+#define SRC_6_LP_GAIN_COEFS_labelID                         115
+#define SRC_6_HP_COEFS_labelID                              116
+#define SRC_3_LP_COEFS_labelID                              117
+#define SRC_3_LP_GAIN_COEFS_labelID                         118
+#define SRC_3_HP_COEFS_labelID                              119
+#define VX_DL_8_48_LP_DATA_labelID                          120
+#define VX_DL_8_48_HP_DATA_labelID                          121
+#define VX_DL_16_48_LP_DATA_labelID                         122
+#define VX_DL_16_48_HP_DATA_labelID                         123
+#define VX_UL_48_8_LP_DATA_labelID                          124
+#define VX_UL_48_8_HP_DATA_labelID                          125
+#define VX_UL_48_16_LP_DATA_labelID                         126
+#define VX_UL_48_16_HP_DATA_labelID                         127
+#define BT_UL_8_48_LP_DATA_labelID                          128
+#define BT_UL_8_48_HP_DATA_labelID                          129
+#define BT_UL_16_48_LP_DATA_labelID                         130
+#define BT_UL_16_48_HP_DATA_labelID                         131
+#define BT_DL_48_8_LP_DATA_labelID                          132
+#define BT_DL_48_8_HP_DATA_labelID                          133
+#define BT_DL_48_16_LP_DATA_labelID                         134
+#define BT_DL_48_16_HP_DATA_labelID                         135
+#define ECHO_REF_48_16_LP_DATA_labelID                      136
+#define ECHO_REF_48_16_HP_DATA_labelID                      137
+#define ECHO_REF_48_8_LP_DATA_labelID                       138
+#define ECHO_REF_48_8_HP_DATA_labelID                       139
+#define ECHO_REF_DEC_labelID                                140
+#define VX_UL_8_TEMP_labelID                                141
+#define VX_UL_16_TEMP_labelID                               142
+#define UP_DOWN_8_48_labelID                                143
+#define UP_DOWN_16_48_labelID                               144
+#define SRC_6_LP_48k_labelID                                145
+#define SRC_6_HP_labelID                                    146
+#define SRC_3_LP_48k_labelID                                147
+#define SRC_3_HP_labelID                                    148
+#define EARP_48_96_LP_DATA_labelID                          149
+#define SRC_48_96_LP_labelID                                150
+#define IHF_48_96_LP_DATA_labelID                           151
+#define EQ_VX_UL_16K_labelID                                152
+#define pAPS_iir1_p23_labelID                               153
+#define pAPS_iir1_p45_labelID                               154
+#define APS_IIR_Regs_labelID                                155
+#define pAPS_core_DL1_p1_labelID                            156
+#define pAPS_core_DL1_p23_labelID                           157
+#define pAPS_core_DL1_p45_labelID                           158
+#define pAPS_core_DL1_r_labelID                             159
+#define pAPS_DL2L_core_r_labelID                            160
+#define pAPS_DL2R_core_r_labelID                            161
+#define pAPS_COIL_core_DL1_p1_labelID                       162
+#define pAPS_COIL_core_DL1_p23_labelID                      163
+#define pAPS_COIL_core_DL1_p45_labelID                      164
+#define pAPS_COIL_core_DL1_r_labelID                        165
+#define DL2_L_APS_IIR_p23_labelID                           166
+#define DL2_R_APS_IIR_p23_labelID                           167
+#define DL2_L_APS_IIR_p45_labelID                           168
+#define DL2_R_APS_IIR_p45_labelID                           169
+#define DL2_L_APS_CORE_p1_labelID                           170
+#define DL2_L_APS_CORE_p23_labelID                          171
+#define DL2_L_APS_CORE_p45_labelID                          172
+#define DL2_R_APS_CORE_p1_labelID                           173
+#define DL2_R_APS_CORE_p23_labelID                          174
+#define DL2_R_APS_CORE_p45_labelID                          175
+#define DL2_L_APS_COIL_CORE_p1_labelID                      176
+#define DL2_L_APS_COIL_CORE_p23_labelID                     177
+#define DL2_L_APS_COIL_CORE_p45_labelID                     178
+#define pAPS_COIL_DL2L_core_r_labelID                       179
+#define DL2_R_APS_COIL_CORE_p1_labelID                      180
+#define DL2_R_APS_COIL_CORE_p23_labelID                     181
+#define DL2_R_APS_COIL_CORE_p45_labelID                     182
+#define pAPS_COIL_DL2R_core_r_labelID                       183
+#define DL1_APS_labelID                                     184
+#define DL2_L_APS_labelID                                   185
+#define DL2_R_APS_labelID                                   186
+#define DL1_APS_EQ_p23_labelID                              187
+#define DL1_APS_EQ_p45_labelID                              188
+#define DL2_APS_EQ_p23_labelID                              189
+#define DL2_APS_EQ_p45_labelID                              190
+#define pVIBRA1_p0_labelID                                  191
+#define pVIBRA1_p1_labelID                                  192
+#define pVIBRA1_p23_labelID                                 193
+#define pVIBRA1_p45_labelID                                 194
+#define pVibra1_pR1_labelID                                 195
+#define pVibra1_pR2_labelID                                 196
+#define pVibra1_pR3_labelID                                 197
+#define pVIBRA1_r_labelID                                   198
+#define pVIBRA2_p0_labelID                                  199
+#define pVIBRA2_p1_labelID                                  200
+#define pVIBRA2_p23_labelID                                 201
+#define pVIBRA2_p45_labelID                                 202
+#define pCtrl_p67_labelID                                   203
+#define pVIBRA2_r_labelID                                   204
+#define VIBRA_labelID                                       205
+#define PING_labelID                                        206
+#define PING_Regs_labelID                                   207
+#define UP_48_96_LP_COEFS_labelID                           208
+#define AMIC_96_48_data_labelID                             209
+#define DOWN_96_48_AMIC_Coefs_labelID                       210
+#define DOWN_96_48_DMIC_Coefs_labelID                       211
+#define DOWN_96_48_AMIC_Regs_labelID                        212
+#define DOWN_96_48_DMIC_Regs_labelID                        213
+#define DMIC0_96_48_data_labelID                            214
+#define DMIC1_96_48_data_labelID                            215
+#define DMIC2_96_48_data_labelID                            216
+#define SIO_DMIC_labelID                                    217
+#define SIO_PDM_UL_labelID                                  218
+#define SIO_BT_VX_UL_labelID                                219
+#define SIO_MM_UL_labelID                                   220
+#define SIO_MM_UL2_labelID                                  221
+#define SIO_VX_UL_labelID                                   222
+#define SIO_MM_DL_labelID                                   223
+#define SIO_VX_DL_labelID                                   224
+#define SIO_TONES_DL_labelID                                225
+#define SIO_VIB_DL_labelID                                  226
+#define SIO_BT_VX_DL_labelID                                227
+#define SIO_PDM_DL_labelID                                  228
+#define SIO_MM_EXT_OUT_labelID                              229
+#define SIO_MM_EXT_IN_labelID                               230
+#define SIO_TDM_OUT_labelID                                 231
+#define SIO_TDM_IN_labelID                                  232
+#define DMIC_ATC_PTR_labelID                                233
+#define MCPDM_UL_ATC_PTR_labelID                            234
+#define BT_VX_UL_ATC_PTR_labelID                            235
+#define MM_UL_ATC_PTR_labelID                               236
+#define MM_UL2_ATC_PTR_labelID                              237
+#define VX_UL_ATC_PTR_labelID                               238
+#define MM_DL_ATC_PTR_labelID                               239
+#define VX_DL_ATC_PTR_labelID                               240
+#define TONES_DL_ATC_PTR_labelID                            241
+#define VIB_DL_ATC_PTR_labelID                              242
+#define BT_VX_DL_ATC_PTR_labelID                            243
+#define PDM_DL_ATC_PTR_labelID                              244
+#define MM_EXT_OUT_ATC_PTR_labelID                          245
+#define MM_EXT_IN_ATC_PTR_labelID                           246
+#define TDM_OUT_ATC_PTR_labelID                             247
+#define TDM_IN_ATC_PTR_labelID                              248
+#define MCU_IRQ_FIFO_ptr_labelID                            249
+#define DEBUG_IRQ_FIFO_reg_labelID                          250
+#define UP_DOWN_48_96_labelID                               251
+#define OSR96_2_labelID                                     252
+#define DEBUG_GAINS_labelID                                 253
+#define DBG_8K_PATTERN_labelID                              254
+#define DBG_16K_PATTERN_labelID                             255
+#define DBG_24K_PATTERN_labelID                             256
+#define DBG_48K_PATTERN_labelID                             257
+#define DBG_96K_PATTERN_labelID                             258
+#define UL_VX_UL_48_8K_labelID                              259
+#define UL_VX_UL_48_16K_labelID                             260
+#define BT_DL_labelID                                       261
+#define BT_UL_labelID                                       262
+#define BT_DL_8k_labelID                                    263
+#define BT_DL_16k_labelID                                   264
+#define BT_UL_8k_labelID                                    265
+#define BT_UL_16k_labelID                                   266
+#define MM_EXT_IN_labelID                                   267
+#define MM_EXT_IN_L_labelID                                 268
+#define MM_EXT_IN_R_labelID                                 269
+#define ECHO_REF_48_16_WRAP_labelID                         270
+#define ECHO_REF_48_8_WRAP_labelID                          271
+#define BT_UL_16_48_WRAP_labelID                            272
+#define BT_UL_8_48_WRAP_labelID                             273
+#define BT_DL_48_16_WRAP_labelID                            274
+#define BT_DL_48_8_WRAP_labelID                             275
+#define VX_DL_16_48_WRAP_labelID                            276
+#define VX_DL_8_48_WRAP_labelID                             277
+#define VX_UL_48_16_WRAP_labelID                            278
+#define VX_UL_48_8_WRAP_labelID                             279
+#define APS_DL1_IRQs_WRAP_labelID                           280
+#define APS_DL2_L_IRQs_WRAP_labelID                         281
+#define APS_DL2_R_IRQs_WRAP_labelID                         282
+#define ATC_NULL_BUFFER_labelID                             283
+#define MEM_INIT_hal_mem_labelID                            284
+#define MEM_INIT_write_mem_labelID                          285
+#define MEM_INIT_regs_labelID                               286
+#define GAIN_0DB_labelID                                    287
+#define XinASRC_BT_UL_labelID                               288
+#define IO_BT_UL_ASRC_labelID                               289
+#define ASRC_BT_UL_Coefs_labelID                            290
+#define ASRC_BT_UL_Alpha_labelID                            291
+#define ASRC_BT_UL_VarsBeta_labelID                         292
+#define ASRC_BT_UL_8k_Regs_labelID                          293
+#define ASRC_BT_UL_16k_Regs_labelID                         294
+#define XinASRC_BT_DL_labelID                               295
+#define DL_48_8_DEC_labelID                                 296
+#define DL_48_16_DEC_labelID                                297
+#define BT_DL_8k_TEMP_labelID                               298
+#define BT_DL_16k_TEMP_labelID                              299
+#define BT_DL_8k_opp100_labelID                             300
+#define BT_DL_16k_opp100_labelID                            301
+#define ASRC_BT_DL_Coefs_labelID                            302
+#define ASRC_BT_DL_Alpha_labelID                            303
+#define ASRC_BT_DL_VarsBeta_labelID                         304
+#define ASRC_BT_DL_8k_Regs_labelID                          305
+#define ASRC_BT_DL_16k_Regs_labelID                         306
+#define BT_DL_48_8_OPP100_WRAP_labelID                      307
+#define BT_DL_48_16_OPP100_WRAP_labelID                     308
 #endif/* _ABE_INITXXXX_LABELS_H_ */
Index: Kernel/sound/soc/omap/abe/abe_lib.c
===================================================================
--- Kernel.orig/sound/soc/omap/abe/abe_lib.c	2011-01-19 00:14:18.532072173 +0530
+++ Kernel/sound/soc/omap/abe/abe_lib.c	2011-01-19 00:14:51.043321822 +0530
@@ -19,9 +19,6 @@
  * 02110-1301 USA
  */
 #include "abe_main.h"
-#if PC_SIMULATION
-#include <stdlib.h>
-#endif
 /**
 * abe_fprintf
 * @line: character line to be printed
Index: Kernel/sound/soc/omap/abe/abe_main.h
===================================================================
--- Kernel.orig/sound/soc/omap/abe/abe_main.h	2011-01-19 00:14:18.532072173 +0530
+++ Kernel/sound/soc/omap/abe/abe_main.h	2011-01-19 00:14:51.043321822 +0530
@@ -24,6 +24,8 @@
 #include "abe_dm_addr.h"
 #include "abe_sm_addr.h"
 #include "abe_cm_addr.h"
+#include "abe_define.h"
+#include "abe_fw.h"
 #include "abe_def.h"
 #include "abe_typ.h"
 #include "abe_ext.h"
@@ -43,5 +45,5 @@
 /* low-level log files */
 #define ABE_DEBUG_LL_LOG                0
 #define ABE_DEBUG (ABE_DEBUG_CHECKERS | ABE_DEBUG_HWFILE | ABE_DEBUG_LL_LOG)
-extern void abe_init_mem(void __iomem *_io_base);
 #endif /* _ABE_MAIN_H_ */
+
Index: Kernel/sound/soc/omap/abe/abe_mem.c
===================================================================
--- Kernel.orig/sound/soc/omap/abe/abe_mem.c	2011-01-19 00:14:18.532072173 +0530
+++ Kernel/sound/soc/omap/abe/abe_mem.c	2011-01-19 00:14:51.043321822 +0530
@@ -20,22 +20,6 @@
  */
 #include "abe_main.h"
 
-#define ABE_PMEM_BASE_OFFSET_MPU	0xe0000
-#define ABE_CMEM_BASE_OFFSET_MPU	0xa0000
-#define ABE_SMEM_BASE_OFFSET_MPU	0xc0000
-#define ABE_DMEM_BASE_OFFSET_MPU	0x80000
-#define ABE_ATC_BASE_OFFSET_MPU		0xf1000
-
-void __iomem *io_base;
-/**
- * abe_init_mem - Allocate Kernel space memory map for ABE
- *
- * Memory map of ABE memory space for PMEM/DMEM/SMEM/DMEM
- */
-void abe_init_mem(void __iomem *_io_base)
-{
-	io_base = _io_base;
-}
 /**
  * abe_block_copy
  * @direction: direction of the data move (Read/Write)
@@ -93,7 +77,7 @@
  *
  * Reset ABE memory
  */
-     void abe_reset_mem(u32 memory_bank, u32 address, u32 nb_bytes)
+void abe_reset_mem(u32 memory_bank, u32 address, u32 nb_bytes)
 {
 	u32 i;
 	u32 *dst_ptr, n;
@@ -114,27 +98,3 @@
 	for (i = 0; i < n; i++)
 		*dst_ptr++ = 0;
 }
-/**
- * abe_check_activity - Check if some ABE activity.
- *
- * Check if any ABE ports are running.
- * return 1: still activity on ABE
- * return 0: no more activity on ABE. Event generator can be stopped
- *
- */
-u32 abe_check_activity(void)
-{
-	u32 i;
-	u32 ret;
-
-	ret = 0;
-	for (i = 0; i < (LAST_PORT_ID - 1); i++) {
-		if (abe_port[abe_port_priority[i]].status ==
-				OMAP_ABE_PORT_ACTIVITY_RUNNING)
-			break;
-	}
-	if (i < (LAST_PORT_ID - 1))
-		ret = 1;
-
-	return ret;
-}
Index: Kernel/sound/soc/omap/abe/abe_ref.h
===================================================================
--- Kernel.orig/sound/soc/omap/abe/abe_ref.h	2011-01-19 00:14:18.532072173 +0530
+++ Kernel/sound/soc/omap/abe/abe_ref.h	2011-01-19 00:14:51.043321822 +0530
@@ -75,12 +75,19 @@
 void abe_init_asrc_vx_dl(s32 dppm);
 void abe_init_asrc_vx_ul(s32 dppm);
 void abe_init_asrc_mm_ext_in(s32 dppm);
+void abe_init_asrc_bt_ul(s32 dppm);
+void abe_init_asrc_bt_dl(s32 dppm);
 //u8 *memmove(u8 *dst, u8 *src, u32 n);
 //u32 __get_unaligned_memmove32(void *p);
 //void __put_unaligned_memmove32(u32 val, void *p);
 /*
  * HAL INTERNAL DATA
  */
+extern void __iomem *io_base;
+extern u16 MultiFrame[PROCESSING_SLOTS][TASKS_IN_SLOT];
+extern ABE_SIODescriptor sio_desc;
+extern ABE_SPingPongDescriptor desc_pp;
+extern abe_satcdescriptor_aess atc_desc;
 extern const u32 abe_port_priority[LAST_PORT_ID - 1];
 extern u32 abe_compensated_mixer_gain;
 extern u8 abe_muted_gains_indicator[MAX_NBGAIN_CMEM];
Index: Kernel/sound/soc/omap/abe/abe_sm_addr.h
===================================================================
--- Kernel.orig/sound/soc/omap/abe/abe_sm_addr.h	2011-01-14 00:04:13.464343835 +0530
+++ Kernel/sound/soc/omap/abe/abe_sm_addr.h	2011-01-19 00:14:51.053321509 +0530
@@ -21,498 +21,483 @@
 #ifndef _ABE_SM_ADDR_H_
 #define _ABE_SM_ADDR_H_
 #define init_SM_ADDR                                        0
-#define init_SM_ADDR_END                                    305
-#define init_SM_sizeof                                      306
-#define S_Data0_ADDR                                        306
-#define S_Data0_ADDR_END                                    306
+#define init_SM_ADDR_END                                    309
+#define init_SM_sizeof                                      310
+#define S_Data0_ADDR                                        310
+#define S_Data0_ADDR_END                                    310
 #define S_Data0_sizeof                                      1
-#define S_Temp_ADDR                                         307
-#define S_Temp_ADDR_END                                     307
+#define S_Temp_ADDR                                         311
+#define S_Temp_ADDR_END                                     311
 #define S_Temp_sizeof                                       1
-#define S_PhoenixOffset_ADDR                                308
-#define S_PhoenixOffset_ADDR_END                            308
+#define S_PhoenixOffset_ADDR                                312
+#define S_PhoenixOffset_ADDR_END                            312
 #define S_PhoenixOffset_sizeof                              1
-#define S_GTarget1_ADDR                                     309
-#define S_GTarget1_ADDR_END                                 315
+#define S_GTarget1_ADDR                                     313
+#define S_GTarget1_ADDR_END                                 319
 #define S_GTarget1_sizeof                                   7
-#define S_Gtarget_DL1_ADDR                                  316
-#define S_Gtarget_DL1_ADDR_END                              317
+#define S_Gtarget_DL1_ADDR                                  320
+#define S_Gtarget_DL1_ADDR_END                              321
 #define S_Gtarget_DL1_sizeof                                2
-#define S_Gtarget_DL2_ADDR                                  318
-#define S_Gtarget_DL2_ADDR_END                              319
+#define S_Gtarget_DL2_ADDR                                  322
+#define S_Gtarget_DL2_ADDR_END                              323
 #define S_Gtarget_DL2_sizeof                                2
-#define S_Gtarget_Echo_ADDR                                 320
-#define S_Gtarget_Echo_ADDR_END                             320
+#define S_Gtarget_Echo_ADDR                                 324
+#define S_Gtarget_Echo_ADDR_END                             324
 #define S_Gtarget_Echo_sizeof                               1
-#define S_Gtarget_SDT_ADDR                                  321
-#define S_Gtarget_SDT_ADDR_END                              321
+#define S_Gtarget_SDT_ADDR                                  325
+#define S_Gtarget_SDT_ADDR_END                              325
 #define S_Gtarget_SDT_sizeof                                1
-#define S_Gtarget_VxRec_ADDR                                322
-#define S_Gtarget_VxRec_ADDR_END                            323
+#define S_Gtarget_VxRec_ADDR                                326
+#define S_Gtarget_VxRec_ADDR_END                            327
 #define S_Gtarget_VxRec_sizeof                              2
-#define S_Gtarget_UL_ADDR                                   324
-#define S_Gtarget_UL_ADDR_END                               325
+#define S_Gtarget_UL_ADDR                                   328
+#define S_Gtarget_UL_ADDR_END                               329
 #define S_Gtarget_UL_sizeof                                 2
-#define S_Gtarget_unused_ADDR                               326
-#define S_Gtarget_unused_ADDR_END                           326
+#define S_Gtarget_unused_ADDR                               330
+#define S_Gtarget_unused_ADDR_END                           330
 #define S_Gtarget_unused_sizeof                             1
-#define S_GCurrent_ADDR                                     327
-#define S_GCurrent_ADDR_END                                 344
+#define S_GCurrent_ADDR                                     331
+#define S_GCurrent_ADDR_END                                 348
 #define S_GCurrent_sizeof                                   18
-#define S_GAIN_ONE_ADDR                                     345
-#define S_GAIN_ONE_ADDR_END                                 345
+#define S_GAIN_ONE_ADDR                                     349
+#define S_GAIN_ONE_ADDR_END                                 349
 #define S_GAIN_ONE_sizeof                                   1
-#define S_Tones_ADDR                                        346
-#define S_Tones_ADDR_END                                    357
+#define S_Tones_ADDR                                        350
+#define S_Tones_ADDR_END                                    361
 #define S_Tones_sizeof                                      12
-#define S_VX_DL_ADDR                                        358
-#define S_VX_DL_ADDR_END                                    369
+#define S_VX_DL_ADDR                                        362
+#define S_VX_DL_ADDR_END                                    373
 #define S_VX_DL_sizeof                                      12
-#define S_MM_UL2_ADDR                                       370
-#define S_MM_UL2_ADDR_END                                   381
+#define S_MM_UL2_ADDR                                       374
+#define S_MM_UL2_ADDR_END                                   385
 #define S_MM_UL2_sizeof                                     12
-#define S_MM_DL_ADDR                                        382
-#define S_MM_DL_ADDR_END                                    393
+#define S_MM_DL_ADDR                                        386
+#define S_MM_DL_ADDR_END                                    397
 #define S_MM_DL_sizeof                                      12
-#define S_DL1_M_Out_ADDR                                    394
-#define S_DL1_M_Out_ADDR_END                                405
+#define S_DL1_M_Out_ADDR                                    398
+#define S_DL1_M_Out_ADDR_END                                409
 #define S_DL1_M_Out_sizeof                                  12
-#define S_DL2_M_Out_ADDR                                    406
-#define S_DL2_M_Out_ADDR_END                                417
+#define S_DL2_M_Out_ADDR                                    410
+#define S_DL2_M_Out_ADDR_END                                421
 #define S_DL2_M_Out_sizeof                                  12
-#define S_Echo_M_Out_ADDR                                   418
-#define S_Echo_M_Out_ADDR_END                               429
+#define S_Echo_M_Out_ADDR                                   422
+#define S_Echo_M_Out_ADDR_END                               433
 #define S_Echo_M_Out_sizeof                                 12
-#define S_SDT_M_Out_ADDR                                    430
-#define S_SDT_M_Out_ADDR_END                                441
+#define S_SDT_M_Out_ADDR                                    434
+#define S_SDT_M_Out_ADDR_END                                445
 #define S_SDT_M_Out_sizeof                                  12
-#define S_VX_UL_ADDR                                        442
-#define S_VX_UL_ADDR_END                                    453
+#define S_VX_UL_ADDR                                        446
+#define S_VX_UL_ADDR_END                                    457
 #define S_VX_UL_sizeof                                      12
-#define S_VX_UL_M_ADDR                                      454
-#define S_VX_UL_M_ADDR_END                                  465
+#define S_VX_UL_M_ADDR                                      458
+#define S_VX_UL_M_ADDR_END                                  469
 #define S_VX_UL_M_sizeof                                    12
-#define S_BT_DL_ADDR                                        466
-#define S_BT_DL_ADDR_END                                    477
+#define S_BT_DL_ADDR                                        470
+#define S_BT_DL_ADDR_END                                    481
 #define S_BT_DL_sizeof                                      12
-#define S_BT_UL_ADDR                                        478
-#define S_BT_UL_ADDR_END                                    489
+#define S_BT_UL_ADDR                                        482
+#define S_BT_UL_ADDR_END                                    493
 #define S_BT_UL_sizeof                                      12
-#define S_BT_DL_8k_ADDR                                     490
-#define S_BT_DL_8k_ADDR_END                                 491
-#define S_BT_DL_8k_sizeof                                   2
-#define S_BT_DL_16k_ADDR                                    492
-#define S_BT_DL_16k_ADDR_END                                495
-#define S_BT_DL_16k_sizeof                                  4
-#define S_BT_UL_8k_ADDR                                     496
-#define S_BT_UL_8k_ADDR_END                                 497
+#define S_BT_DL_8k_ADDR                                     494
+#define S_BT_DL_8k_ADDR_END                                 496
+#define S_BT_DL_8k_sizeof                                   3
+#define S_BT_DL_16k_ADDR                                    497
+#define S_BT_DL_16k_ADDR_END                                501
+#define S_BT_DL_16k_sizeof                                  5
+#define S_BT_UL_8k_ADDR                                     502
+#define S_BT_UL_8k_ADDR_END                                 503
 #define S_BT_UL_8k_sizeof                                   2
-#define S_BT_UL_16k_ADDR                                    498
-#define S_BT_UL_16k_ADDR_END                                501
+#define S_BT_UL_16k_ADDR                                    504
+#define S_BT_UL_16k_ADDR_END                                507
 #define S_BT_UL_16k_sizeof                                  4
-#define S_SDT_F_ADDR                                        502
-#define S_SDT_F_ADDR_END                                    513
+#define S_SDT_F_ADDR                                        508
+#define S_SDT_F_ADDR_END                                    519
 #define S_SDT_F_sizeof                                      12
-#define S_SDT_F_data_ADDR                                   514
-#define S_SDT_F_data_ADDR_END                               522
+#define S_SDT_F_data_ADDR                                   520
+#define S_SDT_F_data_ADDR_END                               528
 #define S_SDT_F_data_sizeof                                 9
-#define S_MM_DL_OSR_ADDR                                    523
-#define S_MM_DL_OSR_ADDR_END                                546
+#define S_MM_DL_OSR_ADDR                                    529
+#define S_MM_DL_OSR_ADDR_END                                552
 #define S_MM_DL_OSR_sizeof                                  24
-#define S_24_zeros_ADDR                                     547
-#define S_24_zeros_ADDR_END                                 570
+#define S_24_zeros_ADDR                                     553
+#define S_24_zeros_ADDR_END                                 576
 #define S_24_zeros_sizeof                                   24
-#define S_DMIC1_ADDR                                        571
-#define S_DMIC1_ADDR_END                                    582
+#define S_DMIC1_ADDR                                        577
+#define S_DMIC1_ADDR_END                                    588
 #define S_DMIC1_sizeof                                      12
-#define S_DMIC2_ADDR                                        583
-#define S_DMIC2_ADDR_END                                    594
+#define S_DMIC2_ADDR                                        589
+#define S_DMIC2_ADDR_END                                    600
 #define S_DMIC2_sizeof                                      12
-#define S_DMIC3_ADDR                                        595
-#define S_DMIC3_ADDR_END                                    606
+#define S_DMIC3_ADDR                                        601
+#define S_DMIC3_ADDR_END                                    612
 #define S_DMIC3_sizeof                                      12
-#define S_AMIC_ADDR                                         607
-#define S_AMIC_ADDR_END                                     618
+#define S_AMIC_ADDR                                         613
+#define S_AMIC_ADDR_END                                     624
 #define S_AMIC_sizeof                                       12
-#define S_EANC_FBK_in_ADDR                                  619
-#define S_EANC_FBK_in_ADDR_END                              642
-#define S_EANC_FBK_in_sizeof                                24
-#define S_EANC_FBK_out_ADDR                                 643
-#define S_EANC_FBK_out_ADDR_END                             654
-#define S_EANC_FBK_out_sizeof                               12
-#define S_DMIC1_L_ADDR                                      655
-#define S_DMIC1_L_ADDR_END                                  666
+#define S_DMIC1_L_ADDR                                      625
+#define S_DMIC1_L_ADDR_END                                  636
 #define S_DMIC1_L_sizeof                                    12
-#define S_DMIC1_R_ADDR                                      667
-#define S_DMIC1_R_ADDR_END                                  678
+#define S_DMIC1_R_ADDR                                      637
+#define S_DMIC1_R_ADDR_END                                  648
 #define S_DMIC1_R_sizeof                                    12
-#define S_DMIC2_L_ADDR                                      679
-#define S_DMIC2_L_ADDR_END                                  690
+#define S_DMIC2_L_ADDR                                      649
+#define S_DMIC2_L_ADDR_END                                  660
 #define S_DMIC2_L_sizeof                                    12
-#define S_DMIC2_R_ADDR                                      691
-#define S_DMIC2_R_ADDR_END                                  702
+#define S_DMIC2_R_ADDR                                      661
+#define S_DMIC2_R_ADDR_END                                  672
 #define S_DMIC2_R_sizeof                                    12
-#define S_DMIC3_L_ADDR                                      703
-#define S_DMIC3_L_ADDR_END                                  714
+#define S_DMIC3_L_ADDR                                      673
+#define S_DMIC3_L_ADDR_END                                  684
 #define S_DMIC3_L_sizeof                                    12
-#define S_DMIC3_R_ADDR                                      715
-#define S_DMIC3_R_ADDR_END                                  726
+#define S_DMIC3_R_ADDR                                      685
+#define S_DMIC3_R_ADDR_END                                  696
 #define S_DMIC3_R_sizeof                                    12
-#define S_BT_UL_L_ADDR                                      727
-#define S_BT_UL_L_ADDR_END                                  738
+#define S_BT_UL_L_ADDR                                      697
+#define S_BT_UL_L_ADDR_END                                  708
 #define S_BT_UL_L_sizeof                                    12
-#define S_BT_UL_R_ADDR                                      739
-#define S_BT_UL_R_ADDR_END                                  750
+#define S_BT_UL_R_ADDR                                      709
+#define S_BT_UL_R_ADDR_END                                  720
 #define S_BT_UL_R_sizeof                                    12
-#define S_AMIC_L_ADDR                                       751
-#define S_AMIC_L_ADDR_END                                   762
+#define S_AMIC_L_ADDR                                       721
+#define S_AMIC_L_ADDR_END                                   732
 #define S_AMIC_L_sizeof                                     12
-#define S_AMIC_R_ADDR                                       763
-#define S_AMIC_R_ADDR_END                                   774
+#define S_AMIC_R_ADDR                                       733
+#define S_AMIC_R_ADDR_END                                   744
 #define S_AMIC_R_sizeof                                     12
-#define S_EANC_FBK_L_ADDR                                   775
-#define S_EANC_FBK_L_ADDR_END                               786
-#define S_EANC_FBK_L_sizeof                                 12
-#define S_EANC_FBK_R_ADDR                                   787
-#define S_EANC_FBK_R_ADDR_END                               798
-#define S_EANC_FBK_R_sizeof                                 12
-#define S_EchoRef_L_ADDR                                    799
-#define S_EchoRef_L_ADDR_END                                810
+#define S_EchoRef_L_ADDR                                    745
+#define S_EchoRef_L_ADDR_END                                756
 #define S_EchoRef_L_sizeof                                  12
-#define S_EchoRef_R_ADDR                                    811
-#define S_EchoRef_R_ADDR_END                                822
+#define S_EchoRef_R_ADDR                                    757
+#define S_EchoRef_R_ADDR_END                                768
 #define S_EchoRef_R_sizeof                                  12
-#define S_MM_DL_L_ADDR                                      823
-#define S_MM_DL_L_ADDR_END                                  834
+#define S_MM_DL_L_ADDR                                      769
+#define S_MM_DL_L_ADDR_END                                  780
 #define S_MM_DL_L_sizeof                                    12
-#define S_MM_DL_R_ADDR                                      835
-#define S_MM_DL_R_ADDR_END                                  846
+#define S_MM_DL_R_ADDR                                      781
+#define S_MM_DL_R_ADDR_END                                  792
 #define S_MM_DL_R_sizeof                                    12
-#define S_MM_UL_ADDR                                        847
-#define S_MM_UL_ADDR_END                                    966
+#define S_MM_UL_ADDR                                        793
+#define S_MM_UL_ADDR_END                                    912
 #define S_MM_UL_sizeof                                      120
-#define S_AMIC_96k_ADDR                                     967
-#define S_AMIC_96k_ADDR_END                                 990
+#define S_AMIC_96k_ADDR                                     913
+#define S_AMIC_96k_ADDR_END                                 936
 #define S_AMIC_96k_sizeof                                   24
-#define S_DMIC0_96k_ADDR                                    991
-#define S_DMIC0_96k_ADDR_END                                1014
+#define S_DMIC0_96k_ADDR                                    937
+#define S_DMIC0_96k_ADDR_END                                960
 #define S_DMIC0_96k_sizeof                                  24
-#define S_DMIC1_96k_ADDR                                    1015
-#define S_DMIC1_96k_ADDR_END                                1038
+#define S_DMIC1_96k_ADDR                                    961
+#define S_DMIC1_96k_ADDR_END                                984
 #define S_DMIC1_96k_sizeof                                  24
-#define S_DMIC2_96k_ADDR                                    1039
-#define S_DMIC2_96k_ADDR_END                                1062
+#define S_DMIC2_96k_ADDR                                    985
+#define S_DMIC2_96k_ADDR_END                                1008
 #define S_DMIC2_96k_sizeof                                  24
-#define S_UL_VX_UL_48_8K_ADDR                               1063
-#define S_UL_VX_UL_48_8K_ADDR_END                           1074
+#define S_UL_VX_UL_48_8K_ADDR                               1009
+#define S_UL_VX_UL_48_8K_ADDR_END                           1020
 #define S_UL_VX_UL_48_8K_sizeof                             12
-#define S_UL_VX_UL_48_16K_ADDR                              1075
-#define S_UL_VX_UL_48_16K_ADDR_END                          1086
+#define S_UL_VX_UL_48_16K_ADDR                              1021
+#define S_UL_VX_UL_48_16K_ADDR_END                          1032
 #define S_UL_VX_UL_48_16K_sizeof                            12
-#define S_UL_MIC_48K_ADDR                                   1087
-#define S_UL_MIC_48K_ADDR_END                               1098
+#define S_UL_MIC_48K_ADDR                                   1033
+#define S_UL_MIC_48K_ADDR_END                               1044
 #define S_UL_MIC_48K_sizeof                                 12
-#define S_Voice_8k_UL_ADDR                                  1099
-#define S_Voice_8k_UL_ADDR_END                              1101
+#define S_Voice_8k_UL_ADDR                                  1045
+#define S_Voice_8k_UL_ADDR_END                              1047
 #define S_Voice_8k_UL_sizeof                                3
-#define S_Voice_8k_DL_ADDR                                  1102
-#define S_Voice_8k_DL_ADDR_END                              1103
+#define S_Voice_8k_DL_ADDR                                  1048
+#define S_Voice_8k_DL_ADDR_END                              1049
 #define S_Voice_8k_DL_sizeof                                2
-#define S_McPDM_Out1_ADDR                                   1104
-#define S_McPDM_Out1_ADDR_END                               1127
+#define S_McPDM_Out1_ADDR                                   1050
+#define S_McPDM_Out1_ADDR_END                               1073
 #define S_McPDM_Out1_sizeof                                 24
-#define S_McPDM_Out2_ADDR                                   1128
-#define S_McPDM_Out2_ADDR_END                               1151
+#define S_McPDM_Out2_ADDR                                   1074
+#define S_McPDM_Out2_ADDR_END                               1097
 #define S_McPDM_Out2_sizeof                                 24
-#define S_McPDM_Out3_ADDR                                   1152
-#define S_McPDM_Out3_ADDR_END                               1175
+#define S_McPDM_Out3_ADDR                                   1098
+#define S_McPDM_Out3_ADDR_END                               1121
 #define S_McPDM_Out3_sizeof                                 24
-#define S_Voice_16k_UL_ADDR                                 1176
-#define S_Voice_16k_UL_ADDR_END                             1180
+#define S_Voice_16k_UL_ADDR                                 1122
+#define S_Voice_16k_UL_ADDR_END                             1126
 #define S_Voice_16k_UL_sizeof                               5
-#define S_Voice_16k_DL_ADDR                                 1181
-#define S_Voice_16k_DL_ADDR_END                             1184
+#define S_Voice_16k_DL_ADDR                                 1127
+#define S_Voice_16k_DL_ADDR_END                             1130
 #define S_Voice_16k_DL_sizeof                               4
-#define S_XinASRC_DL_VX_ADDR                                1185
-#define S_XinASRC_DL_VX_ADDR_END                            1224
+#define S_XinASRC_DL_VX_ADDR                                1131
+#define S_XinASRC_DL_VX_ADDR_END                            1170
 #define S_XinASRC_DL_VX_sizeof                              40
-#define S_XinASRC_UL_VX_ADDR                                1225
-#define S_XinASRC_UL_VX_ADDR_END                            1264
+#define S_XinASRC_UL_VX_ADDR                                1171
+#define S_XinASRC_UL_VX_ADDR_END                            1210
 #define S_XinASRC_UL_VX_sizeof                              40
-#define S_XinASRC_MM_EXT_IN_ADDR                            1265
-#define S_XinASRC_MM_EXT_IN_ADDR_END                        1304
+#define S_XinASRC_MM_EXT_IN_ADDR                            1211
+#define S_XinASRC_MM_EXT_IN_ADDR_END                        1250
 #define S_XinASRC_MM_EXT_IN_sizeof                          40
-#define S_VX_REC_ADDR                                       1305
-#define S_VX_REC_ADDR_END                                   1316
+#define S_VX_REC_ADDR                                       1251
+#define S_VX_REC_ADDR_END                                   1262
 #define S_VX_REC_sizeof                                     12
-#define S_VX_REC_L_ADDR                                     1317
-#define S_VX_REC_L_ADDR_END                                 1328
+#define S_VX_REC_L_ADDR                                     1263
+#define S_VX_REC_L_ADDR_END                                 1274
 #define S_VX_REC_L_sizeof                                   12
-#define S_VX_REC_R_ADDR                                     1329
-#define S_VX_REC_R_ADDR_END                                 1340
+#define S_VX_REC_R_ADDR                                     1275
+#define S_VX_REC_R_ADDR_END                                 1286
 #define S_VX_REC_R_sizeof                                   12
-#define S_DL2_M_L_ADDR                                      1341
-#define S_DL2_M_L_ADDR_END                                  1352
+#define S_DL2_M_L_ADDR                                      1287
+#define S_DL2_M_L_ADDR_END                                  1298
 #define S_DL2_M_L_sizeof                                    12
-#define S_DL2_M_R_ADDR                                      1353
-#define S_DL2_M_R_ADDR_END                                  1364
+#define S_DL2_M_R_ADDR                                      1299
+#define S_DL2_M_R_ADDR_END                                  1310
 #define S_DL2_M_R_sizeof                                    12
-#define S_DL2_M_LR_EQ_data_ADDR                             1365
-#define S_DL2_M_LR_EQ_data_ADDR_END                         1389
+#define S_DL2_M_LR_EQ_data_ADDR                             1311
+#define S_DL2_M_LR_EQ_data_ADDR_END                         1335
 #define S_DL2_M_LR_EQ_data_sizeof                           25
-#define S_DL1_M_EQ_data_ADDR                                1390
-#define S_DL1_M_EQ_data_ADDR_END                            1414
+#define S_DL1_M_EQ_data_ADDR                                1336
+#define S_DL1_M_EQ_data_ADDR_END                            1360
 #define S_DL1_M_EQ_data_sizeof                              25
-#define S_EARP_48_96_LP_data_ADDR                           1415
-#define S_EARP_48_96_LP_data_ADDR_END                       1429
+#define S_EARP_48_96_LP_data_ADDR                           1361
+#define S_EARP_48_96_LP_data_ADDR_END                       1375
 #define S_EARP_48_96_LP_data_sizeof                         15
-#define S_IHF_48_96_LP_data_ADDR                            1430
-#define S_IHF_48_96_LP_data_ADDR_END                        1444
+#define S_IHF_48_96_LP_data_ADDR                            1376
+#define S_IHF_48_96_LP_data_ADDR_END                        1390
 #define S_IHF_48_96_LP_data_sizeof                          15
-#define S_VX_UL_8_TEMP_ADDR                                 1445
-#define S_VX_UL_8_TEMP_ADDR_END                             1446
+#define S_VX_UL_8_TEMP_ADDR                                 1391
+#define S_VX_UL_8_TEMP_ADDR_END                             1392
 #define S_VX_UL_8_TEMP_sizeof                               2
-#define S_VX_UL_16_TEMP_ADDR                                1447
-#define S_VX_UL_16_TEMP_ADDR_END                            1450
+#define S_VX_UL_16_TEMP_ADDR                                1393
+#define S_VX_UL_16_TEMP_ADDR_END                            1396
 #define S_VX_UL_16_TEMP_sizeof                              4
-#define S_VX_DL_8_48_LP_data_ADDR                           1451
-#define S_VX_DL_8_48_LP_data_ADDR_END                       1461
+#define S_VX_DL_8_48_LP_data_ADDR                           1397
+#define S_VX_DL_8_48_LP_data_ADDR_END                       1407
 #define S_VX_DL_8_48_LP_data_sizeof                         11
-#define S_VX_DL_8_48_HP_data_ADDR                           1462
-#define S_VX_DL_8_48_HP_data_ADDR_END                       1468
+#define S_VX_DL_8_48_HP_data_ADDR                           1408
+#define S_VX_DL_8_48_HP_data_ADDR_END                       1414
 #define S_VX_DL_8_48_HP_data_sizeof                         7
-#define S_VX_DL_16_48_LP_data_ADDR                          1469
-#define S_VX_DL_16_48_LP_data_ADDR_END                      1479
+#define S_VX_DL_16_48_LP_data_ADDR                          1415
+#define S_VX_DL_16_48_LP_data_ADDR_END                      1425
 #define S_VX_DL_16_48_LP_data_sizeof                        11
-#define S_VX_DL_16_48_HP_data_ADDR                          1480
-#define S_VX_DL_16_48_HP_data_ADDR_END                      1484
+#define S_VX_DL_16_48_HP_data_ADDR                          1426
+#define S_VX_DL_16_48_HP_data_ADDR_END                      1430
 #define S_VX_DL_16_48_HP_data_sizeof                        5
-#define S_VX_UL_48_8_LP_data_ADDR                           1485
-#define S_VX_UL_48_8_LP_data_ADDR_END                       1495
+#define S_VX_UL_48_8_LP_data_ADDR                           1431
+#define S_VX_UL_48_8_LP_data_ADDR_END                       1441
 #define S_VX_UL_48_8_LP_data_sizeof                         11
-#define S_VX_UL_48_8_HP_data_ADDR                           1496
-#define S_VX_UL_48_8_HP_data_ADDR_END                       1502
+#define S_VX_UL_48_8_HP_data_ADDR                           1442
+#define S_VX_UL_48_8_HP_data_ADDR_END                       1448
 #define S_VX_UL_48_8_HP_data_sizeof                         7
-#define S_VX_UL_48_16_LP_data_ADDR                          1503
-#define S_VX_UL_48_16_LP_data_ADDR_END                      1513
+#define S_VX_UL_48_16_LP_data_ADDR                          1449
+#define S_VX_UL_48_16_LP_data_ADDR_END                      1459
 #define S_VX_UL_48_16_LP_data_sizeof                        11
-#define S_VX_UL_48_16_HP_data_ADDR                          1514
-#define S_VX_UL_48_16_HP_data_ADDR_END                      1520
+#define S_VX_UL_48_16_HP_data_ADDR                          1460
+#define S_VX_UL_48_16_HP_data_ADDR_END                      1466
 #define S_VX_UL_48_16_HP_data_sizeof                        7
-#define S_BT_UL_8_48_LP_data_ADDR                           1521
-#define S_BT_UL_8_48_LP_data_ADDR_END                       1531
+#define S_BT_UL_8_48_LP_data_ADDR                           1467
+#define S_BT_UL_8_48_LP_data_ADDR_END                       1477
 #define S_BT_UL_8_48_LP_data_sizeof                         11
-#define S_BT_UL_8_48_HP_data_ADDR                           1532
-#define S_BT_UL_8_48_HP_data_ADDR_END                       1538
+#define S_BT_UL_8_48_HP_data_ADDR                           1478
+#define S_BT_UL_8_48_HP_data_ADDR_END                       1484
 #define S_BT_UL_8_48_HP_data_sizeof                         7
-#define S_BT_UL_16_48_LP_data_ADDR                          1539
-#define S_BT_UL_16_48_LP_data_ADDR_END                      1549
+#define S_BT_UL_16_48_LP_data_ADDR                          1485
+#define S_BT_UL_16_48_LP_data_ADDR_END                      1495
 #define S_BT_UL_16_48_LP_data_sizeof                        11
-#define S_BT_UL_16_48_HP_data_ADDR                          1550
-#define S_BT_UL_16_48_HP_data_ADDR_END                      1554
+#define S_BT_UL_16_48_HP_data_ADDR                          1496
+#define S_BT_UL_16_48_HP_data_ADDR_END                      1500
 #define S_BT_UL_16_48_HP_data_sizeof                        5
-#define S_BT_DL_48_8_LP_data_ADDR                           1555
-#define S_BT_DL_48_8_LP_data_ADDR_END                       1565
+#define S_BT_DL_48_8_LP_data_ADDR                           1501
+#define S_BT_DL_48_8_LP_data_ADDR_END                       1511
 #define S_BT_DL_48_8_LP_data_sizeof                         11
-#define S_BT_DL_48_8_HP_data_ADDR                           1566
-#define S_BT_DL_48_8_HP_data_ADDR_END                       1572
+#define S_BT_DL_48_8_HP_data_ADDR                           1512
+#define S_BT_DL_48_8_HP_data_ADDR_END                       1518
 #define S_BT_DL_48_8_HP_data_sizeof                         7
-#define S_BT_DL_48_16_LP_data_ADDR                          1573
-#define S_BT_DL_48_16_LP_data_ADDR_END                      1583
+#define S_BT_DL_48_16_LP_data_ADDR                          1519
+#define S_BT_DL_48_16_LP_data_ADDR_END                      1529
 #define S_BT_DL_48_16_LP_data_sizeof                        11
-#define S_BT_DL_48_16_HP_data_ADDR                          1584
-#define S_BT_DL_48_16_HP_data_ADDR_END                      1588
+#define S_BT_DL_48_16_HP_data_ADDR                          1530
+#define S_BT_DL_48_16_HP_data_ADDR_END                      1534
 #define S_BT_DL_48_16_HP_data_sizeof                        5
-#define S_ECHO_REF_48_8_LP_data_ADDR                        1589
-#define S_ECHO_REF_48_8_LP_data_ADDR_END                    1599
+#define S_ECHO_REF_48_8_LP_data_ADDR                        1535
+#define S_ECHO_REF_48_8_LP_data_ADDR_END                    1545
 #define S_ECHO_REF_48_8_LP_data_sizeof                      11
-#define S_ECHO_REF_48_8_HP_data_ADDR                        1600
-#define S_ECHO_REF_48_8_HP_data_ADDR_END                    1606
+#define S_ECHO_REF_48_8_HP_data_ADDR                        1546
+#define S_ECHO_REF_48_8_HP_data_ADDR_END                    1552
 #define S_ECHO_REF_48_8_HP_data_sizeof                      7
-#define S_ECHO_REF_48_16_LP_data_ADDR                       1607
-#define S_ECHO_REF_48_16_LP_data_ADDR_END                   1617
+#define S_ECHO_REF_48_16_LP_data_ADDR                       1553
+#define S_ECHO_REF_48_16_LP_data_ADDR_END                   1563
 #define S_ECHO_REF_48_16_LP_data_sizeof                     11
-#define S_ECHO_REF_48_16_HP_data_ADDR                       1618
-#define S_ECHO_REF_48_16_HP_data_ADDR_END                   1622
+#define S_ECHO_REF_48_16_HP_data_ADDR                       1564
+#define S_ECHO_REF_48_16_HP_data_ADDR_END                   1568
 #define S_ECHO_REF_48_16_HP_data_sizeof                     5
-#define S_EANC_IIR_data_ADDR                                1623
-#define S_EANC_IIR_data_ADDR_END                            1639
-#define S_EANC_IIR_data_sizeof                              17
-#define S_EANC_SignalTemp_ADDR                              1640
-#define S_EANC_SignalTemp_ADDR_END                          1660
-#define S_EANC_SignalTemp_sizeof                            21
-#define S_EANC_Input_ADDR                                   1661
-#define S_EANC_Input_ADDR_END                               1661
-#define S_EANC_Input_sizeof                                 1
-#define S_EANC_Output_ADDR                                  1662
-#define S_EANC_Output_ADDR_END                              1662
-#define S_EANC_Output_sizeof                                1
-#define S_APS_IIRmem1_ADDR                                  1663
-#define S_APS_IIRmem1_ADDR_END                              1671
+#define S_APS_IIRmem1_ADDR                                  1569
+#define S_APS_IIRmem1_ADDR_END                              1577
 #define S_APS_IIRmem1_sizeof                                9
-#define S_APS_M_IIRmem2_ADDR                                1672
-#define S_APS_M_IIRmem2_ADDR_END                            1674
+#define S_APS_M_IIRmem2_ADDR                                1578
+#define S_APS_M_IIRmem2_ADDR_END                            1580
 #define S_APS_M_IIRmem2_sizeof                              3
-#define S_APS_C_IIRmem2_ADDR                                1675
-#define S_APS_C_IIRmem2_ADDR_END                            1677
+#define S_APS_C_IIRmem2_ADDR                                1581
+#define S_APS_C_IIRmem2_ADDR_END                            1583
 #define S_APS_C_IIRmem2_sizeof                              3
-#define S_APS_DL1_OutSamples_ADDR                           1678
-#define S_APS_DL1_OutSamples_ADDR_END                       1679
+#define S_APS_DL1_OutSamples_ADDR                           1584
+#define S_APS_DL1_OutSamples_ADDR_END                       1585
 #define S_APS_DL1_OutSamples_sizeof                         2
-#define S_APS_DL1_COIL_OutSamples_ADDR                      1680
-#define S_APS_DL1_COIL_OutSamples_ADDR_END                  1681
+#define S_APS_DL1_COIL_OutSamples_ADDR                      1586
+#define S_APS_DL1_COIL_OutSamples_ADDR_END                  1587
 #define S_APS_DL1_COIL_OutSamples_sizeof                    2
-#define S_APS_DL2_L_OutSamples_ADDR                         1682
-#define S_APS_DL2_L_OutSamples_ADDR_END                     1683
+#define S_APS_DL2_L_OutSamples_ADDR                         1588
+#define S_APS_DL2_L_OutSamples_ADDR_END                     1589
 #define S_APS_DL2_L_OutSamples_sizeof                       2
-#define S_APS_DL2_L_COIL_OutSamples_ADDR                    1684
-#define S_APS_DL2_L_COIL_OutSamples_ADDR_END                1685
+#define S_APS_DL2_L_COIL_OutSamples_ADDR                    1590
+#define S_APS_DL2_L_COIL_OutSamples_ADDR_END                1591
 #define S_APS_DL2_L_COIL_OutSamples_sizeof                  2
-#define S_APS_DL2_R_OutSamples_ADDR                         1686
-#define S_APS_DL2_R_OutSamples_ADDR_END                     1687
+#define S_APS_DL2_R_OutSamples_ADDR                         1592
+#define S_APS_DL2_R_OutSamples_ADDR_END                     1593
 #define S_APS_DL2_R_OutSamples_sizeof                       2
-#define S_APS_DL2_R_COIL_OutSamples_ADDR                    1688
-#define S_APS_DL2_R_COIL_OutSamples_ADDR_END                1689
+#define S_APS_DL2_R_COIL_OutSamples_ADDR                    1594
+#define S_APS_DL2_R_COIL_OutSamples_ADDR_END                1595
 #define S_APS_DL2_R_COIL_OutSamples_sizeof                  2
-#define S_XinASRC_ECHO_REF_ADDR                             1690
-#define S_XinASRC_ECHO_REF_ADDR_END                         1729
+#define S_XinASRC_ECHO_REF_ADDR                             1596
+#define S_XinASRC_ECHO_REF_ADDR_END                         1635
 #define S_XinASRC_ECHO_REF_sizeof                           40
-#define S_ECHO_REF_16K_ADDR                                 1730
-#define S_ECHO_REF_16K_ADDR_END                             1734
+#define S_ECHO_REF_16K_ADDR                                 1636
+#define S_ECHO_REF_16K_ADDR_END                             1640
 #define S_ECHO_REF_16K_sizeof                               5
-#define S_ECHO_REF_8K_ADDR                                  1735
-#define S_ECHO_REF_8K_ADDR_END                              1737
+#define S_ECHO_REF_8K_ADDR                                  1641
+#define S_ECHO_REF_8K_ADDR_END                              1643
 #define S_ECHO_REF_8K_sizeof                                3
-#define S_DL1_EQ_ADDR                                       1738
-#define S_DL1_EQ_ADDR_END                                   1749
+#define S_DL1_EQ_ADDR                                       1644
+#define S_DL1_EQ_ADDR_END                                   1655
 #define S_DL1_EQ_sizeof                                     12
-#define S_DL2_EQ_ADDR                                       1750
-#define S_DL2_EQ_ADDR_END                                   1761
+#define S_DL2_EQ_ADDR                                       1656
+#define S_DL2_EQ_ADDR_END                                   1667
 #define S_DL2_EQ_sizeof                                     12
-#define S_DL1_GAIN_out_ADDR                                 1762
-#define S_DL1_GAIN_out_ADDR_END                             1773
+#define S_DL1_GAIN_out_ADDR                                 1668
+#define S_DL1_GAIN_out_ADDR_END                             1679
 #define S_DL1_GAIN_out_sizeof                               12
-#define S_DL2_GAIN_out_ADDR                                 1774
-#define S_DL2_GAIN_out_ADDR_END                             1785
+#define S_DL2_GAIN_out_ADDR                                 1680
+#define S_DL2_GAIN_out_ADDR_END                             1691
 #define S_DL2_GAIN_out_sizeof                               12
-#define S_APS_DL2_L_IIRmem1_ADDR                            1786
-#define S_APS_DL2_L_IIRmem1_ADDR_END                        1794
+#define S_APS_DL2_L_IIRmem1_ADDR                            1692
+#define S_APS_DL2_L_IIRmem1_ADDR_END                        1700
 #define S_APS_DL2_L_IIRmem1_sizeof                          9
-#define S_APS_DL2_R_IIRmem1_ADDR                            1795
-#define S_APS_DL2_R_IIRmem1_ADDR_END                        1803
+#define S_APS_DL2_R_IIRmem1_ADDR                            1701
+#define S_APS_DL2_R_IIRmem1_ADDR_END                        1709
 #define S_APS_DL2_R_IIRmem1_sizeof                          9
-#define S_APS_DL2_L_M_IIRmem2_ADDR                          1804
-#define S_APS_DL2_L_M_IIRmem2_ADDR_END                      1806
+#define S_APS_DL2_L_M_IIRmem2_ADDR                          1710
+#define S_APS_DL2_L_M_IIRmem2_ADDR_END                      1712
 #define S_APS_DL2_L_M_IIRmem2_sizeof                        3
-#define S_APS_DL2_R_M_IIRmem2_ADDR                          1807
-#define S_APS_DL2_R_M_IIRmem2_ADDR_END                      1809
+#define S_APS_DL2_R_M_IIRmem2_ADDR                          1713
+#define S_APS_DL2_R_M_IIRmem2_ADDR_END                      1715
 #define S_APS_DL2_R_M_IIRmem2_sizeof                        3
-#define S_APS_DL2_L_C_IIRmem2_ADDR                          1810
-#define S_APS_DL2_L_C_IIRmem2_ADDR_END                      1812
+#define S_APS_DL2_L_C_IIRmem2_ADDR                          1716
+#define S_APS_DL2_L_C_IIRmem2_ADDR_END                      1718
 #define S_APS_DL2_L_C_IIRmem2_sizeof                        3
-#define S_APS_DL2_R_C_IIRmem2_ADDR                          1813
-#define S_APS_DL2_R_C_IIRmem2_ADDR_END                      1815
+#define S_APS_DL2_R_C_IIRmem2_ADDR                          1719
+#define S_APS_DL2_R_C_IIRmem2_ADDR_END                      1721
 #define S_APS_DL2_R_C_IIRmem2_sizeof                        3
-#define S_DL1_APS_ADDR                                      1816
-#define S_DL1_APS_ADDR_END                                  1827
+#define S_DL1_APS_ADDR                                      1722
+#define S_DL1_APS_ADDR_END                                  1733
 #define S_DL1_APS_sizeof                                    12
-#define S_DL2_L_APS_ADDR                                    1828
-#define S_DL2_L_APS_ADDR_END                                1839
+#define S_DL2_L_APS_ADDR                                    1734
+#define S_DL2_L_APS_ADDR_END                                1745
 #define S_DL2_L_APS_sizeof                                  12
-#define S_DL2_R_APS_ADDR                                    1840
-#define S_DL2_R_APS_ADDR_END                                1851
+#define S_DL2_R_APS_ADDR                                    1746
+#define S_DL2_R_APS_ADDR_END                                1757
 #define S_DL2_R_APS_sizeof                                  12
-#define S_APS_DL1_EQ_data_ADDR                              1852
-#define S_APS_DL1_EQ_data_ADDR_END                          1860
+#define S_APS_DL1_EQ_data_ADDR                              1758
+#define S_APS_DL1_EQ_data_ADDR_END                          1766
 #define S_APS_DL1_EQ_data_sizeof                            9
-#define S_APS_DL2_EQ_data_ADDR                              1861
-#define S_APS_DL2_EQ_data_ADDR_END                          1869
+#define S_APS_DL2_EQ_data_ADDR                              1767
+#define S_APS_DL2_EQ_data_ADDR_END                          1775
 #define S_APS_DL2_EQ_data_sizeof                            9
-#define S_DC_DCvalue_ADDR                                   1870
-#define S_DC_DCvalue_ADDR_END                               1870
+#define S_DC_DCvalue_ADDR                                   1776
+#define S_DC_DCvalue_ADDR_END                               1776
 #define S_DC_DCvalue_sizeof                                 1
-#define S_VIBRA_ADDR                                        1871
-#define S_VIBRA_ADDR_END                                    1876
+#define S_VIBRA_ADDR                                        1777
+#define S_VIBRA_ADDR_END                                    1782
 #define S_VIBRA_sizeof                                      6
-#define S_Vibra2_in_ADDR                                    1877
-#define S_Vibra2_in_ADDR_END                                1882
+#define S_Vibra2_in_ADDR                                    1783
+#define S_Vibra2_in_ADDR_END                                1788
 #define S_Vibra2_in_sizeof                                  6
-#define S_Vibra2_addr_ADDR                                  1883
-#define S_Vibra2_addr_ADDR_END                              1883
+#define S_Vibra2_addr_ADDR                                  1789
+#define S_Vibra2_addr_ADDR_END                              1789
 #define S_Vibra2_addr_sizeof                                1
-#define S_VibraCtrl_forRightSM_ADDR                         1884
-#define S_VibraCtrl_forRightSM_ADDR_END                     1907
+#define S_VibraCtrl_forRightSM_ADDR                         1790
+#define S_VibraCtrl_forRightSM_ADDR_END                     1813
 #define S_VibraCtrl_forRightSM_sizeof                       24
-#define S_Rnoise_mem_ADDR                                   1908
-#define S_Rnoise_mem_ADDR_END                               1908
+#define S_Rnoise_mem_ADDR                                   1814
+#define S_Rnoise_mem_ADDR_END                               1814
 #define S_Rnoise_mem_sizeof                                 1
-#define S_Ctrl_ADDR                                         1909
-#define S_Ctrl_ADDR_END                                     1926
+#define S_Ctrl_ADDR                                         1815
+#define S_Ctrl_ADDR_END                                     1832
 #define S_Ctrl_sizeof                                       18
-#define S_Vibra1_in_ADDR                                    1927
-#define S_Vibra1_in_ADDR_END                                1932
+#define S_Vibra1_in_ADDR                                    1833
+#define S_Vibra1_in_ADDR_END                                1838
 #define S_Vibra1_in_sizeof                                  6
-#define S_Vibra1_temp_ADDR                                  1933
-#define S_Vibra1_temp_ADDR_END                              1956
+#define S_Vibra1_temp_ADDR                                  1839
+#define S_Vibra1_temp_ADDR_END                              1862
 #define S_Vibra1_temp_sizeof                                24
-#define S_VibraCtrl_forLeftSM_ADDR                          1957
-#define S_VibraCtrl_forLeftSM_ADDR_END                      1980
+#define S_VibraCtrl_forLeftSM_ADDR                          1863
+#define S_VibraCtrl_forLeftSM_ADDR_END                      1886
 #define S_VibraCtrl_forLeftSM_sizeof                        24
-#define S_Vibra1_mem_ADDR                                   1981
-#define S_Vibra1_mem_ADDR_END                               1991
+#define S_Vibra1_mem_ADDR                                   1887
+#define S_Vibra1_mem_ADDR_END                               1897
 #define S_Vibra1_mem_sizeof                                 11
-#define S_VibraCtrl_Stereo_ADDR                             1992
-#define S_VibraCtrl_Stereo_ADDR_END                         2015
+#define S_VibraCtrl_Stereo_ADDR                             1898
+#define S_VibraCtrl_Stereo_ADDR_END                         1921
 #define S_VibraCtrl_Stereo_sizeof                           24
-#define S_AMIC_96_48_data_ADDR                              2016
-#define S_AMIC_96_48_data_ADDR_END                          2034
+#define S_AMIC_96_48_data_ADDR                              1922
+#define S_AMIC_96_48_data_ADDR_END                          1940
 #define S_AMIC_96_48_data_sizeof                            19
-#define S_DMIC0_96_48_data_ADDR                             2035
-#define S_DMIC0_96_48_data_ADDR_END                         2053
+#define S_DMIC0_96_48_data_ADDR                             1941
+#define S_DMIC0_96_48_data_ADDR_END                         1959
 #define S_DMIC0_96_48_data_sizeof                           19
-#define S_DMIC1_96_48_data_ADDR                             2054
-#define S_DMIC1_96_48_data_ADDR_END                         2072
+#define S_DMIC1_96_48_data_ADDR                             1960
+#define S_DMIC1_96_48_data_ADDR_END                         1978
 #define S_DMIC1_96_48_data_sizeof                           19
-#define S_DMIC2_96_48_data_ADDR                             2073
-#define S_DMIC2_96_48_data_ADDR_END                         2091
+#define S_DMIC2_96_48_data_ADDR                             1979
+#define S_DMIC2_96_48_data_ADDR_END                         1997
 #define S_DMIC2_96_48_data_sizeof                           19
-#define S_EANC_FBK_96_48_data_ADDR                          2092
-#define S_EANC_FBK_96_48_data_ADDR_END                      2110
-#define S_EANC_FBK_96_48_data_sizeof                        19
-#define S_DBG_8K_PATTERN_ADDR                               2111
-#define S_DBG_8K_PATTERN_ADDR_END                           2112
+#define S_DBG_8K_PATTERN_ADDR                               1998
+#define S_DBG_8K_PATTERN_ADDR_END                           1999
 #define S_DBG_8K_PATTERN_sizeof                             2
-#define S_DBG_16K_PATTERN_ADDR                              2113
-#define S_DBG_16K_PATTERN_ADDR_END                          2116
+#define S_DBG_16K_PATTERN_ADDR                              2000
+#define S_DBG_16K_PATTERN_ADDR_END                          2003
 #define S_DBG_16K_PATTERN_sizeof                            4
-#define S_DBG_24K_PATTERN_ADDR                              2117
-#define S_DBG_24K_PATTERN_ADDR_END                          2122
+#define S_DBG_24K_PATTERN_ADDR                              2004
+#define S_DBG_24K_PATTERN_ADDR_END                          2009
 #define S_DBG_24K_PATTERN_sizeof                            6
-#define S_DBG_48K_PATTERN_ADDR                              2123
-#define S_DBG_48K_PATTERN_ADDR_END                          2134
+#define S_DBG_48K_PATTERN_ADDR                              2010
+#define S_DBG_48K_PATTERN_ADDR_END                          2021
 #define S_DBG_48K_PATTERN_sizeof                            12
-#define S_DBG_96K_PATTERN_ADDR                              2135
-#define S_DBG_96K_PATTERN_ADDR_END                          2158
+#define S_DBG_96K_PATTERN_ADDR                              2022
+#define S_DBG_96K_PATTERN_ADDR_END                          2045
 #define S_DBG_96K_PATTERN_sizeof                            24
-#define S_MM_EXT_IN_ADDR                                    2159
-#define S_MM_EXT_IN_ADDR_END                                2170
+#define S_MM_EXT_IN_ADDR                                    2046
+#define S_MM_EXT_IN_ADDR_END                                2057
 #define S_MM_EXT_IN_sizeof                                  12
-#define S_MM_EXT_IN_L_ADDR                                  2171
-#define S_MM_EXT_IN_L_ADDR_END                              2182
+#define S_MM_EXT_IN_L_ADDR                                  2058
+#define S_MM_EXT_IN_L_ADDR_END                              2069
 #define S_MM_EXT_IN_L_sizeof                                12
-#define S_MM_EXT_IN_R_ADDR                                  2183
-#define S_MM_EXT_IN_R_ADDR_END                              2194
+#define S_MM_EXT_IN_R_ADDR                                  2070
+#define S_MM_EXT_IN_R_ADDR_END                              2081
 #define S_MM_EXT_IN_R_sizeof                                12
-#define S_MIC4_ADDR                                         2195
-#define S_MIC4_ADDR_END                                     2206
+#define S_MIC4_ADDR                                         2082
+#define S_MIC4_ADDR_END                                     2093
 #define S_MIC4_sizeof                                       12
-#define S_MIC4_L_ADDR                                       2207
-#define S_MIC4_L_ADDR_END                                   2218
+#define S_MIC4_L_ADDR                                       2094
+#define S_MIC4_L_ADDR_END                                   2105
 #define S_MIC4_L_sizeof                                     12
-#define S_MIC4_R_ADDR                                       2219
-#define S_MIC4_R_ADDR_END                                   2230
+#define S_MIC4_R_ADDR                                       2106
+#define S_MIC4_R_ADDR_END                                   2117
 #define S_MIC4_R_sizeof                                     12
-#define S_HW_TEST_ADDR                                      2231
-#define S_HW_TEST_ADDR_END                                  2231
+#define S_HW_TEST_ADDR                                      2118
+#define S_HW_TEST_ADDR_END                                  2118
 #define S_HW_TEST_sizeof                                    1
+#define S_XinASRC_BT_UL_ADDR                                2119
+#define S_XinASRC_BT_UL_ADDR_END                            2158
+#define S_XinASRC_BT_UL_sizeof                              40
+#define S_XinASRC_BT_DL_ADDR                                2159
+#define S_XinASRC_BT_DL_ADDR_END                            2198
+#define S_XinASRC_BT_DL_sizeof                              40
+#define S_BT_DL_8k_TEMP_ADDR                                2199
+#define S_BT_DL_8k_TEMP_ADDR_END                            2200
+#define S_BT_DL_8k_TEMP_sizeof                              2
+#define S_BT_DL_16k_TEMP_ADDR                               2201
+#define S_BT_DL_16k_TEMP_ADDR_END                           2204
+#define S_BT_DL_16k_TEMP_sizeof                             4
 #endif/* _ABESM_ADDR_H_ */
Index: Kernel/sound/soc/omap/abe/abe_taskid.h
===================================================================
--- Kernel.orig/sound/soc/omap/abe/abe_taskid.h	2011-01-14 00:04:13.464343835 +0530
+++ Kernel/sound/soc/omap/abe/abe_taskid.h	2011-01-19 00:14:51.053321509 +0530
@@ -31,111 +31,118 @@
 #define C_ABE_FW_TASK_ASRC_MM_EXT_IN                        8
 #define C_ABE_FW_TASK_ASRC_VX_UL_8                          9
 #define C_ABE_FW_TASK_ASRC_VX_UL_16                         10
-#define C_ABE_FW_TASK_DC_REMOVAL                            11
-#define C_ABE_FW_TASK_VX_UL_48_8_DEC                        12
-#define C_ABE_FW_TASK_VX_UL_48_16_DEC                       13
-#define C_ABE_FW_TASK_BT_DL_48_8_DEC                        14
-#define C_ABE_FW_TASK_BT_DL_48_16_DEC                       15
-#define C_ABE_FW_TASK_ECHO_REF_48_8_DEC                     16
-#define C_ABE_FW_TASK_ECHO_REF_48_16_DEC                    17
-#define C_ABE_FW_TASK_DL2_EQ                                18
-#define C_ABE_FW_TASK_DL2_L_APS_IIR                         19
-#define C_ABE_FW_TASK_DL2_R_APS_IIR                         20
-#define C_ABE_FW_TASK_DL2_APS_EQ                            21
-#define C_ABE_FW_TASK_ECHO_REF_48_16                        22
-#define C_ABE_FW_TASK_ECHO_REF_48_8                         23
-#define C_ABE_FW_TASK_GAIN_UPDATE                           24
-#define C_ABE_FW_TASK_SideTone                              25
-#define C_ABE_FW_TASK_VX_DL_8_48_LP                         26
-#define C_ABE_FW_TASK_VX_DL_8_48_HP                         27
-#define C_ABE_FW_TASK_VX_DL_16_48_LP                        28
-#define C_ABE_FW_TASK_VX_DL_16_48_HP                        29
-#define C_ABE_FW_TASK_VX_UL_48_8_LP                         30
-#define C_ABE_FW_TASK_VX_UL_48_8_HP                         31
-#define C_ABE_FW_TASK_VX_UL_48_16_LP                        32
-#define C_ABE_FW_TASK_VX_UL_48_16_HP                        33
-#define C_ABE_FW_TASK_BT_UL_8_48_LP                         34
-#define C_ABE_FW_TASK_BT_UL_8_48_HP                         35
-#define C_ABE_FW_TASK_BT_UL_16_48_LP                        36
-#define C_ABE_FW_TASK_BT_UL_16_48_HP                        37
-#define C_ABE_FW_TASK_BT_DL_48_8_LP                         38
-#define C_ABE_FW_TASK_BT_DL_48_8_HP                         39
-#define C_ABE_FW_TASK_BT_DL_48_16_LP                        40
-#define C_ABE_FW_TASK_BT_DL_48_16_HP                        41
-#define C_ABE_FW_TASK_ECHO_REF_48_8_LP                      42
-#define C_ABE_FW_TASK_ECHO_REF_48_8_HP                      43
-#define C_ABE_FW_TASK_ECHO_REF_48_16_LP                     44
-#define C_ABE_FW_TASK_ECHO_REF_48_16_HP                     45
-#define C_ABE_FW_TASK_DL1_EQ                                46
-#define C_ABE_FW_TASK_DL1_APS_IIR                           47
-#define C_ABE_FW_TASK_DL1_APS_EQ                            48
-#define C_ABE_FW_TASK_IHF_48_96_LP                          49
-#define C_ABE_FW_TASK_EARP_48_96_LP                         50
-#define C_ABE_FW_TASK_DL1_GAIN                              51
-#define C_ABE_FW_TASK_DL2_GAIN                              52
-#define C_ABE_FW_TASK_IO_PING_PONG                          53
-#define C_ABE_FW_TASK_IO_DMIC                               54
-#define C_ABE_FW_TASK_IO_PDM_UL                             55
-#define C_ABE_FW_TASK_IO_BT_VX_UL                           56
-#define C_ABE_FW_TASK_IO_MM_UL                              57
-#define C_ABE_FW_TASK_IO_MM_UL2                             58
-#define C_ABE_FW_TASK_IO_VX_UL                              59
-#define C_ABE_FW_TASK_IO_MM_DL                              60
-#define C_ABE_FW_TASK_IO_VX_DL                              61
-#define C_ABE_FW_TASK_IO_TONES_DL                           62
-#define C_ABE_FW_TASK_IO_VIB_DL                             63
-#define C_ABE_FW_TASK_IO_BT_VX_DL                           64
-#define C_ABE_FW_TASK_IO_PDM_DL                             65
-#define C_ABE_FW_TASK_IO_MM_EXT_OUT                         66
-#define C_ABE_FW_TASK_IO_MM_EXT_IN                          67
-#define C_ABE_FW_TASK_IO_TDM_OUT                            68
-#define C_ABE_FW_TASK_IO_TDM_IN                             69
-#define C_ABE_FW_TASK_DEBUG_IRQFIFO                         70
-#define C_ABE_FW_TASK_EchoMixer                             71
-#define C_ABE_FW_TASK_SDTMixer                              72
-#define C_ABE_FW_TASK_DL1Mixer                              73
-#define C_ABE_FW_TASK_DL2Mixer                              74
-#define C_ABE_FW_TASK_VXRECMixer                            75
-#define C_ABE_FW_TASK_ULMixer                               76
-#define C_ABE_FW_TASK_VIBRA_PACK                            77
-#define C_ABE_FW_TASK_VX_DL_8_48_0SR                        78
-#define C_ABE_FW_TASK_VX_DL_16_48_0SR                       79
-#define C_ABE_FW_TASK_BT_UL_8_48_0SR                        80
-#define C_ABE_FW_TASK_BT_UL_16_48_0SR                       81
-#define C_ABE_FW_TASK_IHF_48_96_0SR                         82
-#define C_ABE_FW_TASK_EARP_48_96_0SR                        83
-#define C_ABE_FW_TASK_AMIC_SPLIT                            84
-#define C_ABE_FW_TASK_DMIC1_SPLIT                           85
-#define C_ABE_FW_TASK_DMIC2_SPLIT                           86
-#define C_ABE_FW_TASK_DMIC3_SPLIT                           87
-#define C_ABE_FW_TASK_VXREC_SPLIT                           88
-#define C_ABE_FW_TASK_BT_UL_SPLIT                           89
-#define C_ABE_FW_TASK_MM_SPLIT                              90
-#define C_ABE_FW_TASK_DL2_APS_SPLIT                         91
-#define C_ABE_FW_TASK_VIBRA_SPLIT                           92
-#define C_ABE_FW_TASK_MM_EXT_IN_SPLIT                       93
-#define C_ABE_FW_TASK_EANC_FBK_SPLIT                        94
-#define C_ABE_FW_TASK_MIC4_SPLIT                            95
-#define C_ABE_FW_TASK_VX_UL_ROUTING                         96
-#define C_ABE_FW_TASK_MM_UL2_ROUTING                        97
-#define C_ABE_FW_TASK_VIBRA1                                98
-#define C_ABE_FW_TASK_VIBRA2                                99
-#define C_ABE_FW_TASK_BT_UL_16_48                           100
-#define C_ABE_FW_TASK_BT_UL_8_48                            101
-#define C_ABE_FW_TASK_BT_DL_48_16                           102
-#define C_ABE_FW_TASK_BT_DL_48_8                            103
-#define C_ABE_FW_TASK_VX_DL_16_48                           104
-#define C_ABE_FW_TASK_VX_DL_8_48                            105
-#define C_ABE_FW_TASK_VX_UL_48_16                           106
-#define C_ABE_FW_TASK_VX_UL_48_8                            107
-#define C_ABE_FW_TASK_DBG_SYNC                              108
-#define C_ABE_FW_TASK_APS_DL1_IRQs                          109
-#define C_ABE_FW_TASK_APS_DL2_L_IRQs                        110
-#define C_ABE_FW_TASK_APS_DL2_R_IRQs                        111
-#define C_ABE_FW_TASK_AMIC_96_48_LP                         112
-#define C_ABE_FW_TASK_DMIC1_96_48_LP                        113
-#define C_ABE_FW_TASK_DMIC2_96_48_LP                        114
-#define C_ABE_FW_TASK_DMIC3_96_48_LP                        115
-#define C_ABE_FW_TASK_INIT_FW_MEMORY                        116
-#define C_ABE_FW_TASK_DEBUGTRACE_VX_ASRCs                   117
+#define C_ABE_FW_TASK_VX_UL_48_8_DEC                        11
+#define C_ABE_FW_TASK_VX_UL_48_16_DEC                       12
+#define C_ABE_FW_TASK_BT_DL_48_8_DEC                        13
+#define C_ABE_FW_TASK_BT_DL_48_16_DEC                       14
+#define C_ABE_FW_TASK_ECHO_REF_48_8_DEC                     15
+#define C_ABE_FW_TASK_ECHO_REF_48_16_DEC                    16
+#define C_ABE_FW_TASK_DL2_EQ                                17
+#define C_ABE_FW_TASK_DL2_L_APS_IIR                         18
+#define C_ABE_FW_TASK_DL2_R_APS_IIR                         19
+#define C_ABE_FW_TASK_DL2_APS_EQ                            20
+#define C_ABE_FW_TASK_ECHO_REF_48_16                        21
+#define C_ABE_FW_TASK_ECHO_REF_48_8                         22
+#define C_ABE_FW_TASK_GAIN_UPDATE                           23
+#define C_ABE_FW_TASK_SideTone                              24
+#define C_ABE_FW_TASK_VX_DL_8_48_LP                         25
+#define C_ABE_FW_TASK_VX_DL_8_48_HP                         26
+#define C_ABE_FW_TASK_VX_DL_16_48_LP                        27
+#define C_ABE_FW_TASK_VX_DL_16_48_HP                        28
+#define C_ABE_FW_TASK_VX_UL_48_8_LP                         29
+#define C_ABE_FW_TASK_VX_UL_48_8_HP                         30
+#define C_ABE_FW_TASK_VX_UL_48_16_LP                        31
+#define C_ABE_FW_TASK_VX_UL_48_16_HP                        32
+#define C_ABE_FW_TASK_BT_UL_8_48_LP                         33
+#define C_ABE_FW_TASK_BT_UL_8_48_HP                         34
+#define C_ABE_FW_TASK_BT_UL_16_48_LP                        35
+#define C_ABE_FW_TASK_BT_UL_16_48_HP                        36
+#define C_ABE_FW_TASK_BT_DL_48_8_LP                         37
+#define C_ABE_FW_TASK_BT_DL_48_8_HP                         38
+#define C_ABE_FW_TASK_BT_DL_48_16_LP                        39
+#define C_ABE_FW_TASK_BT_DL_48_16_HP                        40
+#define C_ABE_FW_TASK_ECHO_REF_48_8_LP                      41
+#define C_ABE_FW_TASK_ECHO_REF_48_8_HP                      42
+#define C_ABE_FW_TASK_ECHO_REF_48_16_LP                     43
+#define C_ABE_FW_TASK_ECHO_REF_48_16_HP                     44
+#define C_ABE_FW_TASK_DL1_EQ                                45
+#define C_ABE_FW_TASK_DL1_APS_IIR                           46
+#define C_ABE_FW_TASK_DL1_APS_EQ                            47
+#define C_ABE_FW_TASK_IHF_48_96_LP                          48
+#define C_ABE_FW_TASK_EARP_48_96_LP                         49
+#define C_ABE_FW_TASK_DL1_GAIN                              50
+#define C_ABE_FW_TASK_DL2_GAIN                              51
+#define C_ABE_FW_TASK_IO_PING_PONG                          52
+#define C_ABE_FW_TASK_IO_DMIC                               53
+#define C_ABE_FW_TASK_IO_PDM_UL                             54
+#define C_ABE_FW_TASK_IO_BT_VX_UL                           55
+#define C_ABE_FW_TASK_IO_MM_UL                              56
+#define C_ABE_FW_TASK_IO_MM_UL2                             57
+#define C_ABE_FW_TASK_IO_VX_UL                              58
+#define C_ABE_FW_TASK_IO_MM_DL                              59
+#define C_ABE_FW_TASK_IO_VX_DL                              60
+#define C_ABE_FW_TASK_IO_TONES_DL                           61
+#define C_ABE_FW_TASK_IO_VIB_DL                             62
+#define C_ABE_FW_TASK_IO_BT_VX_DL                           63
+#define C_ABE_FW_TASK_IO_PDM_DL                             64
+#define C_ABE_FW_TASK_IO_MM_EXT_OUT                         65
+#define C_ABE_FW_TASK_IO_MM_EXT_IN                          66
+#define C_ABE_FW_TASK_IO_TDM_OUT                            67
+#define C_ABE_FW_TASK_IO_TDM_IN                             68
+#define C_ABE_FW_TASK_DEBUG_IRQFIFO                         69
+#define C_ABE_FW_TASK_EchoMixer                             70
+#define C_ABE_FW_TASK_SDTMixer                              71
+#define C_ABE_FW_TASK_DL1Mixer                              72
+#define C_ABE_FW_TASK_DL2Mixer                              73
+#define C_ABE_FW_TASK_VXRECMixer                            74
+#define C_ABE_FW_TASK_ULMixer                               75
+#define C_ABE_FW_TASK_VIBRA_PACK                            76
+#define C_ABE_FW_TASK_VX_DL_8_48_0SR                        77
+#define C_ABE_FW_TASK_VX_DL_16_48_0SR                       78
+#define C_ABE_FW_TASK_BT_UL_8_48_0SR                        79
+#define C_ABE_FW_TASK_BT_UL_16_48_0SR                       80
+#define C_ABE_FW_TASK_IHF_48_96_0SR                         81
+#define C_ABE_FW_TASK_EARP_48_96_0SR                        82
+#define C_ABE_FW_TASK_AMIC_SPLIT                            83
+#define C_ABE_FW_TASK_DMIC1_SPLIT                           84
+#define C_ABE_FW_TASK_DMIC2_SPLIT                           85
+#define C_ABE_FW_TASK_DMIC3_SPLIT                           86
+#define C_ABE_FW_TASK_VXREC_SPLIT                           87
+#define C_ABE_FW_TASK_BT_UL_SPLIT                           88
+#define C_ABE_FW_TASK_MM_SPLIT                              89
+#define C_ABE_FW_TASK_DL2_APS_SPLIT                         90
+#define C_ABE_FW_TASK_VIBRA_SPLIT                           91
+#define C_ABE_FW_TASK_MM_EXT_IN_SPLIT                       92
+#define C_ABE_FW_TASK_ECHO_REF_SPLIT                        93
+#define C_ABE_FW_TASK_MIC4_SPLIT                            94
+#define C_ABE_FW_TASK_VX_UL_ROUTING                         95
+#define C_ABE_FW_TASK_MM_UL2_ROUTING                        96
+#define C_ABE_FW_TASK_VIBRA1                                97
+#define C_ABE_FW_TASK_VIBRA2                                98
+#define C_ABE_FW_TASK_BT_UL_16_48                           99
+#define C_ABE_FW_TASK_BT_UL_8_48                            100
+#define C_ABE_FW_TASK_BT_DL_48_16                           101
+#define C_ABE_FW_TASK_BT_DL_48_8                            102
+#define C_ABE_FW_TASK_VX_DL_16_48                           103
+#define C_ABE_FW_TASK_VX_DL_8_48                            104
+#define C_ABE_FW_TASK_VX_UL_48_16                           105
+#define C_ABE_FW_TASK_VX_UL_48_8                            106
+#define C_ABE_FW_TASK_DBG_SYNC                              107
+#define C_ABE_FW_TASK_APS_DL1_IRQs                          108
+#define C_ABE_FW_TASK_APS_DL2_L_IRQs                        109
+#define C_ABE_FW_TASK_APS_DL2_R_IRQs                        110
+#define C_ABE_FW_TASK_AMIC_96_48_LP                         111
+#define C_ABE_FW_TASK_DMIC1_96_48_LP                        112
+#define C_ABE_FW_TASK_DMIC2_96_48_LP                        113
+#define C_ABE_FW_TASK_DMIC3_96_48_LP                        114
+#define C_ABE_FW_TASK_INIT_FW_MEMORY                        115
+#define C_ABE_FW_TASK_DEBUGTRACE_VX_ASRCs                   116
+#define C_ABE_FW_TASK_ASRC_BT_UL_8                          117
+#define C_ABE_FW_TASK_ASRC_BT_UL_16                         118
+#define C_ABE_FW_TASK_ASRC_BT_DL_8                          119
+#define C_ABE_FW_TASK_ASRC_BT_DL_16                         120
+#define C_ABE_FW_TASK_BT_DL_48_8_HP_OPP100                  121
+#define C_ABE_FW_TASK_BT_DL_48_16_HP_OPP100                 122
+#define C_ABE_FW_TASK_BT_DL_48_8_OPP100                     123
+#define C_ABE_FW_TASK_BT_DL_48_16_OPP100                    124
 #endif/* _ABE_TASKID_H_ */
Index: Kernel/sound/soc/omap/abe/abe_typ.h
===================================================================
--- Kernel.orig/sound/soc/omap/abe/abe_typ.h	2011-01-14 00:04:13.464343835 +0530
+++ Kernel/sound/soc/omap/abe/abe_typ.h	2011-01-19 00:14:51.053321509 +0530
@@ -482,7 +482,7 @@
 			u32 iter;
 		} prot_serial;
 		/* DMIC peripheral connected to ATC */
-		struct	{
+		struct {
 			/* DMEM address in bytes */
 			u32 buf_addr;
 			/* DMEM buffer size in bytes */
Index: Kernel/sound/soc/omap/abe/abe_typedef.h
===================================================================
--- Kernel.orig/sound/soc/omap/abe/abe_typedef.h	2011-01-14 00:04:13.464343835 +0530
+++ Kernel/sound/soc/omap/abe/abe_typedef.h	2011-01-19 00:14:51.053321509 +0530
@@ -36,23 +36,6 @@
 typedef ABE_int16 *pABE_int16;
 typedef ABE_int32 *pABE_int32;
 typedef ABE_uint32 *pABE_uint32;
-#ifdef __chess__
-typedef struct abeatcdescTag {
-	unsigned long a;
-	unsigned long b;
-} ABE_SAtcDescriptor;
-typedef void (*pABE_voidFunction) () clobbers(R0, R1, R2, R3, R4,
-					      R5, R6, R7, R13);
-typedef void (*pABE_voidFunctionsList[]) () clobbers(R0, R1, R2, R3, R4,
-						     R5, R6, R7, R13);
-typedef void (*pABE_cmdFunction) () clobbers(R0, R1, R2, R3, R4,
-					     R5, R6, R7, R13);
-typedef void (*pABE_cmdFunctionsList[]) () clobbers(R0, R1, R2, R3, R4,
-						    R5, R6, R7, R13);
-typedef void (*pABE_copyFunction) (ABE_uint16 chess_storage(R13)) clobbers(R13);
-typedef void (*pABE_copyFunctionsList[]) (ABE_uint16 chess_storage(R13))
-clobbers(R13);
-#endif
 /*
  * Commonly used structures
  */
@@ -213,51 +196,4 @@
 	/* 22: samples available in the ping/pong buffer 1 */
 	ABE_uint16 nextbuff1_Samples;
 } ABE_SPingPongDescriptor;
-#ifdef __chess__
-/* [W] asrc output used for the next ASRC call (+/- 1 / 0)*/
-#define drift_ASRC 0
-/* [W] asrc output used for controlling the number of samples to be
-	exchanged (+/- 1 / 0) */
-#define drift_io 2
-/* DMAReq address or HOST IRQ buffer address (ATC ADDRESS) */
-#define hw_ctrl_addr 4
-/* index of the copy subroutine */
-#define copy_func_index 6
-/* X number of SMEM samples to move */
-#define x_io 7
-/* 0 for mono data, 1 for stereo data */
-#define data_size 8
-/* internal SMEM buffer INITPTR pointer index */
-#define smem_addr 9
-/* data content to be loaded to "hw_ctrl_addr" */
-#define atc_irq_data 10
-/* ATC descriptor address */
-#define atc_address 11
-/* THR1; For stereo data, THR1 is provided by HAL as THR1<<1 */
-#define threshold_1 12
-/* THR2; For stereo data, THR2 is provided by HAL as THR2<<1 */
-#define threshold_2 13
-/* UP_1; For stereo data, UP_1 is provided by HAL as UP_1<<1 */
-#define update_1 14
-/* UP_2; For stereo data, UP_2 is provided by HAL as UP_2<<1 */
-#define update_2 15
-/* Flow error counter */
-#define flow_counter 16
-/* Read DMEM =0, Write DMEM =3 (ATC offset of the access pointer) */
-#define direction_rw 17
-/* ping/pong buffer flag */
-#define counter 11
-/* current Base address of the working buffer */
-#define workbuff_BaseAddr 12
-/* samples left in the working buffer */
-#define workbuff_Samples 14
-/* Base address of the ping/pong buffer 0 */
-#define nextbuff0_BaseAddr 16
-/* samples available in the ping/pong buffer 0 */
-#define nextbuff0_Samples 18
-/* samples available in the ping/pong buffer 0 */
-#define nextbuff1_BaseAddr 20
-/* samples available in the ping/pong buffer 1 */
-#define nextbuff1_Samples 22
-#endif
 #endif/* _ABE_TYPEDEF_H_ */
Index: Kernel/sound/soc/omap/omap-abe-dsp.c
===================================================================
--- Kernel.orig/sound/soc/omap/omap-abe-dsp.c	2011-01-19 00:14:48.743323287 +0530
+++ Kernel/sound/soc/omap/omap-abe-dsp.c	2011-01-19 00:14:51.053321509 +0530
@@ -192,7 +192,7 @@
 
 	/* TODO: handle underruns/overruns/errors */
 	pm_runtime_get_sync(&pdev->dev);
-	abe_irq_clear();
+	abe_clear_irq();
 	abe_irq_processing();
 	pm_runtime_put_sync(&pdev->dev);
 


From: Djamil Elaidi <d-elaidi@ti.com>
Date: Tue, 24 May 2011 08:06:22 +0000 (+0200)
Subject: OMAP4: HSI: usage of DPLL cascading blocker API on HSI activity
X-Git-Url: http://git.omapzoom.org/?p=kernel%2Fomap.git;a=commitdiff_plain;h=650a2eb2fbc953c74c978ca375448851289fbf13

OMAP4: HSI: usage of DPLL cascading blocker API on HSI activity

When HSI driver is probed, it sets a constraint to keep HSI Fclk at 96 MHz.
But this constraint was not released, thus it was not possible to enter OPPLP (used for
DPLL cascading).

Now DPLL cascading blocker constraint is set and release based on HSI activity.

Signed-off-by: Djamil Elaidi <d-elaidi@ti.com>
Change-Id: Ic113f78aa3b817319e162409c314147444de532d
---

Index: kernel/drivers/staging/omap_hsi/hsi_driver.c
===================================================================
--- kernel.orig/drivers/staging/omap_hsi/hsi_driver.c	2011-05-27 23:14:16.328347635 +0900
+++ kernel/drivers/staging/omap_hsi/hsi_driver.c	2011-05-27 23:28:25.369598246 +0900
@@ -31,6 +31,7 @@
 #include <linux/slab.h>
 #include <linux/pm_runtime.h>
 
+#include <mach/omap4-common.h>
 #include <plat/omap_device.h>
 
 #include "hsi_driver.h"
@@ -634,6 +635,10 @@
 	if (hsi_is_hst_controller_busy(hsi_ctrl))
 		dev_dbg(dev, "Disabling clocks with HST FSM not IDLE !\n");
 
+	/* Allow Fclk to change */
+	if (dpll_cascading_blocker_release(dev) < 0)
+		dev_warn(dev, "Error releasing DPLL cascading constraint\n");
+
 #ifndef USE_PM_RUNTIME_FOR_HSI
 	hsi_runtime_suspend(dev);
 	omap_device_idle(pd);
@@ -673,6 +678,11 @@
 		dev_dbg(dev, "Clocks already enabled, skipping...\n");
 		return -EEXIST;
 	}
+
+	/* Prevent Fclk change */
+	if (dpll_cascading_blocker_hold(dev) < 0)
+		dev_warn(dev, "Error holding DPLL cascading constraint\n");
+
 #ifndef USE_PM_RUNTIME_FOR_HSI
 	omap_device_enable(pd);
 	hsi_runtime_resume(dev);
@@ -825,11 +835,8 @@
 		goto rollback3;
 	}
 
-	device_init_wakeup(hsi_ctrl->dev, 1);
-	/* From here no need for HSI HW access */
-	hsi_clocks_disable(hsi_ctrl->dev, __func__);
-
 	/* Allow HSI to wake up the platform */
+	device_init_wakeup(hsi_ctrl->dev, 1);
 
 	/* Set the HSI FCLK to default. */
 	err = omap_device_set_rate(hsi_ctrl->dev, hsi_ctrl->dev,
@@ -838,6 +845,9 @@
 		dev_err(&pd->dev, "Cannot set HSI FClk to default value: %ld\n",
 			pdata->default_hsi_fclk);
 
+	/* From here no need for HSI HW access */
+	hsi_clocks_disable(hsi_ctrl->dev, __func__);
+
 	return err;
 
 rollback3:

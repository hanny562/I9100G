Index: kernel/arch/arm/mach-omap2/board-q1.c
===================================================================
--- kernel.orig/arch/arm/mach-omap2/board-q1.c	2011-06-09 12:35:26.022088958 +0530
+++ kernel/arch/arm/mach-omap2/board-q1.c	2011-06-09 12:38:14.420844868 +0530
@@ -15,11 +15,14 @@
 #include <linux/kernel.h>
 #include <linux/init.h>
 #include <linux/platform_device.h>
+#include <linux/mhl-sii9234.h>
 #include <linux/io.h>
 #include <linux/gpio.h>
 #include <linux/usb/otg.h>
 #include <linux/bootmem.h>
 #include <linux/spi/spi.h>
+#include <linux/i2c.h>
+#include <linux/i2c-gpio.h>
 #include <linux/i2c/twl.h>
 #include <linux/i2c/cma3000.h>
 #include <linux/regulator/machine.h>
@@ -133,6 +136,7 @@
 static void omap4_fsa9480_reset_cb(void);
 #ifdef CONFIG_VIDEO_MHL_V1
 static void omap4_mhl_cb(u8 attached);
+extern void sii9234_hw_reset(void);
 #endif
 
 static struct charging_status_callbacks {
@@ -149,11 +153,48 @@
 static unsigned mlcd_rst_gpio;
 
 //extern struct ld9040_panel_data matchbox_panel_data;
-
+extern bool mhl_audio_path_info;
 static int lcd_enabled;
 
 void omap4430univ_sensors_init(void);
 
+#ifdef CONFIG_VIDEO_MHL_V1
+/* MHL  */
+static struct i2c_gpio_platform_data q1_omap4_gpio_i2c5_pdata = {
+    .sda_pin = OMAP_GPIO_MHL_SDA_18V,
+    .scl_pin = OMAP_GPIO_MHL_SCL_18V,
+    .udelay = 3,
+    .timeout = 0,
+};
+
+static struct platform_device q1_omap4_gpio_i2c5_device = {
+    .name = "i2c-gpio",
+    .id = 5,
+    .dev = {
+	        .platform_data = &q1_omap4_gpio_i2c5_pdata,
+	    }
+};
+
+struct mhl_platform_data mhl_pdata = {
+    .mhl_sel    = OMAP_GPIO_MHL_SEL,
+    .mhl_rst    = OMAP_GPIO_MHL_RST,
+    .mhl_int    = OMAP_GPIO_MHL_INT,
+    .mhl_wake_up    = OMAP_GPIO_MHL_WAKEUP,
+    //.power_onoff    = sii9234_power_onoff,
+#ifdef CONFIG_MHL_SWITCH
+    .switch_onoff   = sii9234_switch_onoff,
+#endif
+};
+
+struct platform_device q1_omap4_mhl_device = {
+    .name   = "mhl",
+    .id = -1,
+    .dev    ={
+          .platform_data = &mhl_pdata,
+        }
+};
+
+#endif
 static struct platform_device q1_omap4_hdmi_audio_device = {
 	.name = "hdmi-dai",
 	.id = -1,
@@ -581,28 +622,49 @@
 
 	return !!val;
 }
-
+extern int phy_control_interrupt(bool on);
 static void omap4_mhl_cb(u8 attached)
 {
-	    /*TODO */
-       printk("\nBoard file [FSA9480]: MHL Callback == %d\n", attached);
-       gpio_request(OMAP_GPIO_MHL_SEL, "MHL_SEL");
-	 if (attached == 1)	{
-       	//gpio_direction_output(OMAP_GPIO_MHL_SEL,1);
-       	gpio_set_value(OMAP_GPIO_MHL_SEL,1);
-
-		 printk("//=== OMAP_GPIO_MHL_SEL = %d\n", gpio_get_value(OMAP_GPIO_MHL_SEL));
-  		//gpio_direction_output(OMAP_GPIO_MHL_SEL,1);
-       	MHL_On(attached);
-	 } else {
-	 	gpio_set_value(OMAP_GPIO_MHL_SEL,0);
-	 	MHL_On(0);
-	 }
-
-	 //gpio_free(OMAP_GPIO_MHL_SEL);
 
+        int ret=0;
+            /*TODO */
+       printk("\nBoard file [FSA9480]: MHL Callback == %d\n", attached);
+        if( attached == 1)
+        {
+#if 0
+                //Clearing the Connect and Disconnect Interrupts of HDMI_WP_IRQ_ENABLE_CLR
+                u32 temp = omap_readl(0x48046030);
+                printk(KERN_ERR"WP_IRQ_ENABLE_CLR..currently reads as:%x",temp);
+                temp = temp | (1<<25)|(1<<26);
+                omap_writel(temp,0x48046030);
+                printk(KERN_ERR"WP_IRQ_ENABLE_CLR..changed to :%x",temp);
+                //omap_writel(0x000F0118,0x4A100098);
+                // Look at RSEN interrupt
+#endif
+
+                ret = phy_control_interrupt(1);
+                if (ret == -1)
+                {
+                         printk("\nJUST return\n");
+                         return;
+                }
+                else{
+                   MHL_On(1);
+                }
+         } else {
+                if (!mhl_audio_path_info){
+                                gpio_set_value(OMAP_GPIO_MHL_SEL,0);
+                        MHL_On(0);
+                }
+                else{ //audio dock path
+                        sii9234_hw_reset();
+                        msleep(5);
+                        MHL_On(0);
 
+                        }
+         }
 
+         //gpio_free(OMAP_GPIO_MHL_SEL
 }
 #endif
 
@@ -1163,6 +1225,8 @@
 static struct platform_device *q1_omap4_devices[] __initdata = {
 	&wl128x_device,
 	&q1_omap4_hdmi_audio_device,
+	&q1_omap4_gpio_i2c5_device,
+	&q1_omap4_mhl_device,
 	&samsung_omap4_pwr_device,
 	&samsung_omap4_gyro_lp530al_device,
 	&pwmbacklight_device,
@@ -1917,22 +1981,6 @@
 		I2C_BOARD_INFO("bmp182", 0x77),
 	 },
 #endif	 
-	 #ifdef CONFIG_VIDEO_MHL_V1
-	{
-		I2C_BOARD_INFO("SII9234", 0x72>>1),
-	},
-
-	{
-		I2C_BOARD_INFO("SII9234A", 0x7A>>1),
-	},
-	{
-		I2C_BOARD_INFO("SII9234B", 0x92>>1),
-	},
-
-	{
-		I2C_BOARD_INFO("SII9234C", 0xC8>>1),
-	},
-    #endif
 #ifdef CONFIG_EPEN_WACOM_G5SP
 	{
 		I2C_BOARD_INFO("wacom_g5sp_i2c", 0x56),
@@ -1948,7 +1996,22 @@
 	 },
 #endif	 
 };
-
+#ifdef CONFIG_VIDEO_MHL_V1
+static struct i2c_board_info q1_omap4_i2c_5_boardinfo[] = {
+    {
+        I2C_BOARD_INFO("SII9234", 0x72>>1),
+    },
+    {
+        I2C_BOARD_INFO("SII9234A", 0x7A>>1),
+    },
+    {
+        I2C_BOARD_INFO("SII9234B", 0x92>>1),
+    },
+    {
+        I2C_BOARD_INFO("SII9234C", 0xC8>>1),
+    },
+};
+#endif
 static const struct usbhs_omap_platform_data usbhs_pdata __initconst = {
 	.port_mode[0] = OMAP_OHCI_PORT_MODE_PHY_4PIN_DPDM,
 	.port_mode[1] = OMAP_USBHS_PORT_MODE_UNUSED,
@@ -2019,6 +2082,11 @@
 	omap_register_i2c_bus(4, 400, &q1_omap4_i2c_4_bus_pdata,
 			      q1_omap4_i2c_4_boardinfo,
 			      ARRAY_SIZE(q1_omap4_i2c_4_boardinfo));
+
+#ifdef CONFIG_VIDEO_MHL_V1
+	i2c_register_board_info(5, q1_omap4_i2c_5_boardinfo,
+			            ARRAY_SIZE(q1_omap4_i2c_5_boardinfo));
+#endif	
 	return 0;
 }
 

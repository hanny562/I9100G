From: Misael Lopez Cruz <misael.lopez@ti.com>
Date: Tue, 18 Jan 2011 23:05:07 +0000 (-0600)
Subject: ASoC: ABE DSP: Save/restore context based on stream activity
X-Git-Url: http://git.omapzoom.org/?p=kernel%2Fomap.git;a=commitdiff_plain;h=33888dbc6529914eb74989d3c93f0def0dfc46cf;hp=a0050293c0db5d808c29561fbfb0061cd8ae8d23

ASoC: ABE DSP: Save/restore context based on stream activity

ABE context is now saved not only during suspend() call, but also
while closing audio streams since ABE power domain can hit OFF
and lose context. Context is restored upon stream startup, reloading
firmware if required.

Change-Id: Iebb6fce15d845475e4208762160fbf53e20e02fa
Signed-off-by: Misael Lopez Cruz <misael.lopez@ti.com>
Signed-off-by: Sebastien Guiriec <s-guiriec@ti.com>
---

Index: android-2.6.35/sound/soc/omap/omap-abe-dsp.c
===================================================================
--- android-2.6.35.orig/sound/soc/omap/omap-abe-dsp.c	2011-01-24 11:50:00.000000000 +0530
+++ android-2.6.35/sound/soc/omap/omap-abe-dsp.c	2011-01-24 17:33:42.676592765 +0530
@@ -290,7 +290,7 @@
 
 	if (!abe->active && !abe_check_activity()) {
 		abe_set_opp_processing(ABE_OPP25);
-		abe->opp = 25;
+		abe->opp = 0;
 		abe_stop_event_generator();
 		udelay(250);
 		omap_device_set_rate(&pdev->dev, &pdev->dev, 0);
@@ -1700,6 +1700,62 @@
 	return 0;
 }
 
+static int aess_save_context(struct abe_data *abe)
+{
+	struct platform_device *pdev = abe->pdev;
+	struct omap4_abe_dsp_pdata *pdata = pdev->dev.platform_data;
+
+	/* TODO: Find a better way to save/retore gains after OFF mode */
+	abe_mute_gain(MIXSDT, MIX_SDT_INPUT_UP_MIXER);
+	abe_mute_gain(MIXSDT, MIX_SDT_INPUT_DL1_MIXER);
+	abe_mute_gain(MIXAUDUL, MIX_AUDUL_INPUT_MM_DL);
+	abe_mute_gain(MIXAUDUL, MIX_AUDUL_INPUT_TONES);
+	abe_mute_gain(MIXAUDUL, MIX_AUDUL_INPUT_UPLINK);
+	abe_mute_gain(MIXAUDUL, MIX_AUDUL_INPUT_VX_DL);
+	abe_mute_gain(MIXVXREC, MIX_VXREC_INPUT_TONES);
+	abe_mute_gain(MIXVXREC, MIX_VXREC_INPUT_VX_DL);
+	abe_mute_gain(MIXVXREC, MIX_VXREC_INPUT_MM_DL);
+	abe_mute_gain(MIXVXREC, MIX_VXREC_INPUT_VX_UL);
+
+	if (pdata->get_context_loss_count)
+		abe->loss_count = pdata->get_context_loss_count(&pdev->dev);
+
+	return 0;
+}
+
+static int aess_restore_context(struct abe_data *abe)
+{
+	struct platform_device *pdev = abe->pdev;
+	struct omap4_abe_dsp_pdata *pdata = pdev->dev.platform_data;
+	int loss_count = 0;
+
+	if (pdata->get_context_loss_count)
+		loss_count = pdata->get_context_loss_count(&pdev->dev);
+
+	if ((loss_count != abe->loss_count) && !abe_check_activity())
+		abe_reload_fw();
+
+	/* TODO: Find a better way to save/retore gains after dor OFF mode */
+	abe_unmute_gain(MIXSDT, MIX_SDT_INPUT_UP_MIXER);
+	abe_unmute_gain(MIXSDT, MIX_SDT_INPUT_DL1_MIXER);
+	abe_unmute_gain(MIXAUDUL, MIX_AUDUL_INPUT_MM_DL);
+	abe_unmute_gain(MIXAUDUL, MIX_AUDUL_INPUT_TONES);
+	abe_unmute_gain(MIXAUDUL, MIX_AUDUL_INPUT_UPLINK);
+	abe_unmute_gain(MIXAUDUL, MIX_AUDUL_INPUT_VX_DL);
+	abe_unmute_gain(MIXVXREC, MIX_VXREC_INPUT_TONES);
+	abe_unmute_gain(MIXVXREC, MIX_VXREC_INPUT_VX_DL);
+	abe_unmute_gain(MIXVXREC, MIX_VXREC_INPUT_MM_DL);
+	abe_unmute_gain(MIXVXREC, MIX_VXREC_INPUT_VX_UL);
+	abe_dsp_set_equalizer(EQ1, abe->dl1_equ_profile);
+	abe_dsp_set_equalizer(EQ2L, abe->dl20_equ_profile);
+	abe_dsp_set_equalizer(EQ2R, abe->dl21_equ_profile);
+	abe_dsp_set_equalizer(EQAMIC, abe->amic_equ_profile);
+	abe_dsp_set_equalizer(EQDMIC, abe->dmic_equ_profile);
+	abe_dsp_set_equalizer(EQSDT, abe->sdt_equ_profile);
+
+	return 0;
+}
+
 static int aess_open(struct snd_pcm_substream *substream)
 {
 	struct snd_soc_pcm_runtime *rtd = substream->private_data;
@@ -1715,8 +1771,10 @@
 
 	pm_runtime_get_sync(&pdev->dev);
 
-	if (!abe->active++)
+	if (!abe->active++) {
+		aess_restore_context(abe);
 		abe_wakeup();
+	}
 
 	switch (dai->id) {
 	case ABE_FRONTEND_DAI_MODEM:
@@ -1828,6 +1886,7 @@
 
 	if (!--abe->active) {
 		abe_disable_irq();
+		aess_save_context(abe);
 		abe_dsp_shutdown();
 	}
 	pm_runtime_put_sync(&pdev->dev);
@@ -1905,107 +1964,6 @@
 	.stream_event = aess_stream_event,
 };
 
-#if CONFIG_PM
-static int aess_suspend(struct device *dev)
-{
-	struct platform_device *pdev;
-	struct omap4_abe_dsp_pdata *pdata;
-	struct abe_data *abe = dev_get_drvdata(dev);
-
-	pdev = to_platform_device(dev);
-	pdata = pdev->dev.platform_data;
-
-	if (abe->active && abe_check_activity()) {
-		dev_dbg(&pdev->dev, "Suspend in a middle of ABE activity!\n");
-		goto no_suspend;
-	}
-
-	pm_runtime_get_sync(&pdev->dev);
-
-	/* TODO: Find a better way to save/retore gains after dor OFF mode */
-	abe_mute_gain(MIXSDT, MIX_SDT_INPUT_UP_MIXER);
-	abe_mute_gain(MIXSDT, MIX_SDT_INPUT_DL1_MIXER);
-	abe_mute_gain(MIXAUDUL, MIX_AUDUL_INPUT_MM_DL);
-	abe_mute_gain(MIXAUDUL, MIX_AUDUL_INPUT_TONES);
-	abe_mute_gain(MIXAUDUL, MIX_AUDUL_INPUT_UPLINK);
-	abe_mute_gain(MIXAUDUL, MIX_AUDUL_INPUT_VX_DL);
-	abe_mute_gain(MIXVXREC, MIX_VXREC_INPUT_TONES);
-	abe_mute_gain(MIXVXREC, MIX_VXREC_INPUT_VX_DL);
-	abe_mute_gain(MIXVXREC, MIX_VXREC_INPUT_MM_DL);
-	abe_mute_gain(MIXVXREC, MIX_VXREC_INPUT_VX_UL);
-
-	pm_runtime_put_sync(&pdev->dev);
-
-	/*
-	 * force setting OPP after suspend/resume to ensure
-	 * ABE freq/volt are set to proper values
-	 */
-	abe->opp = 0;
-
-	if (pdata->get_context_loss_count)
-		abe->loss_count = pdata->get_context_loss_count(dev);
-
-no_suspend:
-	return 0;
-}
-
-static int aess_resume(struct device *dev)
-{
-	struct platform_device *pdev;
-	struct omap4_abe_dsp_pdata *pdata;
-	struct abe_data *abe = dev_get_drvdata(dev);
-	int loss_count = 0;
-
-	pdev = to_platform_device(dev);
-	pdata = pdev->dev.platform_data;
-
-	if (abe->active && abe_check_activity()) {
-		dev_dbg(&pdev->dev, "Resume in a middle of ABE activity!\n");
-		goto no_resume;
-	}
-
-	if (pdata->get_context_loss_count)
-		loss_count = pdata->get_context_loss_count(dev);
-
-	pm_runtime_get_sync(&pdev->dev);
-
-	if (loss_count != abe->loss_count)
-		abe_reload_fw();
-
-	/* TODO: Find a better way to save/retore gains after dor OFF mode */
-	abe_unmute_gain(MIXSDT, MIX_SDT_INPUT_UP_MIXER);
-	abe_unmute_gain(MIXSDT, MIX_SDT_INPUT_DL1_MIXER);
-	abe_unmute_gain(MIXAUDUL, MIX_AUDUL_INPUT_MM_DL);
-	abe_unmute_gain(MIXAUDUL, MIX_AUDUL_INPUT_TONES);
-	abe_unmute_gain(MIXAUDUL, MIX_AUDUL_INPUT_UPLINK);
-	abe_unmute_gain(MIXAUDUL, MIX_AUDUL_INPUT_VX_DL);
-	abe_unmute_gain(MIXVXREC, MIX_VXREC_INPUT_TONES);
-	abe_unmute_gain(MIXVXREC, MIX_VXREC_INPUT_VX_DL);
-	abe_unmute_gain(MIXVXREC, MIX_VXREC_INPUT_MM_DL);
-	abe_unmute_gain(MIXVXREC, MIX_VXREC_INPUT_VX_UL);
-	abe_dsp_set_equalizer(EQ1, abe->dl1_equ_profile);
-	abe_dsp_set_equalizer(EQ2L, abe->dl20_equ_profile);
-	abe_dsp_set_equalizer(EQ2R, abe->dl21_equ_profile);
-	abe_dsp_set_equalizer(EQAMIC, abe->amic_equ_profile);
-	abe_dsp_set_equalizer(EQDMIC, abe->dmic_equ_profile);
-	abe_dsp_set_equalizer(EQSDT, abe->sdt_equ_profile);
-
-	pm_runtime_put_sync(&pdev->dev);
-
-no_resume:
-	return 0;
-}
-
-#else
-#define aess_suspend	NULL
-#define aess_resume	NULL
-#endif
-
-static const struct dev_pm_ops aess_pm_ops = {
-	.suspend = aess_suspend,
-	.resume = aess_resume,
-};
-
 static int __devinit abe_engine_probe(struct platform_device *pdev)
 {
 	struct omap_hwmod *oh;
@@ -2070,7 +2028,6 @@
 	.driver = {
 		.name = "omap-aess-audio",
 		.owner = THIS_MODULE,
-		.pm = &aess_pm_ops,
 	},
 	.probe = abe_engine_probe,
 	.remove = __devexit_p(abe_engine_remove),

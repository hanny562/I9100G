From 808ab9dfe155581b030b5421799a41474521b620 Mon Sep 17 00:00:00 2001
From: Alexandre Gonzalo <alexandre.gonzalo@trusted-logic.com>
Date: Wed, 23 Mar 2011 12:57:45 -0500
Subject: OMAP4: SMC: Fix ROM #108 API interaction with CPU1 on/off

This patch is to fix SMC android normal world driver
interaction with ROM API #108 for CPU1 on and off
usecase.

This should fix crashes observed in stability test usecase
with PKCS11 functionality

Change-Id: Id875e547a110bd18b30de81a7384d7fb177bcba1
Signed-off-by: Alexandre Gonzalo <alexandre.gonzalo@trusted-logic.com>
Signed-off-by: Rigaud Jean-Luc <jl-rigaud@ti.com>
Signed-off-by: Praneeth Bajjuri <praneeth@ti.com>
---
 security/smc/omap4/bridge_pub2sec.S      |   14 +++++++++-----
 security/smc/omap4/scxlnx_comm_mshield.c |   12 ++++++------
 2 files changed, 15 insertions(+), 11 deletions(-)

Index: kernel/security/smc/omap4/bridge_pub2sec.S
===================================================================
--- kernel.orig/security/smc/omap4/bridge_pub2sec.S	2011-04-05 21:57:21.000000000 +0900
+++ kernel/security/smc/omap4/bridge_pub2sec.S	2011-04-07 00:01:55.000000000 +0900
@@ -111,15 +111,16 @@
 #endif
 
 	INVALIDATE_BTB
-	mov	r0, #0x00
 	ldr	r8, =g_secure_task_id
 	str	r6, [r8]
+
+	mov	r0, #0x00
+	ldr	r8, =g_service_end
+	str	r0, [r8]
+
 	b	schedule_secure_world_exit
 
 service_end:
-	ldr	r8, =g_service_end
-	mov	r6, #0x1
-	str	r6, [r8]
 
 schedule_secure_world_exit:
 #ifdef CONFIG_SMC_BENCH_SECURE_CYCLE
@@ -170,8 +171,11 @@
 	ldr	r8, =g_secure_task_id
 	str	r6, [r8]
 
-	/* Restore registers */
 	mov	r0, #0x00
+	ldr	r8, =g_service_end
+	str	r0, [r8]
+
+	/* Restore registers */
 	pop	{r4-r12, pc}
 
 #ifdef CONFIG_SMC_BENCH_SECURE_CYCLE
Index: kernel/security/smc/omap4/scxlnx_comm_mshield.c
===================================================================
--- kernel.orig/security/smc/omap4/scxlnx_comm_mshield.c	2011-04-05 21:57:21.000000000 +0900
+++ kernel/security/smc/omap4/scxlnx_comm_mshield.c	2011-04-07 00:01:55.000000000 +0900
@@ -181,14 +181,14 @@
 	unsigned long nITFlags;
 	u32 pub2sec_args[5] = {0, 0, 0, 0, 0};
 
-	dprintk(KERN_INFO "omap4_secure_dispatcher: "
+	/*dprintk(KERN_INFO "omap4_secure_dispatcher: "
 		"app_id=0x%08x, flags=0x%08x, nargs=%u\n",
-		app_id, flags, nargs);
+		app_id, flags, nargs);*/
 
-	if (nargs != 0)
+	/*if (nargs != 0)
 		dprintk(KERN_INFO
 		"omap4_secure_dispatcher: args=%08x, %08x, %08x, %08x\n",
-		arg1, arg2, arg3, arg4);
+		arg1, arg2, arg3, arg4);*/
 
 	pub2sec_args[0] = nargs;
 	pub2sec_args[1] = arg1;
@@ -250,7 +250,7 @@
 		break;
 	}
 
-	g_service_end = 0;
+	g_service_end = 1;
 	/* yield to the Secure World */
 	ret = omap4_secure_dispatcher(appli_id, /* app_id */
 	   0, 0,        /* flags, nargs */

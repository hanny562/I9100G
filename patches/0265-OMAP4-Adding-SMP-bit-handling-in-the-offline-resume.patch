From aecd7ea2fc9bbe31baf8048000a9cda0af4c9405 Mon Sep 17 00:00:00 2001
From: Santosh Shilimkar <santosh.shilimkar@ti.com>
Date: Thu, 10 Mar 2011 09:35:23 -0600
Subject: OMAP4: Adding SMP bit handling in the offline/resume paths

In this patch the handling of the SMP bit in Public is added
in the offline/resume paths for all CPUs.
This functionality is available in HS devices only, and
requires PPA 1.0 or greater.

Also local macros are introduced to facilitate the calling of
repetitive portions of code and to improve readability.

Change-Id: I5a329c121ee913bff9d6938111eee2b1edc7ef10
Signed-off-by: Carlos Leija <cileija@ti.com>
Signed-off-by: Jean-Luc Rigaud <jl-rigaud@ti.com>
Signed-off-by: Dan Murphy <dmurphy@ti.com>
---
 arch/arm/mach-omap2/include/mach/omap4-common.h |    5 +
 arch/arm/mach-omap2/omap-smp.c                  |    3 +
 arch/arm/mach-omap2/sleep44xx.S                 |   94 ++++++++++++++++++++++-
 3 files changed, 99 insertions(+), 3 deletions(-)

Index: kernel/arch/arm/mach-omap2/include/mach/omap4-common.h
===================================================================
--- kernel.orig/arch/arm/mach-omap2/include/mach/omap4-common.h	2011-04-08 19:23:40.000000000 +0900
+++ kernel/arch/arm/mach-omap2/include/mach/omap4-common.h	2011-04-08 19:49:38.408331086 +0900
@@ -47,6 +47,11 @@
 #define PPA_SERVICE_NS_SMP		0x25
 
 /*
+ * Secure HAL, PPA services available
+ */
+#define PPA_SERVICE_NS_SMP		0x25
+
+/*
  * Secure HAL API flags
  */
 #define FLAG_START_CRITICAL		0x4
Index: kernel/arch/arm/mach-omap2/omap-smp.c
===================================================================
--- kernel.orig/arch/arm/mach-omap2/omap-smp.c	2011-04-08 19:23:40.000000000 +0900
+++ kernel/arch/arm/mach-omap2/omap-smp.c	2011-04-08 19:49:38.408331086 +0900
@@ -49,6 +49,9 @@
 	/* Enable NS access to SMP bit */
 	omap4_secure_dispatcher(PPA_SERVICE_NS_SMP, 4, 0, 0, 0, 0, 0);
 
+	/* Enable NS access to SMP bit */
+	omap4_secure_dispatcher(PPA_SERVICE_NS_SMP, 4, 0, 0, 0, 0, 0);
+
 	/*
 	 * If any interrupts are already enabled for the primary
 	 * core (e.g. timer irq), then they will not have been enabled
Index: kernel/arch/arm/mach-omap2/sleep44xx.S
===================================================================
--- kernel.orig/arch/arm/mach-omap2/sleep44xx.S	2011-04-08 19:36:44.000000000 +0900
+++ kernel/arch/arm/mach-omap2/sleep44xx.S	2011-04-08 19:49:38.418341470 +0900
@@ -29,6 +29,7 @@
 #define SCU_CLEAR_STATE				0xFCFC
 
 
+
 /*
  * Macro to call PPA svc when MMU is OFF
  * Caller must setup r0 and r3 before calling this macro
@@ -44,6 +45,8 @@
 	smc     #0
 .endm
 
+.equ LOCAL_VA2PA_OFFSET,		(PHYS_OFFSET-PAGE_OFFSET)
+
 /*
  * Macro to check CpuID
  */
@@ -416,6 +419,10 @@
 	orr	r0, r0, #0x40		@ Enable SMP bit
 	mcr	p15, 0, r0, c1, c0, 1
 	isb
+	mrc	p15, 0, r0, c1, c0, 1
+	orr	r0, r0, #0x40		@ Enable SMP bit
+	mcr	p15, 0, r0, c1, c0, 1
+	isb
 	b	skip_gp_clear
 scu_gp_clear:
 	ldr	r2, =scu_base		@ Take CPUx out of coherency

From f6ed662509168d993a932ae6b6d7c4070eba4f12 Mon Sep 17 00:00:00 2001
From: keun-o.park <sahara@ti.com>
Date: Thu, 10 Feb 2011 18:15:57 +0900
Subject: ASoC: OMAP PCM - fix falling into infinite loop for OMAP3

This prevent kernel from calling OMAP4 specific routine and
falling into while infinite loop on OMAP3.
So this fixes the hang issue at the end of recording on OMAP3.

Change-Id: I0b42e1bd271cac7071b9f3a5038cbc9ea1239c7c
Signed-off-by: keun-o.park <sahara@ti.com>
---
 sound/soc/omap/omap-pcm.c |   12 +++++++-----
 1 files changed, 7 insertions(+), 5 deletions(-)

diff --git a/sound/soc/omap/omap-pcm.c b/sound/soc/omap/omap-pcm.c
index 7f34626..eb2d8c4 100644
--- a/sound/soc/omap/omap-pcm.c
+++ b/sound/soc/omap/omap-pcm.c
@@ -234,11 +234,13 @@ static int omap_pcm_trigger(struct snd_pcm_substream *substream, int cmd)
 	case SNDRV_PCM_TRIGGER_PAUSE_PUSH:
 		prtd->period_index = -1;
 		omap_stop_dma(prtd->dma_ch);
-		/* Since we are using self linking, there is a
-		   chance that the DMA as re-enabled the channel
-		   just after disabling it */
-		while (omap_get_dma_active_status(prtd->dma_ch))
-			omap_stop_dma(prtd->dma_ch);
+		if (cpu_is_omap44xx()) {
+			/* Since we are using self linking, there is a
+		  	 chance that the DMA as re-enabled the channel
+		 	  just after disabling it */
+			while (omap_get_dma_active_status(prtd->dma_ch))
+				omap_stop_dma(prtd->dma_ch);
+		}
 		break;
 	default:
 		ret = -EINVAL;
-- 
1.6.0.4


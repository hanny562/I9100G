From 08f37e8f3c5e25018a66506b2211a443afda0173 Mon Sep 17 00:00:00 2001
From: Dandawate Saket <dsaket@ti.com>
Date: Sat, 5 Mar 2011 00:16:35 +0530
Subject: OMAP4: DSI/V4L2 Fix for 60fps rendering on primary DS1

It was found that we were using TE enable instead of TE start to
send out the data for primary display. For manual update mode we should
be using TE start as recommended. In TE enable mode we will loose time
waiting for the TE interrupt to arrive from the panel which will occur
at 60 fps i.e 15 msec boundary. In case of TE start we can issue another
transfer after Framedone from the dispc. This also garantees no tear
since we wait for Framedone interrupt.

Change-Id: Ibbaefeea1c5474a90f9042d40280f6dc2d6ceb73
Signed-off-by: Dandawate Saket <dsaket@ti.com>
---
 drivers/media/video/omap/omap_vout.c     |    4 ++--
 drivers/video/omap2/omapfb/omapfb-main.c |    2 +-
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/drivers/media/video/omap/omap_vout.c b/drivers/media/video/omap/omap_vout.c
index a885bf9..969e4a4 100644
--- a/drivers/media/video/omap/omap_vout.c
+++ b/drivers/media/video/omap/omap_vout.c
@@ -3539,13 +3539,13 @@ static int __init omap_vout_probe(struct platform_device *pdev)
 					OMAP_DSS_DISPLAY_CAP_MANUAL_UPDATE) {
 #ifdef CONFIG_FB_OMAP2_FORCE_AUTO_UPDATE
 				if (dssdrv->enable_te)
-					dssdrv->enable_te(def_display, 1);
+					dssdrv->enable_te(def_display, 0);
 				if (dssdrv->set_update_mode)
 					dssdrv->set_update_mode(def_display,
 							OMAP_DSS_UPDATE_AUTO);
 #else	/* MANUAL_UPDATE */
 				if (dssdrv->enable_te)
-					dssdrv->enable_te(def_display, 1);
+					dssdrv->enable_te(def_display, 0);
 				if (dssdrv->set_update_mode)
 					dssdrv->set_update_mode(def_display,
 							OMAP_DSS_UPDATE_MANUAL);
diff --git a/drivers/video/omap2/omapfb/omapfb-main.c b/drivers/video/omap2/omapfb/omapfb-main.c
index cb52e86..0ed1b12 100644
--- a/drivers/video/omap2/omapfb/omapfb-main.c
+++ b/drivers/video/omap2/omapfb/omapfb-main.c
@@ -2575,7 +2575,7 @@ static int omapfb_probe(struct platform_device *pdev)
 		if (def_display->caps & OMAP_DSS_DISPLAY_CAP_MANUAL_UPDATE) {
 			u16 w, h;
 			if (dssdrv->enable_te)
-				dssdrv->enable_te(def_display, 1);
+				dssdrv->enable_te(def_display, 0);
 			if (dssdrv->set_update_mode)
 				dssdrv->set_update_mode(def_display,
 						OMAP_DSS_UPDATE_MANUAL);
-- 
1.6.0.4


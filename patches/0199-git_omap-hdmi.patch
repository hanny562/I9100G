Index: kernel/arch/arm/plat-omap/hdmi_lib.c
===================================================================
--- kernel.orig/arch/arm/plat-omap/hdmi_lib.c	2011-04-06 21:34:07.000000000 +0900
+++ kernel/arch/arm/plat-omap/hdmi_lib.c	2011-04-06 21:41:43.000000000 +0900
@@ -219,7 +219,6 @@
 	void __iomem *base_core_av;	/* 1 */
 	void __iomem *base_wp;		/* 2 */
 	struct hdmi_core_infoframe_avi avi_param;
-	struct mutex mutex;
 	struct list_head notifier_head;
 #ifdef CONFIG_OMAP_HDMI_AUDIO_WA
 	u32 notify_event_reg;
@@ -228,6 +227,8 @@
 #endif
 } hdmi;
 
+static DEFINE_MUTEX(hdmi_mutex);
+
 static inline void hdmi_write_reg(u32 base, u16 idx, u32 val)
 {
 	void __iomem *b;
@@ -1641,11 +1642,11 @@
 	repeat_param.AudioPacketED = PACKETENABLE;
 	repeat_param.AudioPacketRepeat = PACKETREPEATON;
 	/* ISCR1 transmission */
-	repeat_param.MPEGInfoFrameED = PACKETENABLE;
-	repeat_param.MPEGInfoFrameRepeat = PACKETREPEATON;
+	repeat_param.MPEGInfoFrameED = PACKETDISABLE;
+	repeat_param.MPEGInfoFrameRepeat = PACKETREPEATOFF;
 	/* ACP transmission */
-	repeat_param.SPDInfoFrameED = PACKETENABLE;
-	repeat_param.SPDInfoFrameRepeat = PACKETREPEATON;
+	repeat_param.SPDInfoFrameED = cfg->supports_ai;
+	repeat_param.SPDInfoFrameRepeat = cfg->supports_ai;
 
 	r = hdmi_core_av_packet_config(av_name, repeat_param);
 
@@ -1662,8 +1663,25 @@
 	return r;
 }
 
-int hdmi_lib_init(void){
-	u32 rev;
+/**
+ * hdmi_lib_init - Initializes hdmi library
+ *
+ * hdmi_lib_init is expected to be called by any user of the hdmi library (e.g.
+ * HDMI video driver, HDMI audio driver). This means that it is not safe to add
+ * anything in this function that requires the DSS clocks to be enabled.
+ */
+int hdmi_lib_init(void)
+{
+	static u8 initialized;
+
+	mutex_lock(&hdmi_mutex);
+	if (initialized) {
+		printk(KERN_INFO "hdmi_lib already initialized\n");
+		mutex_unlock(&hdmi_mutex);
+		return 0;
+	}
+	initialized = 1;
+	mutex_unlock(&hdmi_mutex);
 
 	hdmi.base_wp = ioremap(HDMI_WP, (HDMI_HDCP - HDMI_WP));
 
@@ -1680,13 +1698,8 @@
 			CHIP_IS_OMAP4430ES2_1 | CHIP_IS_OMAP4430ES2_2;
 #endif
 
-	mutex_init(&hdmi.mutex);
 	INIT_LIST_HEAD(&hdmi.notifier_head);
 
-	rev = hdmi_read_reg(HDMI_WP, HDMI_WP_REVISION);
-	printk(KERN_INFO "OMAP HDMI W1 rev %d.%d\n",
-		FLD_GET(rev, 10, 8), FLD_GET(rev, 5, 0));
-
 	return 0;
 }
 
@@ -1964,9 +1977,9 @@
 
 void hdmi_add_notifier(struct hdmi_notifier *notifier)
 {
-	mutex_lock(&hdmi.mutex);
+	mutex_lock(&hdmi_mutex);
 	list_add_tail(&notifier->list, &hdmi.notifier_head);
-	mutex_unlock(&hdmi.mutex);
+	mutex_unlock(&hdmi_mutex);
 }
 
 void hdmi_remove_notifier(struct hdmi_notifier *notifier)
@@ -1975,9 +1988,9 @@
 
 	list_for_each_entry_safe(cur, next, &hdmi.notifier_head, list) {
 		if (cur == notifier) {
-			mutex_lock(&hdmi.mutex);
+			mutex_lock(&hdmi_mutex);
 			list_del(&cur->list);
-			mutex_unlock(&hdmi.mutex);
+			mutex_unlock(&hdmi_mutex);
 		}
 	}
 }
Index: kernel/arch/arm/plat-omap/include/plat/hdmi_lib.h
===================================================================
--- kernel.orig/arch/arm/plat-omap/include/plat/hdmi_lib.h	2011-04-06 21:34:07.000000000 +0900
+++ kernel/arch/arm/plat-omap/include/plat/hdmi_lib.h	2011-04-06 21:44:36.000000000 +0900
@@ -27,7 +27,7 @@
 #define HDMI_WP_AUDIO_DATA	0x8Cul
 
 #define DBG(format, ...) \
-		printk(KERN_INFO "hdmi: " format, ## __VA_ARGS__)
+		printk(KERN_DEBUG "hdmi: " format, ## __VA_ARGS__)
 #define ERR(format, ...) \
 	printk(KERN_ERR "hdmi error: " format, ## __VA_ARGS__)
 
Index: kernel/drivers/video/omap2/dss/hdmi.c
===================================================================
--- kernel.orig/drivers/video/omap2/dss/hdmi.c	2011-04-06 21:34:07.000000000 +0900
+++ kernel/drivers/video/omap2/dss/hdmi.c	2011-04-06 21:40:40.000000000 +0900
@@ -1948,7 +1948,7 @@
 		temp_vsync = temp.vfp + temp.vsw + temp.vbp;
 		timing_vsync = timing->vfp + timing->vsw + timing->vbp;
 
-		printk(KERN_INFO "Temp_hsync = %d, temp_vsync = %d, "
+		DSSDBG("Temp_hsync = %d, temp_vsync = %d, "
 			"timing_hsync = %d, timing_vsync = %d",
 			temp_hsync, temp_vsync, timing_hsync, timing_vsync);
 
@@ -1956,7 +1956,7 @@
 			code = i;
 			cm.code = code_index[i];
 			cm.mode = code < 14;
-			DSSINFO("Video code = %d mode = %s\n",
+			DSSDBG("Video code = %d mode = %s\n",
 			cm.code, cm.mode ? "CEA" : "VESA");
 			break;
 		}

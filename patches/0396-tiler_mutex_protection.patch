From 12146469f7144a0299742858c043311a5c994d1b Mon Sep 17 00:00:00 2001
From: venkatesh viswanathan <venkateshv@ti.com>
Date: Sat, 14 May 2011 03:45:56 -0500
Subject: [PATCH] Tiler: Fix to protect tiler allocation in tmm_pat_get_pages

The patch moves the mutex in the tmm_pat_get_pages before
fill_page_stack call to protect the allocation loop.
Signed-off-by: venkatesh viswanathan <venkateshv@ti.com>

Change-Id: I26b045c57d272e8f4fc0e081f06a2c2ad553a38c
---
 drivers/media/video/dmm/tmm_pat.c |   17 ++++++-----------
 1 files changed, 6 insertions(+), 11 deletions(-)

Index: kernel/drivers/media/video/dmm/tmm_pat.c
===================================================================
--- kernel.orig/drivers/media/video/dmm/tmm_pat.c	2011-06-03 15:03:31.000000000 +0900
+++ kernel/drivers/media/video/dmm/tmm_pat.c	2011-06-03 15:18:34.000000000 +0900
@@ -87,7 +87,7 @@
 	}
 }
 
-static u32 fill_page_stack(struct mem *mem, struct mutex *mtx)
+static u32 fill_page_stack(struct mem *mem)
 {
 	s32 i = 0;
 	struct mem *m = NULL;
@@ -114,10 +114,8 @@
 					(void *)page_address(m->pg) + DMM_PAGE);
 		outer_flush_range(m->pa, m->pa + DMM_PAGE);
 
-		mutex_lock(mtx);
 		count++;
 		list_add(&m->list, &mem->list);
-		mutex_unlock(mtx);
 	}
 	return 0x0;
 }
@@ -157,11 +155,6 @@
 
 	if (n <= 0 || n > 0x8000)
 		return NULL;
-
-	if (list_empty_careful(&pvt->free_list.list))
-		if (fill_page_stack(&pvt->free_list, &pvt->mtx))
-			return NULL;
-
 	f = kmalloc(sizeof(*f), GFP_KERNEL);
 	if (!f)
 		return NULL;
@@ -188,11 +181,13 @@
 	f->num = n;
 
 	for (i = 0; i < n; i++) {
+		mutex_lock(&pvt->mtx);
 		if (list_empty_careful(&pvt->free_list.list))
-			if (fill_page_stack(&pvt->free_list, &pvt->mtx))
+			if (fill_page_stack(&pvt->free_list)) {
+				mutex_unlock(&pvt->mtx);
 				goto cleanup;
+			}
 
-		mutex_lock(&pvt->mtx);
 		pos = NULL;
 		q = NULL;
 		m = NULL;
@@ -308,7 +303,7 @@
 
 		count = 0;
 		if (list_empty_careful(&pvt->free_list.list))
-			if (fill_page_stack(&pvt->free_list, &pvt->mtx))
+			if (fill_page_stack(&pvt->free_list))
 				goto error;
 
 		/* public data */

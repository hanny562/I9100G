From: Madhusudhan Chikkature <madhu.cr@ti.com>
Date: Fri, 20 May 2011 19:58:51 +0000 (-0500)
Subject: OMAP4:I2C DPLL exit fix
X-Git-Url: http://git.omapzoom.org/?p=kernel%2Fomap.git;a=commitdiff_plain;h=8e05e1d74eb19844c044524f82235fa93e45f10f

OMAP4:I2C DPLL exit fix

The while loop in the I2C DPLL exit path to wait for bus
busy can cause a potential problem.Remove the wait for
bus busy.

Change-Id: Ieec6411cd94bb26e7b0e3ef973ac163fee10aa9a
Signed-off-by: Madhusudhan Chikkature <madhu.cr@ti.com>
---

Index: kernel/drivers/i2c/busses/i2c-omap.c
===================================================================
--- kernel.orig/drivers/i2c/busses/i2c-omap.c	2011-05-27 23:26:29.638380262 +0900
+++ kernel/drivers/i2c/busses/i2c-omap.c	2011-05-27 23:26:35.450848510 +0900
@@ -368,20 +368,11 @@
 
 	spin_lock(&dev->dpll_lock);
 
-	if (val == CLK_POST_RATE_CHANGE &&
-		cnd->old_rate == OMAP_I2C_DPLL_CLOCK) {
+	if (val != CLK_PRE_RATE_CHANGE) {
+		if (cnd->old_rate == OMAP_I2C_DPLL_CLOCK)
 			dev->dpll_entry = 1;
-	} else if (val == CLK_PRE_RATE_CHANGE &&
-			cnd->old_rate == OMAP_I2C_DPLL_CLOCK) {
-		/*
-		 * If the device is not idle in the DPLL exit
-		 * wait for the bus to become free.
-		 * FIXME: Can not sleep here.
-		 */
-		if (dev->idle == 0)
-			while (omap_i2c_read_reg(dev,
-				OMAP_I2C_STAT_REG) & OMAP_I2C_STAT_BB);
-		dev->dpll_exit = 1;
+		else if (cnd->old_rate == OMAP_I2C_MASTER_CLOCK)
+			dev->dpll_exit = 1;
 	}
 
 	spin_unlock(&dev->dpll_lock);

From: Miguel Vadillo <vadillo@ti.com>
Date: Thu, 10 Feb 2011 16:14:23 +0000 (-0600)
Subject: syslink: ipu_pm: fix disable/enable in runtime ipu hib
X-Git-Tag: android-2.6.35-2.3-omap4.13.1~83
X-Git-Url: http://git.omapzoom.org/?p=kernel%2Fomap.git;a=commitdiff_plain;h=591644504eaf95498c925032dab6efdfeb7797b3

syslink: ipu_pm: fix disable/enable in runtime ipu hib

Adapt IPU Hibernation override control flag to work
with the new watch-dog timer design.

In order to enable/disable the flag hibernateAllowed should
be set to 0 and hibernation and wdt will be disabled.
Set it the flag back to 1 will allowed again both features.

This flag is located in the member pm_flags of the sms struct
and it is the last bit of it.

Very useful when debugging ipu and avoid the rebuilding
of the kernel after disabling the features in menuconfig.

Change-Id: I4b58bb62912c4481d068b347d2feadc9fe95f3fc
Signed-off-by: Miguel Vadillo <vadillo@ti.com>
Signed-off-by: Juan Gutierrez <jgutierrez@ti.com>
---

Index: kernel/drivers/dsp/syslink/ipu_pm/ipu_pm.c
===================================================================
--- kernel.orig/drivers/dsp/syslink/ipu_pm/ipu_pm.c	2011-05-10 20:14:22.000000000 +0900
+++ kernel/drivers/dsp/syslink/ipu_pm/ipu_pm.c	2011-05-10 20:14:49.000000000 +0900
@@ -2588,22 +2588,28 @@
 	int sys_loaded;
 	int app_loaded;
 	struct ipu_pm_object *handle;
+	struct ipu_pm_params *params;
 
 	/*If feature not supported by proc, return*/
 	if (!proc_supported(proc_id))
 		return 0;
 
-	/* get the handle to proper ipu pm object */
-	handle = ipu_pm_get_handle(proc_id);
-
+	/* get the handle to proper ipu pm object
+	 * currently sys_m3 is the one handling hib
+	 */
+	handle = ipu_pm_get_handle(SYS_M3);
 	if (WARN_ON(unlikely(handle == NULL)))
 		return -EINVAL;
 
-	/* FIXME: This needs mor analysis.
+	params = handle->params;
+	if (WARN_ON(unlikely(params == NULL)))
+		return -EINVAL;
+
+	/* FIXME: This needs more analysis.
 	 * Since the sync of IPU and MPU is done this is a safe place
 	 * to switch to HW_AUTO to allow transition of clocks to gated
 	 * supervised by HW.
-	*/
+	 */
 	if (first_time) {
 		/* Enable/disable ipu hibernation*/
 #ifdef CONFIG_SYSLINK_IPU_SELF_HIBERNATION
@@ -2670,10 +2676,6 @@
 				 OMAP4_CM_DUCATI_CLKSTCTRL_OFFSET);
 			handle->rcb_table->state_flag &= ~APP_PROC_DOWN;
 		}
-#ifdef CONFIG_SYSLINK_IPU_SELF_HIBERNATION
-		/* turn on ducati hibernation timer */
-		ipu_pm_timer_state(PM_HIB_TIMER_ON);
-#endif
 #ifdef CONFIG_OMAP_PM
 		retval = omap_pm_set_max_sdma_lat(&pm_qos_handle_2,
 						IPU_PM_MM_MPU_LAT_CONSTRAINT);
@@ -2683,6 +2685,12 @@
 	} else
 		goto error;
 exit:
+#ifdef CONFIG_SYSLINK_IPU_SELF_HIBERNATION
+	/* turn on ducati hibernation timer */
+	if ((params->hib_timer_state == PM_HIB_TIMER_OFF) &&
+		global_rcb->pm_flags.hibernateAllowed)
+		ipu_pm_timer_state(PM_HIB_TIMER_ON);
+#endif
 	mutex_unlock(ipu_pm_state.gate_handle);
 	return retval;
 error:
@@ -3166,6 +3174,14 @@
 		params->hib_timer_state = PM_HIB_TIMER_OFF;
 		break;
 	case PM_HIB_TIMER_ON: /* enable timer */
+		/* If hibernation flag is disabled never start the HIB/WDT timer
+		 * this can be used to turn off in runtime this feature without
+		 * having to rebuild the kernel.
+		 * Very useful when debugging IPU.
+		 */
+		if (!global_rcb->pm_flags.hibernateAllowed)
+			break;
+
 		if (params->hib_timer_state == PM_HIB_TIMER_RESET) {
 			tick_rate = clk_get_rate(omap_dm_timer_get_fclk(
 					sys_rproc->dmtimer));

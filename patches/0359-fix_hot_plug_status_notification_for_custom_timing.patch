From: srinivas pulukuru <srinivas.pulukuru@ti.com>
Date: Fri, 6 May 2011 17:41:41 +0000 (-0500)
Subject: OMAP4 DSS HDMI: fix hot plug status notification for custom timing
X-Git-Url: http://omapzoom.org/?p=kernel%2Fomap.git;a=commitdiff_plain;h=a49577b8901a09952c1c97d51ec658f3aa9a92d2

OMAP4 DSS HDMI: fix hot plug status notification for custom timing

1.Power change and hot plug status notification should be sent
 after physical connect for custom timing change only
2. For normal connect / disconnect scenarios power change and
hot plug status notification should only be sent after reconfiguring
 hdmi phy which in this case is at the end of HDMI_FIRST_HPD processing.
3. To avoid SYNC_LOST_DIGIT issues DISPC DIGIT channel should be reset
after hot plug status notification is sent.

Change-Id: I536d6a697d65f7ebfdacb14ac1215e0bbb3f6162
Signed-off-by: srinivas pulukuru <srinivas.pulukuru@ti.com>
---

diff --git a/drivers/video/omap2/dss/hdmi.c b/drivers/video/omap2/dss/hdmi.c
index 3008213..407d51b 100644
--- a/drivers/video/omap2/dss/hdmi.c
+++ b/drivers/video/omap2/dss/hdmi.c
@@ -1475,12 +1475,21 @@ static void hdmi_work_queue(struct work_struct *ws)
 	if (action & HDMI_CONNECT)
 		last_connect = ktime_get();
 
-	if (action & HDMI_CONNECT) {
-		if (custom_set)
-			user_hpd_state = false;
+	/* For custom timing change force a hot plug status notification
+	 * to the user after physical connect.
+	 */
+	if (action & HDMI_CONNECT &&
+	    hdmi_power == HDMI_POWER_FULL &&
+	    custom_set) {
 
-		if (!user_hpd_state && (hdmi_power == HDMI_POWER_FULL))
-			set_hdmi_hot_plug_status(dssdev, true);
+		user_hpd_state = false;
+		mutex_unlock(&hdmi.lock_aux);
+		hdmi_notify_pwrchange(HDMI_EVENT_POWERON);
+		mutex_unlock(&hdmi.lock);
+		mdelay(100);
+		mutex_lock(&hdmi.lock);
+		mutex_lock(&hdmi.lock_aux);
+		set_hdmi_hot_plug_status(dssdev, true);
 	}
 
 	if ((action & HDMI_CONNECT) && (video_power == HDMI_POWER_MIN) &&
@@ -1497,7 +1506,6 @@ static void hdmi_work_queue(struct work_struct *ws)
 		custom_set = true;
 		hdmi_reconfigure(dssdev);
 		mutex_unlock(&hdmi.lock_aux);
-		hdmi_notify_pwrchange(HDMI_EVENT_POWERON);
 		mutex_unlock(&hdmi.lock);
 		mdelay(100);
 		mutex_lock(&hdmi.lock);
@@ -1541,7 +1549,27 @@ done:
 		}
 
 		hdmi_reconfigure(dssdev);
+		mutex_unlock(&hdmi.lock_aux);
+		hdmi_notify_pwrchange(HDMI_EVENT_POWERON);
+		mutex_unlock(&hdmi.lock);
+		mdelay(100);
+		mutex_lock(&hdmi.lock);
+		mutex_lock(&hdmi.lock_aux);
+
 		set_hdmi_hot_plug_status(dssdev, true);
+
+		mdelay(50);
+
+		DSSINFO("Stop DISPC DIGIT channel\n");
+		HDMI_W1_StopVideoFrame(HDMI_WP);
+		dispc_enable_digit_out(0);
+
+		mdelay(50);
+
+		DSSINFO("Start DISPC DIGIT channel\n");
+		HDMI_W1_StartVideoFrame(HDMI_WP);
+		dispc_enable_digit_out(1);
+
 		/* ignore return value for now */
 		DSSINFO("Enabling display Done- HDMI_FIRST_HPD\n\n");
 	}

Index: Kernel/arch/arm/mach-omap2/board-omap4tab10-1.c
===================================================================
--- Kernel.orig/arch/arm/mach-omap2/board-omap4tab10-1.c	2011-01-06 03:31:24.593101511 +0530
+++ Kernel/arch/arm/mach-omap2/board-omap4tab10-1.c	2011-01-06 03:51:43.702478387 +0530
@@ -1339,6 +1339,7 @@
 	.max_charger_voltagemV		= 4560,
 	.max_bat_voltagemV		= 4200,
 	.low_bat_voltagemV		= 3300,
+	.termination_currentmA		= 50,
 	.battery_tmp_tbl		= omap4tab_batt_table,
 	.tblsize			= ARRAY_SIZE(omap4tab_batt_table),
 };
Index: Kernel/drivers/mfd/twl6030-gpadc.c
===================================================================
--- Kernel.orig/drivers/mfd/twl6030-gpadc.c	2011-01-06 03:32:38.332615317 +0530
+++ Kernel/drivers/mfd/twl6030-gpadc.c	2011-01-06 03:45:31.022477221 +0530
@@ -101,8 +101,8 @@
 	8,	/* CHANNEL 5 */
 	8,	/* CHANNEL 6 */
 
-	/* 6.25 */
-	50,	/* CHANNEL 7 */
+	/* 5 */
+	40,	/* CHANNEL 7 */
 
 	/* 6.25 */
 	50,	/* CHANNEL 8 */
Index: Kernel/drivers/power/twl6030_bci_battery.c
===================================================================
--- Kernel.orig/drivers/power/twl6030_bci_battery.c	2011-01-06 03:32:48.853101754 +0530
+++ Kernel/drivers/power/twl6030_bci_battery.c	2011-01-06 03:51:43.702478387 +0530
@@ -825,6 +825,10 @@
 	int charging_disabled = 0;
 	unsigned int time_delta = 0;
 
+	int vmax = 3700;
+	int vmin = 2560;
+	int unit;
+
 	/* Because system load is always greater than
 	 * termination current, we will never get a CHARGE DONE
 	 * int from BQ. And charging will alwys be in progress.
@@ -855,21 +859,12 @@
 	/* Setting the capacity level only makes sense when on
 	 * the battery is powering the board.
 	 */
-	if (di->charge_status == POWER_SUPPLY_STATUS_DISCHARGING) {
-		if (di->voltage_uV < 3500)
-			curr_capacity = 5;
-		else if (di->voltage_uV < 3600 && di->voltage_uV >= 3500)
-			curr_capacity = 20;
-		else if (di->voltage_uV < 3700 && di->voltage_uV >= 3600)
-			curr_capacity = 50;
-		else if (di->voltage_uV < 3800 && di->voltage_uV >= 3700)
-			curr_capacity = 75;
-		else if (di->voltage_uV < 3900 && di->voltage_uV >= 3800)
-			curr_capacity = 90;
-		else if (di->voltage_uV >= 3900) {
-				curr_capacity = 100;
-		}
-	}
+	unit = (vmax-vmin)/100;
+	curr_capacity = (di->voltage_uV - vmin)/unit;
+	if (curr_capacity > 100)
+		curr_capacity = 100;
+	if (curr_capacity <= 0)
+		curr_capacity = 0;
 
 	/* if we disabled charging to check capacity,
 	 * enable it again after we read the
@@ -1692,6 +1687,12 @@
 		goto chg_irq_fail;
 	}
 
+	ret = power_supply_register(&pdev->dev, &di->bk_bat);
+	if (ret) {
+		dev_dbg(&pdev->dev, "failed to register backup battery\n");
+		goto bk_batt_failed;
+	}
+
 	ret = power_supply_register(&pdev->dev, &di->bat);
 	if (ret) {
 		dev_dbg(&pdev->dev, "failed to register main battery\n");
@@ -1715,11 +1716,6 @@
 		goto ac_failed;
 	}
 
-	ret = power_supply_register(&pdev->dev, &di->bk_bat);
-	if (ret) {
-		dev_dbg(&pdev->dev, "failed to register backup battery\n");
-		goto bk_batt_failed;
-	}
 	di->charge_n1 = 0;
 	di->timer_n1 = 0;
 
@@ -1782,14 +1778,14 @@
 
 	return 0;
 
-bk_batt_failed:
-	power_supply_unregister(&di->ac);
 ac_failed:
 	power_supply_unregister(&di->usb);
 usb_failed:
 	cancel_delayed_work(&di->twl6030_bci_monitor_work);
 	power_supply_unregister(&di->bat);
 batt_failed:
+	power_supply_unregister(&di->bk_bat);
+bk_batt_failed:
 	free_irq(irq, di);
 chg_irq_fail:
 	irq = platform_get_irq(pdev, 1);

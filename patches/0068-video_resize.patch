Index: Kernel/drivers/media/video/omap/omap_voutlib.c
===================================================================
--- Kernel.orig/drivers/media/video/omap/omap_voutlib.c	2011-02-16 13:11:08.000000000 +0530
+++ Kernel/drivers/media/video/omap/omap_voutlib.c	2011-02-16 13:17:04.322105008 +0530
@@ -57,35 +57,12 @@
  * impossible and cannot reasonably be adjusted.
  */
 int omap_vout_try_window(struct v4l2_framebuffer *fbuf,
-			struct v4l2_window *new_win, int rotation)
+			struct v4l2_window *new_win)
 {
 	struct v4l2_rect try_win;
 	
-	int tmp;
-
-#if 0	
-	if (rotation) {
-		try_win.width = new_win->w.height;
-		try_win.height = new_win->w.width;
-		try_win.left = new_win->w.left;
-		try_win.top = new_win->w.top;
-	} else {
-		/* make a working copy of the new_win rectangle */
-		try_win = new_win->w;
-	}
-#endif	
-	
 	try_win = new_win->w;
 	
-	printk("omap_vout_try_window rot %d\n", rotation);
-	
-	if(rotation == 1 || rotation == 3)
-	{
-		tmp = try_win.left;
-		try_win.left = try_win.top;
-		try_win.top = tmp;
-	}
-
 	/* adjust the preview window so it fits on the display by clipping any
 	 * offscreen areas
 	 */
@@ -103,27 +80,11 @@
 		try_win.height : fbuf->fmt.height;
 
 
-	if(rotation == 1 || rotation == 3)
-	{
-		if (try_win.left + try_win.height > fbuf->fmt.height)
-                	try_win.height = fbuf->fmt.height - try_win.left;
-	        if (try_win.top + try_win.width > fbuf->fmt.width)
-        	        try_win.width = fbuf->fmt.width - try_win.top;
-
-		//try_win.top = (fbuf->fmt.width - try_win.width)/2;
-		//try_win.left = (fbuf->fmt.height - try_win.height)/2;
-	}
-	else
-	{
-		if (try_win.left + try_win.width > fbuf->fmt.width)
-			try_win.width = fbuf->fmt.width - try_win.left;
-		if (try_win.top + try_win.height > fbuf->fmt.height)
-			try_win.height = fbuf->fmt.height - try_win.top;
+	if (try_win.top + try_win.height > fbuf->fmt.height)
+               	try_win.height = fbuf->fmt.height - try_win.top;
+        if (try_win.left + try_win.width > fbuf->fmt.width)
+       	        try_win.width = fbuf->fmt.width - try_win.left;
 
-		//try_win.top = (fbuf->fmt.height - try_win.height)/2;
-        //try_win.left = (fbuf->fmt.width - try_win.width)/2;
-
-	}
 	try_win.width &= ~1;
 	try_win.height &= ~1;
 
@@ -146,11 +107,11 @@
  */
 int omap_vout_new_window(struct v4l2_rect *crop,
 		struct v4l2_window *win, struct v4l2_framebuffer *fbuf,
-		struct v4l2_window *new_win, int rotation)
+		struct v4l2_window *new_win)
 {
 	int err;
 
-	err = omap_vout_try_window(fbuf, new_win, rotation);
+	err = omap_vout_try_window(fbuf, new_win);
 	if (err)
 		return err;
 
Index: Kernel/drivers/media/video/omap/omap_vout.c
===================================================================
--- Kernel.orig/drivers/media/video/omap/omap_vout.c	2011-02-16 13:15:10.000000000 +0530
+++ Kernel/drivers/media/video/omap/omap_vout.c	2011-02-16 13:17:04.322105008 +0530
@@ -1017,10 +1017,11 @@
 			temp = outw;
 			outw = outh;
 			outh = temp;
-#ifndef CONFIG_ARCH_OMAP4
-			posy = (timing->y_res - win->w.width) - win->w.left;
-			posx = win->w.top;
-#endif
+
+			temp = posx;
+			posx = posy;
+			posy = temp;
+
 			break;
 
 		case dss_rotation_180_degree:
@@ -2878,15 +2879,17 @@
 			info.paddr = addr;
 			info.p_uv_addr = uv_addr;
 
-			info.pos_x = vout->win.w.left;
-			info.pos_y = vout->win.w.top;
 			if(rotate_90_or_270(vout))
 			{
+				info.pos_x = vout->win.w.top;
+				info.pos_y = vout->win.w.left;
                         	info.out_width = vout->win.w.height;
                         	info.out_height = vout->win.w.width;
 			}
 			else
 			{
+				info.pos_x = vout->win.w.left;
+				info.pos_y = vout->win.w.top;
 				info.out_width = vout->win.w.width;
 				info.out_height = vout->win.w.height;
 			}
Index: Kernel/drivers/video/omap2/dss/overlay.c
===================================================================
--- Kernel.orig/drivers/video/omap2/dss/overlay.c	2011-02-16 13:11:08.000000000 +0530
+++ Kernel/drivers/video/omap2/dss/overlay.c	2011-02-16 13:17:04.322105008 +0530
@@ -553,31 +553,16 @@
 			outh = info->out_height;
 	}
 
-	if(info->rotation == 0 || info->rotation == 2) {
-		if ((dw < info->pos_x + outw) && !info->out_wb) {
-			DSSDBG("check_overlay failed 1: %d < %d + %d\n",
-					dw, info->pos_x, outw);
-			return -EINVAL;
-		}
-
-		if ((dh < info->pos_y + outh) && !info->out_wb) {
-			DSSDBG("check_overlay failed 2: %d < %d + %d\n",
-					dh, info->pos_y, outh);
-			return -EINVAL;
-		}
-	} else {
-		if ((dw < info->pos_x + outw) && !info->out_wb) {
-			DSSDBG("check_overlay failed 1: %d < %d + %d\n",
-					dw, info->pos_x, outw);
-			return -EINVAL;
-		}
+	if ((dw < info->pos_x + outw) && !info->out_wb) {
+		DSSDBG("check_overlay failed 1: %d < %d + %d\n",
+				dw, info->pos_x, outw);
+		return -EINVAL;
+	}
 
-		if ((dh < info->pos_y + outh) && !info->out_wb) {
-			DSSDBG("check_overlay failed 2: %d < %d + %d\n",
-					dh, info->pos_y, outh);
-			return -EINVAL;
-		}
-		
+	if ((dh < info->pos_y + outh) && !info->out_wb) {
+		DSSDBG("check_overlay failed 2: %d < %d + %d\n",
+				dh, info->pos_y, outh);
+		return -EINVAL;
 	}
 
 	if ((ovl->supported_modes & info->color_mode) == 0) {
Index: Kernel/drivers/media/video/omap/omap_s3d_overlay.c
===================================================================
--- Kernel.orig/drivers/media/video/omap/omap_s3d_overlay.c	2011-02-16 13:11:08.000000000 +0530
+++ Kernel/drivers/media/video/omap/omap_s3d_overlay.c	2011-02-16 13:17:04.322105008 +0530
@@ -2384,7 +2384,7 @@
 
 	mutex_lock(&dev->lock);
 
-	err = omap_vout_new_window(&dev->crop, &dev->win, &dev->fbuf, win, dev->rotation);
+	err = omap_vout_new_window(&dev->crop, &dev->win, &dev->fbuf, win);
 	if (err) {
 		mutex_unlock(&dev->lock);
 		return err;
Index: Kernel/drivers/media/video/omap/omap_voutlib.h
===================================================================
--- Kernel.orig/drivers/media/video/omap/omap_voutlib.h	2011-02-16 13:11:08.000000000 +0530
+++ Kernel/drivers/media/video/omap/omap_voutlib.h	2011-02-16 13:17:04.322105008 +0530
@@ -25,7 +25,7 @@
 
 extern int omap_vout_new_window(struct v4l2_rect *crop,
 		struct v4l2_window *win, struct v4l2_framebuffer *fbuf,
-		struct v4l2_window *new_win, int rotation);
+		struct v4l2_window *new_win);
 
 extern void omap_vout_new_format(struct v4l2_pix_format *pix,
 		struct v4l2_framebuffer *fbuf, struct v4l2_rect *crop,

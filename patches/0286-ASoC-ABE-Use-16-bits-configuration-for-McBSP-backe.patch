From 64c5bf9c8da782731e75952ecb88a9e5ea262777 Mon Sep 17 00:00:00 2001
From: Misael Lopez Cruz <misael.lopez@ti.com>
Date: Wed, 16 Mar 2011 00:23:18 -0500
Subject: ASoC: ABE: Use 16-bits configuration for McBSP backends

Connectivity McBSP related backends (BT and FM) should use 16-bits
configuration which is supported by most of the I2C/PCM compatible
devices.

For FM port (stereo), STEREO_RSHIFTED_16 format is used in ABE side,
ATC uses an ITER factor of 2. McBSP threshold should match that value.
In case of BT port (mono), MONO_SHIFTED_16 format is used in ABE,
ATC uses an ITER factor of 1. McBSP threshold should be 1 as well.

Modem configuration needs to be revisited, this patch is transparent
for modem backend.

Change-Id: Id56d0c83873835a28cad0b8c141af7b6e37ec1c8
Signed-off-by: Misael Lopez Cruz <misael.lopez@ti.com>
---
 sound/soc/omap/omap-abe.c |    4 ++--
 sound/soc/omap/sdp4430.c  |   19 ++++++++++++-------
 2 files changed, 14 insertions(+), 9 deletions(-)

Index: kernel/sound/soc/omap/omap-abe.c
===================================================================
--- kernel.orig/sound/soc/omap/omap-abe.c	2011-04-05 23:33:09.000000000 +0900
+++ kernel/sound/soc/omap/omap-abe.c	2011-04-07 00:44:10.000000000 +0900
@@ -1118,14 +1118,14 @@
 				if (stream == SNDRV_PCM_STREAM_PLAYBACK) {
 					/* MM_EXT connection to McBSP 2 ports */
 					format.f = 48000;
-					format.samp_format = STEREO_16_16;
+					format.samp_format = STEREO_RSHIFTED_16;
 					abe_connect_serial_port(MM_EXT_OUT_PORT,
 								&format, MCBSP2_TX);
 					abe_dai_enable_data_transfer(MM_EXT_OUT_PORT);
 				} else {
 					/* MM_EXT connection to McBSP 2 ports */
 					format.f = 48000;
-					format.samp_format = STEREO_16_16;
+					format.samp_format = STEREO_RSHIFTED_16;
 					abe_connect_serial_port(MM_EXT_IN_PORT,
 								&format, MCBSP2_RX);
 					abe_dai_enable_data_transfer(MM_EXT_IN_PORT);
Index: kernel/sound/soc/omap/sdp4430.c
===================================================================
--- kernel.orig/sound/soc/omap/sdp4430.c	2011-04-07 00:40:12.000000000 +0900
+++ kernel/sound/soc/omap/sdp4430.c	2011-04-07 00:48:50.000000000 +0900
@@ -34,6 +34,7 @@
 #include <asm/mach-types.h>
 #include <plat/hardware.h>
 #include <plat/mux.h>
+#include <plat/mcbsp.h>
 #include <linux/gpio.h>
 
 #include "omap-mcpdm.h"
@@ -267,17 +268,18 @@
 static int mcbsp_be_hw_params_fixup(struct snd_soc_pcm_runtime *rtd,
 			struct snd_pcm_hw_params *params)
 {
+	struct snd_soc_dai *cpu_dai = rtd->cpu_dai;
 	struct snd_interval *channels = hw_param_interval(params,
                                        SNDRV_PCM_HW_PARAM_CHANNELS);
-	unsigned int be_id;
-	unsigned int val;
+	unsigned int be_id = rtd->dai_link->be_id;
+	unsigned int threshold;
 
         be_id = rtd->dai_link->be_id;
 
 	switch (be_id) {
 	case OMAP_ABE_DAI_MM_FM:
 		channels->min = 2;
-		val = SNDRV_PCM_FORMAT_S16_LE;
+		threshold = 2;
 		break;
 	case OMAP_ABE_DAI_BT_VX:
 		channels->min = 1;
@@ -290,16 +292,18 @@
 	 	 * REVIST:
 	 	 * Currently, voice is clear with 32 bit word length.
 	 	 */
-		val = SNDRV_PCM_FORMAT_S32_LE;
+		threshold = 1;
 		break;
 	deafult:
-		val = SNDRV_PCM_FORMAT_S16_LE;	
+		threshold = 1;
 		break;
 	}
 
 	snd_mask_set(&params->masks[SNDRV_PCM_HW_PARAM_FORMAT -
 	                            SNDRV_PCM_HW_PARAM_FIRST_MASK],
-	                            val);
+	                            SNDRV_PCM_FORMAT_S16_LE);
+	omap_mcbsp_set_tx_threshold(cpu_dai->id, threshold);
+	omap_mcbsp_set_rx_threshold(cpu_dai->id, threshold);
 	return 0;
 }
 

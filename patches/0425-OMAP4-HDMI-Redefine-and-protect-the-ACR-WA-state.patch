From f6857a6da6c79175ae688f0163a59d26eeec7f97 Mon Sep 17 00:00:00 2001
From: Ricardo Neri <ricardo.neri@ti.com>
Date: Sun, 26 Jun 2011 02:48:39 -0500
Subject: [PATCH 1/4] OMAP4: HDMI: Redefine and protect the ACR WA state

There was two different state variables to characterize the ACR WA:
audio_wa_started and notify_event_reg This patch merges both states into one.
It also introduces a mutex to protect the new state variable.
The mutex will be used in subsequent patches to have better handling
of start/stop events.

Change-Id: I3dc05e762a8ecf0b8249b225b04bdd5a16737f53
Signed-off-by: Ricardo Neri <ricardo.neri@ti.com>

squash

Change-Id: I249428deece99959415ae0497680974e3174affe
---
 arch/arm/plat-omap/hdmi_lib.c              |   71 ++++++++++++++++++++--------
 arch/arm/plat-omap/include/plat/hdmi_lib.h |   10 ++--
 2 files changed, 57 insertions(+), 24 deletions(-)

Index: kernel/arch/arm/plat-omap/hdmi_lib.c
===================================================================
--- kernel.orig/arch/arm/plat-omap/hdmi_lib.c	2011-06-29 11:20:05.509652515 +0530
+++ kernel/arch/arm/plat-omap/hdmi_lib.c	2011-06-29 13:44:44.673408301 +0530
@@ -227,12 +227,12 @@
 	struct hdmi_audio_dma audio_dma;
 	struct hdmi_core_audio_config audio_core_cfg;
 #ifdef CONFIG_OMAP_HDMI_AUDIO_WA
-	u32 notify_event_reg;
+	u32 wa_state;
+	struct mutex wa_state_lock;
 	u32 cts_interval;
 	struct omap_chip_id audio_wa_chip_ids;
 	struct task_struct *wa_task;
 	u32 ack_payload;
-	bool audio_wa_started; /* HDMI WA guard*/
 #endif
 	u32 pixel_clock;
 } hdmi;
@@ -1427,7 +1427,10 @@
 {
 	long tout;
 	if (omap_chip_is(hdmi.audio_wa_chip_ids)) {
-		if (hdmi.notify_event_reg == HDMI_NOTIFY_EVENT_REG) {
+		/* Make sure the state is not in the IPC register stage */
+		mutex_lock(&hdmi.wa_state_lock);
+		if (hdmi.wa_state >= HDMI_WA_STATE_STOPPED) {
+			mutex_unlock(&hdmi.wa_state_lock);
 			notify_send_event(SYS_M3, 0, HDMI_AUDIO_WA_EVENT,
 					payload, 0);
 			if (signal_pending(current))
@@ -1452,6 +1455,7 @@
 #endif
 			return 0;
 		}
+		mutex_unlock(&hdmi.wa_state_lock);
 		return -ENODEV;
 	}
 	return 0;
@@ -1459,21 +1463,38 @@
 int hdmi_lib_start_acr_wa(void)
 {
 	int ret = 0;
-	if (!hdmi.audio_wa_started) {
-		ret = hdmi_lib_acr_wa_send_event(hdmi.cts_interval);
-		if (!ret)
-			hdmi.audio_wa_started = true;
+	mutex_lock(&hdmi.wa_state_lock);
+	if (hdmi.wa_state == HDMI_WA_STATE_STARTED) {
+		mutex_unlock(&hdmi.wa_state_lock);
+		return ret;
+	}
+
+	mutex_unlock(&hdmi.wa_state_lock);
+	ret = hdmi_lib_acr_wa_send_event(hdmi.cts_interval);
+	if (!ret) {
+		mutex_lock(&hdmi.wa_state_lock);
+		hdmi.wa_state = HDMI_WA_STATE_STARTED;
+		mutex_unlock(&hdmi.wa_state_lock);
 	}
 	return ret;
 }
 int hdmi_lib_stop_acr_wa(void)
 {
 	int ret = 0;
-	if (hdmi.audio_wa_started) {
-		ret = hdmi_lib_acr_wa_send_event(0);
-		if (!ret)
-			hdmi.audio_wa_started = false;
+	mutex_lock(&hdmi.wa_state_lock);
+	if (hdmi.wa_state== HDMI_WA_STATE_STOPPED) {
+		mutex_unlock(&hdmi.wa_state_lock);
+		return ret;
+	}
+
+	mutex_unlock(&hdmi.wa_state_lock);
+	ret = hdmi_lib_acr_wa_send_event(0);
+	if (!ret) {
+		mutex_lock(&hdmi.wa_state_lock);
+		hdmi.wa_state = HDMI_WA_STATE_STOPPED;
+		mutex_unlock(&hdmi.wa_state_lock);
 	}
+
 	return ret;
 }
 
@@ -1499,8 +1520,11 @@
 			status = notify_register_event(SYS_M3, 0,
 				HDMI_AUDIO_WA_EVENT_ACK, (notify_fn_notify_cbck)
 				hdmi_notify_event_ack_func,	(void *)NULL);
-			if (status == NOTIFY_S_SUCCESS)
-				hdmi.notify_event_reg = HDMI_NOTIFY_EVENT_REG;
+			if (status == NOTIFY_S_SUCCESS) {
+				mutex_lock(&hdmi.wa_state_lock);
+				hdmi.wa_state = HDMI_WA_STATE_STOPPED;
+				mutex_unlock(&hdmi.wa_state_lock);
+			}
 		}
 		return status;
 	case IPC_STOP:
@@ -1508,9 +1532,12 @@
 			status = notify_unregister_event(SYS_M3, 0,
 				HDMI_AUDIO_WA_EVENT_ACK, (notify_fn_notify_cbck)
 				hdmi_notify_event_ack_func,	(void *)NULL);
-			if (status == NOTIFY_S_SUCCESS)
-				hdmi.notify_event_reg =
-					HDMI_NOTIFY_EVENT_NOTREG;
+			if (status == NOTIFY_S_SUCCESS) {
+				mutex_lock(&hdmi.wa_state_lock);
+				hdmi.wa_state =
+					HDMI_WA_STATE_NOTIFY_EVENT_NOTREG;
+				mutex_unlock(&hdmi.wa_state_lock);
+			}
 		}
 		return status;
 	case IPC_CLOSE:
@@ -1749,10 +1776,12 @@
 
 #ifdef CONFIG_OMAP_HDMI_AUDIO_WA
 	if (omap_chip_is(hdmi.audio_wa_chip_ids)) {
-		if (hdmi.notify_event_reg == HDMI_NOTIFY_EVENT_NOTREG) {
+		mutex_lock(&hdmi.wa_state_lock);
+		if (hdmi.wa_state == HDMI_WA_STATE_NOTIFY_EVENT_NOTREG) {
 			r = ipc_register_notifier(&hdmi_syslink_notify_block);
-			hdmi.notify_event_reg = HDMI_NOTIFY_WAIT_FOR_IPC;
+			hdmi.wa_state = HDMI_WA_STATE_NOTIFY_WAIT_FOR_IPC;
 		}
+		mutex_unlock(&hdmi.wa_state_lock);
 	}
 #endif
 	return r;
@@ -1788,10 +1817,12 @@
 	hdmi.base_core = hdmi.base_wp + 0x400;
 	hdmi.base_core_av = hdmi.base_wp + 0x900;
 #ifdef CONFIG_OMAP_HDMI_AUDIO_WA
-	hdmi.notify_event_reg = HDMI_NOTIFY_EVENT_NOTREG;
+	mutex_init(&hdmi.wa_state_lock);
+	mutex_lock(&hdmi.wa_state_lock);
+	hdmi.wa_state = HDMI_WA_STATE_NOTIFY_EVENT_NOTREG;
+	mutex_unlock(&hdmi.wa_state_lock);
 	hdmi.audio_wa_chip_ids.oc = CHIP_IS_OMAP4430ES2 |
 			CHIP_IS_OMAP4430ES2_1 | CHIP_IS_OMAP4430ES2_2;
-	hdmi.audio_wa_started = false;
 #endif
 
 //	mutex_init(&hdmi.mutex);
Index: kernel/arch/arm/plat-omap/include/plat/hdmi_lib.h
===================================================================
--- kernel.orig/arch/arm/plat-omap/include/plat/hdmi_lib.h	2011-06-29 11:14:36.489650250 +0530
+++ kernel/arch/arm/plat-omap/include/plat/hdmi_lib.h	2011-06-29 13:44:44.673408301 +0530
@@ -473,10 +473,12 @@
 
 #ifdef CONFIG_OMAP_HDMI_AUDIO_WA
 /* HDMI audio workaround states */
-enum hdmi_audio_notify_state {
-	HDMI_NOTIFY_EVENT_NOTREG,
-	HDMI_NOTIFY_WAIT_FOR_IPC,
-	HDMI_NOTIFY_EVENT_REG,
+enum hdmi_audio_wa_state {
+	HDMI_WA_STATE_NOTIFY_EVENT_NOTREG,
+	HDMI_WA_STATE_NOTIFY_WAIT_FOR_IPC,
+	HDMI_WA_STATE_NOTIFY_EVENT_REG,
+	HDMI_WA_STATE_STOPPED,
+	HDMI_WA_STATE_STARTED,
 };
 #endif
 

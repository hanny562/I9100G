Index: kernel/arch/arm/mach-omap2/board-t1.c
===================================================================
--- kernel.orig/arch/arm/mach-omap2/board-t1.c	2011-03-17 13:29:51.000000000 +0900
+++ kernel/arch/arm/mach-omap2/board-t1.c	2011-03-17 15:53:37.699127874 +0900
@@ -382,9 +382,7 @@
        gpio_request(OMAP_GPIO_MHL_SEL, "MHL_SEL");
        gpio_direction_output(OMAP_GPIO_MHL_SEL,1);
        gpio_free(OMAP_GPIO_MHL_SEL);
-      /*[Dharam] commented for the debugging purpose.As omap4_mhl_cb(1) is forced while initializing the board..we need to call MHL_On later after
-        initialization and probing has been complete.*/
-      // MHL_On(attached);
+       MHL_On(attached);
 }
 #endif
 
@@ -2076,10 +2074,6 @@
 	sec_class = class_create(THIS_MODULE, "sec");
 	if (IS_ERR(sec_class))
 		pr_err("Class(sec) Creating Fail!!!\n");
-/*[Dharam]forced call of omap4_mhl_cb(1)..will be removed from here later. */
-#ifdef CONFIG_VIDEO_MHL_V1
-    omap4_mhl_cb(1);
-#endif
 	gsd4t_gps_init();
 }
 
Index: kernel/drivers/media/video/omap/mhl_v1/sii9234.c
===================================================================
--- kernel.orig/drivers/media/video/omap/mhl_v1/sii9234.c	2011-03-17 15:47:20.000000000 +0900
+++ kernel/drivers/media/video/omap/mhl_v1/sii9234.c	2011-03-17 15:52:08.947877309 +0900
@@ -292,7 +292,6 @@
 		return 0;
 	}
 	u8 buf[1];
-	printk("[Dharam] reading reg:%x\n",reg);
 
 	OMAP_GPIO_I2C_RD_DATA i2c_rd_param;
 	//OMAP_GPIO_I2C_CLIENT *client=(OMAP_GPIO_I2C_CLIENT *)client;
@@ -311,7 +310,6 @@
 	}
 	return ret;
 	*/
-	printk("[Dharam] read value:%x\n",buf[0] );
 	return (buf[0]);
 }
 EXPORT_SYMBOL(sii9234_i2c_read);
@@ -391,7 +389,7 @@
 
 	printk(KERN_ERR"[MHL_TEST] sii9234_i2c_probe");
 	
-	sii9234_i2c_client = omap_gpio_i2c_init(GPIO_MHL_SDA_18V,GPIO_MHL_SCL_18V,0x72,1000);
+	sii9234_i2c_client = omap_gpio_i2c_init(GPIO_MHL_SDA_18V,GPIO_MHL_SCL_18V,0x72>>1,100);
 		printk(KERN_ERR"bit-banging\n");
 	printk(KERN_ERR "SII9234 attach success!!!\n");
 	MHL_i2c_init = 1;
@@ -419,7 +417,7 @@
 }
 static int sii9234a_i2c_probe(struct i2c_client *client, const struct i2c_device_id *id)
 {
-        sii9234a_i2c_client = omap_gpio_i2c_init(GPIO_MHL_SDA_18V,GPIO_MHL_SCL_18V,0x7A,1000);
+        sii9234a_i2c_client = omap_gpio_i2c_init(GPIO_MHL_SDA_18V,GPIO_MHL_SCL_18V,0x7A>>1,100);
         printk(KERN_ERR "SII9234A attach success!!!\n");
         MHL_i2c_init = 1;
         return 0;
@@ -428,7 +426,7 @@
 static int sii9234b_i2c_probe(struct i2c_client *client, const struct i2c_device_id *id)
 {
         printk(KERN_ERR"[MHL_TEST] sii9234b_i2c_probe");
-        sii9234b_i2c_client = omap_gpio_i2c_init(GPIO_MHL_SDA_18V,GPIO_MHL_SCL_18V,0x92,1000);
+        sii9234b_i2c_client = omap_gpio_i2c_init(GPIO_MHL_SDA_18V,GPIO_MHL_SCL_18V,0x92>>1,100);
         printk(KERN_ERR "SII9234B attach success!!!\n");
         return 0;
 
@@ -436,7 +434,7 @@
 static int sii9234c_i2c_probe(struct i2c_client *client, const struct i2c_device_id *id)
 {
         printk(KERN_ERR"[MHL_TEST] sii9234c_i2c_probe");
-        sii9234c_i2c_client = omap_gpio_i2c_init(GPIO_MHL_SDA_18V,GPIO_MHL_SCL_18V,0xC8,1000);
+        sii9234c_i2c_client = omap_gpio_i2c_init(GPIO_MHL_SDA_18V,GPIO_MHL_SCL_18V,0xC8>>1,100);
         printk(KERN_ERR "SII9234C attach success!!!\n");
         MHL_i2c_init = 1;
 
@@ -461,8 +459,6 @@
                                         " err:: %d\n", ret);
                 return ret;
         }
-        //[Dharam]Calling MHL_On(1) for testing purpose.
-        MHL_On(1);
 		
         return 0;
 
@@ -599,9 +595,16 @@
             if(gpio_direction_output(GPIO_HDMI_EN,GPIO_LEVEL_HIGH))
                 printk("[MHL_TEST]error in making HDMI_EN High\n");
             printk("[MHL_TEST]HDMI_EN:%d",gpio_get_value(GPIO_HDMI_EN));
+			
+			if(gpio_direction_output(GPIO_MHL_RST, GPIO_LEVEL_HIGH))
+                printk("[MHL_TEST]error in making GPIO_MHL_RST high\n");
+            printk("[MHL_TEST]MHL_RST:%d",gpio_get_value(GPIO_MHL_RST));
+			mlseep(50);
+
             if(gpio_direction_output(GPIO_MHL_RST, GPIO_LEVEL_LOW))
                 printk("[MHL_TEST]error in making GPIO_MHL_RST Low\n");
             msleep(50);
+		
             if(gpio_direction_output(GPIO_MHL_RST, GPIO_LEVEL_HIGH))
                 printk("[MHL_TEST]error in making GPIO_MHL_RST high\n");
             printk("[MHL_TEST]MHL_RST:%d",gpio_get_value(GPIO_MHL_RST));

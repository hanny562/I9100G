From 2a871c0d67e39ede99b9898c8568464b53cc31b6 Mon Sep 17 00:00:00 2001
From: Wang Wenbiao <wwang@ti.com>
Date: Mon, 18 Apr 2011 05:27:21 -0500
Subject: [PATCH] OMAP: Allocate DMA-coherent memory space for SO write.

Allocate DMA-coherent memory space for SO write.

Change-Id: I78b9a409f68dd3307228282895f7ab55844d7489
Signed-off-by: Woodruff Richard <r-woodruff2@ti.com>
Signed-off-by: Wang Wenbiao <wwang@ti.com>
Signed-off-by: Rajeev Kulkarni <rajeevk@ti.com>
---
 arch/arm/include/asm/dma-mapping.h |   14 ++++++++++++++
 arch/arm/include/asm/pgtable.h     |    3 +++
 arch/arm/mm/dma-mapping.c          |   15 +++++++++++++++
 3 files changed, 32 insertions(+), 0 deletions(-)

Index: kernel/arch/arm/include/asm/dma-mapping.h
===================================================================
--- kernel.orig/arch/arm/include/asm/dma-mapping.h	2011-05-13 12:17:21.000000000 +0900
+++ kernel/arch/arm/include/asm/dma-mapping.h	2011-05-13 12:17:33.000000000 +0900
@@ -191,6 +191,20 @@
 extern void *dma_alloc_coherent(struct device *, size_t, dma_addr_t *, gfp_t);
 
 /**
+ * dma_alloc_so_coherent - allocate consistent SO memory for DMA
+ * @dev: valid struct device pointer, or NULL for ISA and EISA-like devices
+ * @size: required memory size
+ * @handle: bus-specific DMA address
+ *
+ * Allocate some uncached, unbuffered SO memory for a device for
+ * performing DMA.  This function allocates pages, and will
+ * return the CPU-viewed address, and sets @handle to be the
+ * device-viewed address.
+ */
+extern void *dma_alloc_so_coherent(struct device *, size_t, dma_addr_t *,
+		 gfp_t);
+
+/**
  * dma_free_coherent - free memory allocated by dma_alloc_coherent
  * @dev: valid struct device pointer, or NULL for ISA and EISA-like devices
  * @size: size of memory originally requested in dma_alloc_coherent
Index: kernel/arch/arm/include/asm/pgtable.h
===================================================================
--- kernel.orig/arch/arm/include/asm/pgtable.h	2011-05-13 12:17:21.000000000 +0900
+++ kernel/arch/arm/include/asm/pgtable.h	2011-05-13 12:17:33.000000000 +0900
@@ -345,6 +345,9 @@
 	__pgprot_modify(prot, L_PTE_MT_MASK|L_PTE_EXEC, L_PTE_MT_UNCACHED)
 #endif
 
+#define pgprot_so_dmacoherent(prot) \
+	__pgprot_modify(prot, L_PTE_MT_MASK|L_PTE_EXEC, L_PTE_MT_UNCACHED)
+
 #define pmd_none(pmd)		(!pmd_val(pmd))
 #define pmd_present(pmd)	(pmd_val(pmd))
 #define pmd_bad(pmd)		(pmd_val(pmd) & 2)
Index: kernel/arch/arm/mm/dma-mapping.c
===================================================================
--- kernel.orig/arch/arm/mm/dma-mapping.c	2011-05-13 12:17:21.000000000 +0900
+++ kernel/arch/arm/mm/dma-mapping.c	2011-05-13 12:17:33.000000000 +0900
@@ -320,6 +320,21 @@
 EXPORT_SYMBOL(dma_alloc_coherent);
 
 /*
+ * Allocate DMA-coherent memory space and return both the kernel remapped
+ * virtual and bus address for that space for SO write operation.
+ */
+void *
+dma_alloc_so_coherent(struct device *dev, size_t size, dma_addr_t *handle,
+	gfp_t gfp)
+{
+	void *memory;
+
+	return __dma_alloc(dev, size, handle, gfp,
+		pgprot_so_dmacoherent(pgprot_kernel));
+}
+EXPORT_SYMBOL(dma_alloc_so_coherent);
+
+/*
  * Allocate a writecombining region, in much the same way as
  * dma_alloc_coherent above.
  */

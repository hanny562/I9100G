From 245358bd167747922f12ca5d71762320845a7916 Mon Sep 17 00:00:00 2001
From: Sunita Nadampalli <sunitan@ti.com>
Date: Thu, 3 Mar 2011 10:28:27 -0600
Subject: V4L2 driver fix for video rotation

Description# In case of video rotation, V4L2 window parameters represent
rotated co-ordinate system, where as DSS driver window parameters are
as per panel resolution. Hence translation is needed while passing the
window parameters to overlay setup. This has been taken care every where
except in the setformat call. This is fixed by adding the widow parameter
interchange logic inside set format method inside v4l2 driver.

Change-Id: I4ae78f12d50e319aee215dca6189335afa4f5c90
Signed-off-by: Sunita Nadampalli <sunitan@ti.com>
Signed-off-by: Srinivas Pulukuru <srinivas.pulukuru@ti.com>
---
 drivers/media/video/omap/omap_vout.c |  111 +++++++++++++++++++++-------------
 1 files changed, 69 insertions(+), 42 deletions(-)

Index: kernel/drivers/media/video/omap/omap_vout.c
===================================================================
--- kernel.orig/drivers/media/video/omap/omap_vout.c	2011-04-05 23:33:05.000000000 +0900
+++ kernel/drivers/media/video/omap/omap_vout.c	2011-04-05 23:40:04.000000000 +0900
@@ -464,6 +464,59 @@
 }
 
 /*
+ * Swap the overlay parameters in case of rotation is 90 or 270
+ */
+static void calc_overlay_window_params(struct omap_vout_device *vout,
+				       struct omap_overlay_info *info)
+{
+	__s32	temp;
+	struct omap_overlay *ovl;
+	struct omapvideo_info *ovid;
+	struct omap_video_timings *timing;
+	struct v4l2_window *win;
+
+	ovid = &vout->vid_info;
+	ovl = ovid->overlays[0];
+	win = &vout->win;
+
+	timing = &ovl->manager->device->panel.timings;
+	switch (vout->rotation) {
+	case dss_rotation_90_degree:
+	/* Invert the height and width for 90  and 270 degree rotation */
+		temp = info->out_width;
+		info->out_width = info->out_height;
+		info->out_height = temp;
+#ifndef CONFIG_ARCH_OMAP4
+		info->pos_y = (timing->y_res - win->w.width) - win->w.left;
+		info->pos_x = win->w.top;
+#endif
+		break;
+
+	case dss_rotation_180_degree:
+#ifndef CONFIG_ARCH_OMAP4
+		info->pos_x = (timing->x_res - win->w.width) - win->w.left;
+		info->pos_y = (timing->y_res - win->w.height) - win->w.top;
+#endif
+		break;
+
+	case dss_rotation_270_degree:
+		temp = info->out_width;
+		info->out_width = info->out_height;
+		info->out_height = temp;
+#ifndef CONFIG_ARCH_OMAP4
+		info->pos_y = win->w.left;
+		info->pos_x = (timing->x_res - win->w.height) - win->w.top;
+#endif
+		break;
+
+	default:
+		info->pos_x = win->w.left;
+		info->pos_y = win->w.top;
+		break;
+		}
+}
+
+/*
  * Free the V4L2 buffers
  */
 static void omap_vout_free_buffers(struct omap_vout_device *vout)
@@ -943,6 +996,11 @@
 	info.out_width = outw;
 	info.out_height = outh;
 
+	/*Recalculate the overlay window parameters in rotation scenario
+	* This is required to meet DSS driver window requirements
+	*/
+	calc_overlay_window_params(vout, &info);
+
 	info.global_alpha =
 		vout->vid_info.overlays[0]->info.global_alpha;
 	if (!cpu_is_omap44xx()) {
@@ -993,8 +1051,7 @@
 	int ret = 0, i;
 	struct v4l2_window *win;
 	struct omap_overlay *ovl;
-	int posx, posy, outw, outh, temp;
-	struct omap_video_timings *timing;
+	int posx, posy, outw, outh;
 	struct omapvideo_info *ovid = &vout->vid_info;
 
 	win = &vout->win;
@@ -1003,47 +1060,11 @@
 		if (!ovl->manager || !ovl->manager->device)
 			return -EINVAL;
 
-		timing = &ovl->manager->device->panel.timings;
-
 		outw = win->w.width;
 		outh = win->w.height;
 		posx = win->w.left;
 		posy = win->w.top;
-		switch (vout->rotation) {
-		case dss_rotation_90_degree:
-			/* Invert the height and width for 90
-			 * and 270 degree rotation
-			 */
-			temp = outw;
-			outw = outh;
-			outh = temp;
-
-
-			break;
-
-		case dss_rotation_180_degree:
-#ifndef CONFIG_ARCH_OMAP4
-			posx = (timing->x_res - win->w.width) - win->w.left;
-			posy = (timing->y_res - win->w.height) - win->w.top;
-#endif
-			break;
-
-		case dss_rotation_270_degree:
-			temp = outw;
-			outw = outh;
-			outh = temp;
-#ifndef CONFIG_ARCH_OMAP4
-			posy = win->w.left;
-			posx = (timing->x_res - win->w.height) - win->w.top;
-#endif
-			break;
-
-		default:
-			posx = win->w.left;
-			posy = win->w.top;
-			break;
-		}
-	
+			
 		ret = omapvid_setup_overlay(vout, ovl, posx, posy,
 				outw, outh, addr, uv_addr);
 		if (ret)
@@ -2297,9 +2318,20 @@
 			info.pos_y = vout->win.w.top;
 			info.out_width = vout->win.w.width;
 			info.out_height = vout->win.w.height;
+			#if 1
                         /*if (cpu_is_omap44xx())
                             info.zorder = vout->win.zorder;*/
+			#else
+			if (cpu_is_omap44xx())
+				info.zorder = vout->win.zorder;
+
+			/* Recalculate the overlay window parameters in rotation
+			 * scenario. This is required to meet DSS driver
+			 * window requirements
+			 */
+			calc_overlay_window_params(vout, &info);
 
+			#endif
 			if (ovl->set_overlay_info(ovl, &info))
 				return -EINVAL;
 		}

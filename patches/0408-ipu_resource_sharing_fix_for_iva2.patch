From: Paul Hunt <hunt@ti.com>
Date: Thu, 19 May 2011 20:20:11 +0000 (-0600)
Subject: syslink: ipu_pm: Move SL2 enable in with IVAHD resource request
X-Git-Url: http://git.omapzoom.org/?p=kernel%2Fomap.git;a=commitdiff_plain;h=a0e2b7353ade6be8af7fcc88b8f0d5e50fe8ac01

syslink: ipu_pm: Move SL2 enable in with IVAHD resource request

Previously, SL2 was enabled along with the second sequencer due to framework
problems with enabling it along with IVAHD. Now we can move enabling SL2 in
with IVAHD resource, which makes the sequencer resources only control the
reset lines for their respective sequencers. This means that IVAHD and SL2
can be fully enabled while the sequencers are still held in reset. This also
makes it easier to use SL2 independently of IVAHD, since no sequencer code
needs to be loaded for that use case.

Change-Id: I386473e13889d818b018ed121db1d14a7739520d
Signed-off-by: Paul Hunt <hunt@ti.com>
---

Index: kernel/drivers/dsp/syslink/ipu_pm/ipu_pm.c
===================================================================
--- kernel.orig/drivers/dsp/syslink/ipu_pm/ipu_pm.c	2011-06-03 22:58:53.000000000 +0530
+++ kernel/drivers/dsp/syslink/ipu_pm/ipu_pm.c	2011-06-04 00:13:10.329876098 +0530
@@ -69,6 +69,7 @@
 #include "../../../../arch/arm/mach-omap2/prm.h"
 #include "../../../../arch/arm/mach-omap2/prcm-common.h"
 #include "../../../../arch/arm/mach-omap2/prm44xx.h"
+#include "../../../../arch/arm/mach-omap2/prm-regbits-44xx.h"
 #include "ipu_pm.h"
 
 /** ============================================================================
@@ -1288,19 +1289,26 @@
 		return PM_UNSUPPORTED;
 	}
 
+    /* set Next State to ON for IVAHD */
+    prm_rmw_mod_reg_bits(OMAP4430_POWERSTATEST_MASK,
+    (PWRDM_POWER_ON << OMAP4430_POWERSTATEST_SHIFT),
+    OMAP4430_PRM_IVAHD_MOD, OMAP4_PM_IVAHD_PWRSTCTRL_OFFSET);
+    /* Requesting IVA_HD */
+
 	retval = ipu_pm_module_start(rcb_p->sub_type);
 	if (retval) {
 		pr_err("%s %d Error requesting IVA_HD\n", __func__, __LINE__);
 		return PM_UNSUPPORTED;
 	}
-	/* set Next State to INACTIVE for IVAHD */
-	prm_write_mod_reg(0xff0e02,
-			 OMAP4430_PRM_IVAHD_MOD,
-			 OMAP4_PM_IVAHD_PWRSTCTRL_OFFSET);
-
-	params->pm_iva_hd_counter++;
 	pr_debug("Request IVA_HD\n");
-
+    /* Requesting SL2 */
+    retval = ipu_pm_module_start(SL2_RESOURCE);
+    if (retval) {
+           pr_err("%s %d Error requesting SL2\n", __func__, __LINE__);
+           return PM_UNSUPPORTED;
+    }
+    pr_debug("Request SL2\n");
+    params->pm_iva_hd_counter++;
 #ifdef CONFIG_OMAP_PM
 	pr_debug("Request MPU wakeup latency\n");
 	retval = omap_pm_set_max_mpu_wakeup_lat(&pm_qos_handle,
@@ -1427,16 +1435,6 @@
 	params->pm_ivaseq1_counter++;
 	pr_debug("Request IVASEQ1\n");
 
-	/*Requesting SL2*/
-	/* FIXME: sl2if should be moved to a independent function */
-	retval = ipu_pm_module_start(SL2_RESOURCE);
-	if (retval) {
-		pr_err("%s %d Error requesting sl2if\n", __func__, __LINE__);
-		return PM_UNSUPPORTED;
-	}
-	params->pm_sl2if_counter++;
-	pr_debug("Request sl2if\n");
-
 	return PM_SUCCESS;
 }
 
@@ -1853,26 +1851,21 @@
 	}
 
 	/* Releasing SL2 */
-	/* FIXME: sl2if should be moved to a independent function */
-	if (params->pm_sl2if_counter) {
-		retval = ipu_pm_module_stop(SL2_RESOURCE);
-		if (retval) {
-			pr_err("%s %d Error releasing sl2if\n"
-							, __func__, __LINE__);
-			return PM_UNSUPPORTED;
-		}
-		params->pm_sl2if_counter--;
-		pr_debug("Release SL2IF\n");
+    retval = ipu_pm_module_stop(SL2_RESOURCE);
+    if (retval) {
+        pr_err("%s %d Error releasing SL2\n", __func__, __LINE__);
+        return PM_UNSUPPORTED;
 	}
 
+    pr_debug("Release SL2\n");
+    /* Releasing IVA_HD */
 	retval = ipu_pm_module_stop(rcb_p->sub_type);
 	if (retval) {
 		pr_err("%s %d Error releasing IVA_HD\n", __func__, __LINE__);
 		return PM_UNSUPPORTED;
 	}
-	params->pm_iva_hd_counter--;
 	pr_debug("Release IVA_HD\n");
-
+	params->pm_iva_hd_counter--;
 #ifdef CONFIG_OMAP_PM
 	if (params->pm_iva_hd_counter == 0 && params->pm_iss_counter == 0) {
 		pr_debug("Release MPU wakeup latency\n");

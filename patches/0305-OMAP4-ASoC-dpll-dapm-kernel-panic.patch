Index: kernel/include/sound/soc-dapm.h
===================================================================
--- kernel.orig/include/sound/soc-dapm.h	2011-04-08 23:15:20.000000000 +0900
+++ kernel/include/sound/soc-dapm.h	2011-04-08 23:51:05.037147615 +0900
@@ -507,7 +507,7 @@
 	struct device *dev; /* from parent - for debug */
 	struct snd_soc_codec *codec; /* parent codec */
 	struct snd_soc_platform *platform; /*parent platform */
-	int (*stream_event)(struct snd_soc_dapm_context *dapm, int event);
+	int (*stream_event)(struct snd_soc_dapm_context *dapm);
 #ifdef CONFIG_DEBUG_FS
 	struct dentry *debugfs_dapm;
 #endif
Index: kernel/include/sound/soc.h
===================================================================
--- kernel.orig/include/sound/soc.h	2011-04-08 23:15:20.000000000 +0900
+++ kernel/include/sound/soc.h	2011-04-08 23:50:56.097148096 +0900
@@ -517,7 +517,7 @@
 	int (*set_bias_level)(struct snd_soc_codec *,
 			      enum snd_soc_bias_level level);
 	/* codec stream completion event */
-	int (*stream_event)(struct snd_soc_dapm_context *dapm, int event);
+	int (*stream_event)(struct snd_soc_dapm_context *dapm);
 };
 
 /* SoC platform interface */
@@ -547,7 +547,7 @@
 	int (*write)(struct snd_soc_platform *, unsigned int, unsigned int);
 
 	/* platform stream completion event */
-	int (*stream_event)(struct snd_soc_dapm_context *dapm, int event);
+	int (*stream_event)(struct snd_soc_dapm_context *dapm);
 };
 
 struct snd_soc_platform {
Index: kernel/sound/soc/omap/omap-abe-dsp.c
===================================================================
--- kernel.orig/sound/soc/omap/omap-abe-dsp.c	2011-04-08 23:15:28.000000000 +0900
+++ kernel/sound/soc/omap/omap-abe-dsp.c	2011-04-08 23:50:52.557147879 +0900
@@ -416,7 +416,7 @@
 static int abe_fe_event(struct snd_soc_dapm_widget *w,
 			struct snd_kcontrol *kcontrol, int event)
 {
-	int index, active, ret = 0;
+	int index, active, ret;
 
 	if ((w->reg < ABE_FE_START) || (w->reg >= ABE_FE_END))
 		return -EINVAL;
@@ -426,10 +426,21 @@
 	if (SND_SOC_DAPM_EVENT_ON(event)) {
 		abe->fe_active[index]++;
 		active = abe_fe_active_count(abe);
-		if (!abe->early_suspended || (active > 1) || !abe->fe_active[6])
+
+		/*
+		 * enter dpll cascading when all conditions are met:
+		 * - system is in early suspend (screen is off)
+		 * - single stream is active and is LP (ping-pong)
+		 * - OPP is 50 or less (DL1 path only)
+		 */
+		if (abe->early_suspended && (active == 1) &&
+		    abe->fe_active[6] && (abe->opp <= 50))
+			ret = abe_enter_dpll_cascading(abe);
+		else
 			ret = abe_exit_dpll_cascading(abe);
 	} else {
 		abe->fe_active[index]--;
+		ret = abe_exit_dpll_cascading(abe);
 	}
 
 	return ret;
@@ -1392,44 +1403,44 @@
 	SND_SOC_DAPM_AIF_IN_E("TONES_DL", "Tones Playback", 0,
 			ABE_WIDGET(0), ABE_OPP_25, 0,
 			abe_fe_event,
-			SND_SOC_DAPM_POST_PMU | SND_SOC_DAPM_POST_PMD),
+			SND_SOC_DAPM_PRE_PMU | SND_SOC_DAPM_POST_PMD),
 	SND_SOC_DAPM_AIF_IN_E("VX_DL", "Voice Playback", 0,
 			ABE_WIDGET(1), ABE_OPP_50, 0,
 			abe_fe_event,
-			SND_SOC_DAPM_POST_PMU | SND_SOC_DAPM_POST_PMD),
+			SND_SOC_DAPM_PRE_PMU | SND_SOC_DAPM_POST_PMD),
 	SND_SOC_DAPM_AIF_OUT_E("VX_UL", "Voice Capture", 0,
 			ABE_WIDGET(2), ABE_OPP_50, 0,
 			abe_fe_event,
-			SND_SOC_DAPM_POST_PMU | SND_SOC_DAPM_POST_PMD),
+			SND_SOC_DAPM_PRE_PMU | SND_SOC_DAPM_POST_PMD),
 	/* the MM_UL mapping is intentional */
 	SND_SOC_DAPM_AIF_OUT_E("MM_UL1", "MultiMedia1 Capture", 0,
 			ABE_WIDGET(3), ABE_OPP_100, 0,
 			abe_fe_event,
-			SND_SOC_DAPM_POST_PMU | SND_SOC_DAPM_POST_PMD),
+			SND_SOC_DAPM_PRE_PMU | SND_SOC_DAPM_POST_PMD),
 	SND_SOC_DAPM_AIF_OUT_E("MM_UL2", "MultiMedia2 Capture", 0,
 			ABE_WIDGET(4), ABE_OPP_50, 0,
 			abe_fe_event,
-			SND_SOC_DAPM_POST_PMU | SND_SOC_DAPM_POST_PMD),
+			SND_SOC_DAPM_PRE_PMU | SND_SOC_DAPM_POST_PMD),
 	SND_SOC_DAPM_AIF_IN_E("MM_DL", " MultiMedia1 Playback", 0,
 			ABE_WIDGET(5), ABE_OPP_25, 0,
 			abe_fe_event,
-			SND_SOC_DAPM_POST_PMU | SND_SOC_DAPM_POST_PMD),
+			SND_SOC_DAPM_PRE_PMU | SND_SOC_DAPM_POST_PMD),
 	SND_SOC_DAPM_AIF_IN_E("MM_DL_LP", " MultiMedia1 LP Playback", 0,
 			ABE_WIDGET(6), ABE_OPP_25, 0,
 			abe_fe_event,
-			SND_SOC_DAPM_POST_PMU | SND_SOC_DAPM_POST_PMD),
+			SND_SOC_DAPM_PRE_PMU | SND_SOC_DAPM_POST_PMD),
 	SND_SOC_DAPM_AIF_IN_E("VIB_DL", "Vibra Playback", 0,
 			ABE_WIDGET(7), ABE_OPP_100, 0,
 			abe_fe_event,
-			SND_SOC_DAPM_POST_PMU | SND_SOC_DAPM_POST_PMD),
+			SND_SOC_DAPM_PRE_PMU | SND_SOC_DAPM_POST_PMD),
 	SND_SOC_DAPM_AIF_IN_E("MODEM_DL", "MODEM Playback", 0,
 			ABE_WIDGET(8), ABE_OPP_50, 0,
 			abe_fe_event,
-			SND_SOC_DAPM_POST_PMU | SND_SOC_DAPM_POST_PMD),
+			SND_SOC_DAPM_PRE_PMU | SND_SOC_DAPM_POST_PMD),
 	SND_SOC_DAPM_AIF_OUT_E("MODEM_UL", "MODEM Capture", 0,
 			ABE_WIDGET(9), ABE_OPP_50, 0,
 			abe_fe_event,
-			SND_SOC_DAPM_POST_PMU | SND_SOC_DAPM_POST_PMD),
+			SND_SOC_DAPM_PRE_PMU | SND_SOC_DAPM_POST_PMD),
 
 	/* Backend DAIs  */
 	// FIXME: must match BE order in abe_dai.h
@@ -2209,42 +2220,18 @@
 	.mmap		= aess_mmap,
 };
 
-static int aess_stream_event(struct snd_soc_dapm_context *dapm, int event)
+static int aess_stream_event(struct snd_soc_dapm_context *dapm)
 {
 	/* TODO: do not use abe global structure to assign pdev */
 	struct platform_device *pdev = abe->pdev;
-	int active = abe_fe_active_count(abe);
-	int ret = 0;
-
-	if (!abe->active)
-		return 0;
-
-	pm_runtime_get_sync(&pdev->dev);
-	aess_set_opp_mode();
-	pm_runtime_put_sync(&pdev->dev);
 
-	switch (event) {
-	case SND_SOC_DAPM_STREAM_START:
-		/*
-		 * enter dpll cascading when all conditions are met:
-		 * - system is in early suspend (screen is off)
-		 * - single stream is active and is LP (ping-pong)
-		 * - OPP is 50 or less (DL1 path only)
-		 */
-		if (abe->early_suspended && (active == 1) &&
-		    abe->fe_active[6] && (abe->opp <= 50))
-			ret = abe_enter_dpll_cascading(abe);
-		else
-			ret = abe_exit_dpll_cascading(abe);
-		break;
-	case SND_SOC_DAPM_STREAM_STOP:
-		ret = abe_exit_dpll_cascading(abe);
-		break;
-	default:
-		break;
+	if (abe->active) {
+		pm_runtime_get_sync(&pdev->dev);
+		aess_set_opp_mode();
+		pm_runtime_put_sync(&pdev->dev);
 	}
 
-	return ret;
+	return 0;
 }
 
 static struct snd_soc_platform_driver omap_aess_platform = {
Index: kernel/sound/soc/soc-dapm.c
===================================================================
--- kernel.orig/sound/soc/soc-dapm.c	2011-04-08 23:15:28.000000000 +0900
+++ kernel/sound/soc/soc-dapm.c	2011-04-08 23:50:48.687148064 +0900
@@ -2327,7 +2327,7 @@
 
 	/* do we need to notify any clients that DAPM stream is complete */
 	if (dapm->stream_event)
-		dapm->stream_event(dapm, event);
+		dapm->stream_event(dapm);
 }
 
 /**

From ff6e6051eff4dbc17a982eaa5a5ff5e91ca398e6 Mon Sep 17 00:00:00 2001
From: Sebastien Guiriec <s-guiriec@ti.com>
Date: Thu, 19 May 2011 18:40:23 +0200
Subject: [PATCH] ASoC: ABE: Hack to move to 4 ping/pong buffer.

---
 sound/soc/omap/abe/abe_api.c  |   39 +++++++++++++++++++++++++++++++++++++++
 sound/soc/omap/omap-abe-dsp.c |    6 +++---
 2 files changed, 42 insertions(+), 3 deletions(-)

Index: kernel/sound/soc/omap/abe/abe_api.c
===================================================================
--- kernel.orig/sound/soc/omap/abe/abe_api.c	2011-05-21 01:42:34.549614392 +0900
+++ kernel/sound/soc/omap/abe/abe_api.c	2011-05-21 01:42:51.258348006 +0900
@@ -68,6 +68,10 @@
 #include "abe_initxxx_labels.h"
 #include "abe_dbg.h"
 
+
+int abe_pp_buf_id;
+int abe_pp_buf_addr[4];
+
 /**
  * abe_reset_hal - reset the ABE/HAL
  * @rdev: regulator source
@@ -597,6 +601,9 @@
 			(u32) &(desc_pp);
 		base_and_size = desc_pp.nextbuff1_BaseAddr;
 	}
+	base_and_size = abe_pp_buf_addr[abe_pp_buf_id];
+	abe_pp_buf_id = (abe_pp_buf_id + 1) & 0x03;
+
 	base_and_size = (base_and_size & 0xFFFFL) + (n_samples << 16);
 	sio_pp_desc_address = D_PingPongDesc_ADDR + struct_offset;
 	src = &base_and_size;
@@ -674,6 +681,11 @@
 		/* base addresses of the ping pong buffers in U8 unit */
 		abe_base_address_pingpong[i] = dmem_addr;
 	}
+
+	for (i = 0; i < 4; i++)
+		abe_pp_buf_addr[i] = dmem_ping_pong_buffer + (i * size_bytes);
+	abe_pp_buf_id = 0;
+
 	/* global data */
 	abe_size_pingpong = size_bytes;
 	*p = (u32) dmem_ping_pong_buffer;
@@ -709,6 +721,7 @@
 			       sizeof(ABE_SPingPongDescriptor));
 		/* extract the current ping pong buffer read pointer based on
 		   the value of the counter */
+#if 0
 		if ((desc_pp.counter & 0x1) == 0) {
 			/* the next is buffer0, hence the current is buffer1 */
 			switch (abe_port[MM_DL_PORT].format.samp_format) {
@@ -735,6 +748,32 @@
 			*n = desc_pp.nextbuff0_Samples -
 				desc_pp.workbuff_Samples;
 		}
+#else
+		if ((desc_pp.counter & 0x1) == 0) {
+			/* the next is buffer0, hence the current is buffer1 */
+			*n = desc_pp.nextbuff1_Samples -
+			desc_pp.workbuff_Samples;
+		} else {
+			/* the next is buffer1, hence the current is buffer0 */
+			*n = desc_pp.nextbuff0_Samples -
+				desc_pp.workbuff_Samples;
+		}
+		switch (abe_port[MM_DL_PORT].format.samp_format) {
+		case MONO_MSB:
+		case MONO_RSHIFTED_16:
+		case STEREO_16_16:
+			*n +=  ((abe_pp_buf_id + 1) & 0x03) * abe_size_pingpong / 4;
+				break;
+		case STEREO_MSB:
+		case STEREO_RSHIFTED_16:
+			*n += ((abe_pp_buf_id + 1) & 0x03) * abe_size_pingpong / 8;
+			break;
+		default:
+			abe->dbg_param |= ERR_API;
+			abe_dbg_error_log(ABE_PARAMETER_ERROR);
+			return -EINVAL;
+		}
+#endif
 	}
 
 	return 0;
Index: kernel/sound/soc/omap/omap-abe-dsp.c
===================================================================
--- kernel.orig/sound/soc/omap/omap-abe-dsp.c	2011-05-21 01:42:34.549614392 +0900
+++ kernel/sound/soc/omap/omap-abe-dsp.c	2011-05-21 01:42:51.258348006 +0900
@@ -137,8 +137,8 @@
 				  SNDRV_PCM_FMTBIT_S32_LE,
 	.period_bytes_min	= 4 * 1024,
 	.period_bytes_max	= 24 * 1024,
-	.periods_min		= 2,
-	.periods_max		= 2,
+	.periods_min		= 4,
+	.periods_max		= 4,
 	.buffer_bytes_max	= 24 * 1024 * 2,
 };
 
@@ -2419,7 +2419,7 @@
 	/* Memory mapping for hw params */
 	runtime->dma_area  = abe->io_base + ABE_DMEM_BASE_OFFSET_MPU + dst;
 	runtime->dma_addr  = 0;
-	runtime->dma_bytes = period_size * 2;
+	runtime->dma_bytes = period_size * 4;
 
 	/* Need to set the first buffer in order to get interrupt */
 	abe_set_ping_pong_buffer(MM_DL_PORT, period_size);

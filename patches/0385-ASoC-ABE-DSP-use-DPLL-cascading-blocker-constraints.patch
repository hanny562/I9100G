
From: Mike Turquette <mturquette@ti.com>
Date: Mon, 23 May 2011 18:37:12 +0000 (-0500)
Subject: ASoC: ABE DSP: use DPLL cascading blocker constraints
X-Git-Url: http://git.omapzoom.org/?p=kernel%2Fomap.git;a=commitdiff_plain;h=d605342df1e1d895574ef10a0f87ba8158eab672

ASoC: ABE DSP: use DPLL cascading blocker constraints

Adapt driver to use standard DPLL cascading constraints instead of managing
DPLL cascading entry/exit directly from ABE driver.

Change-Id: I01d3a771a546b01f29bc243c2ed0b912ce39aeba
Signed-off-by: Mike Turquette <mturquette@ti.com>
---

Index: kernel/arch/arm/plat-omap/devices.c
===================================================================
--- kernel.orig/arch/arm/plat-omap/devices.c	2011-05-28 00:29:30.289599138 +0900
+++ kernel/arch/arm/plat-omap/devices.c	2011-05-28 00:30:17.329630244 +0900
@@ -395,8 +395,6 @@
 	}
 
 	pdata->get_context_loss_count = omap_pm_get_dev_context_loss_count;
-	pdata->enter_dpll_cascade = omap4_dpll_low_power_cascade_check_entry;
-	pdata->exit_dpll_cascade = omap4_dpll_low_power_cascade_exit;
 
 	od = omap_device_build("omap-aess-audio", -1, oh, pdata,
 				sizeof(struct omap4_abe_dsp_pdata),
Index: kernel/include/sound/omap-abe-dsp.h
===================================================================
--- kernel.orig/include/sound/omap-abe-dsp.h	2011-05-28 00:29:30.289599138 +0900
+++ kernel/include/sound/omap-abe-dsp.h	2011-05-28 00:30:17.339599045 +0900
@@ -14,8 +14,6 @@
 struct omap4_abe_dsp_pdata {
 	/* Return context loss count due to PM states changing */
 	int (*get_context_loss_count)(struct device *dev);
-	int (*enter_dpll_cascade)(void);
-	int (*exit_dpll_cascade)(void);
 };
 
 #endif
Index: kernel/sound/soc/omap/omap-abe-dsp.c
===================================================================
--- kernel.orig/sound/soc/omap/omap-abe-dsp.c	2011-05-28 00:29:30.289599138 +0900
+++ kernel/sound/soc/omap/omap-abe-dsp.c	2011-05-28 00:30:17.339599045 +0900
@@ -50,6 +50,9 @@
 #include <plat/omap-pm.h>
 #include <plat/powerdomain.h>
 #include <plat/prcm.h>
+
+#include <mach/omap4-common.h>
+
 #include "../../../arch/arm/mach-omap2/pm.h"
 
 #include <sound/core.h>
@@ -200,7 +203,6 @@
 	struct early_suspend early_suspend;
 #endif
 	int early_suspended;
-	int dpll_cascading;
 
 #ifdef CONFIG_DEBUG_FS
 	/* its intended we can switch on/off individual debug items */
@@ -408,54 +410,6 @@
 	return count;
 }
 
-static int abe_enter_dpll_cascading(struct abe_data *abe)
-{
-	struct platform_device *pdev = abe->pdev;
-	struct omap4_abe_dsp_pdata *pdata = abe->abe_pdata;
-	int ret;
-
-	if (abe->dpll_cascading)
-		return 0;
-
-	dev_dbg(&pdev->dev, "Enter DPLL cascading\n");
-	if (pdata->enter_dpll_cascade) {
-		ret = pdata->enter_dpll_cascade();
-		if (ret < 0) {
-			dev_err(&pdev->dev, "failed to enter DPLL cascading %d\n",
-				ret);
-			return ret;
-		}
-	}
-
-	abe->dpll_cascading = 1;
-
-	return 0;
-}
-
-static int abe_exit_dpll_cascading(struct abe_data *abe)
-{
-	struct platform_device *pdev = abe->pdev;
-	struct omap4_abe_dsp_pdata *pdata = abe->abe_pdata;
-	int ret;
-
-	if (!abe->dpll_cascading)
-		return 0;
-
-	dev_dbg(&pdev->dev, "Exit DPLL cascading\n");
-	if (pdata->exit_dpll_cascade) {
-		ret = pdata->exit_dpll_cascade();
-		if (ret < 0) {
-			dev_err(&pdev->dev, "failed to exit DPLL cascading %d\n",
-				ret);
-			return ret;
-		}
-	}
-
-	abe->dpll_cascading = 0;
-
-	return 0;
-}
-
 static int abe_fe_event(struct snd_soc_dapm_widget *w,
 			struct snd_kcontrol *kcontrol, int event)
 {
@@ -470,7 +424,7 @@
 		abe->fe_active[index]++;
 		active = abe_fe_active_count(abe);
 		if (!abe->early_suspended || (active > 1) || !abe->fe_active[6])
-			ret = abe_exit_dpll_cascading(abe);
+			ret = dpll_cascading_blocker_hold(&abe->pdev->dev);
 	} else {
 		abe->fe_active[index]--;
 	}
@@ -2620,12 +2574,12 @@
 		 */
 		if (abe->early_suspended && (active == 1) &&
 		    abe->fe_active[6] && (abe->opp <= 50))
-			ret = abe_enter_dpll_cascading(abe);
+			ret = dpll_cascading_blocker_release(&pdev->dev);
 		else
-			ret = abe_exit_dpll_cascading(abe);
+			ret = dpll_cascading_blocker_hold(&pdev->dev);
 		break;
 	case SND_SOC_DAPM_STREAM_STOP:
-		ret = abe_exit_dpll_cascading(abe);
+		ret = dpll_cascading_blocker_hold(&pdev->dev);
 		break;
 	default:
 		break;
@@ -2644,6 +2598,21 @@
 };
 
 #if defined(CONFIG_PM)
+static int aess_suspend(struct device *dev)
+{
+	/*
+	 * ensure we're out of DPLL cascading to properly
+	 * enter into suspend state
+	 */
+	return dpll_cascading_blocker_hold(dev);
+}
+
+static int aess_resume(struct device *dev)
+{
+	/* block DPLL cascading till conditions are met */
+	return dpll_cascading_blocker_hold(dev);
+}
+
 static int omap_pm_abe_get_dev_context_loss_count(struct device *dev)
 {
 	int ret;
@@ -2665,9 +2634,16 @@
 }
 
 #else
+#define aess_runtime_suspend   NULL
+#define aess_runtime_resume    NULL
 #define omap_pm_abe_get_dev_context_loss_count NULL
 #endif
 
+static const struct dev_pm_ops aess_pm_ops = {
+	.suspend        = aess_suspend,
+	.resume         = aess_resume,
+};
+
 #ifdef CONFIG_HAS_EARLYSUSPEND
 static void abe_early_suspend(struct early_suspend *handler)
 {
@@ -2682,7 +2658,7 @@
 	 * - OPP is 50 or less (DL1 path only)
 	 */
 	if ((active == 1) && abe->fe_active[6] && (abe->opp <= 50))
-		abe_enter_dpll_cascading(abe);
+		dpll_cascading_blocker_release(&abe->pdev->dev);
 
 	abe->early_suspended = 1;
 }
@@ -2693,7 +2669,7 @@
 					    early_suspend);
 
 	/* exit dpll cascading since screen will be turned on */
-	abe_exit_dpll_cascading(abe);
+	dpll_cascading_blocker_hold(&abe->pdev->dev);
 
 	abe->early_suspended = 0;
 }
@@ -2744,6 +2720,7 @@
 
 	abe->abe_pdata = pdata;
 	abe->pdev = pdev;
+	dpll_cascading_blocker_hold(&abe->pdev->dev);
 
 	mutex_init(&abe->mutex);
 	mutex_init(&abe->opp_mutex);
@@ -2789,6 +2766,7 @@
 	.driver = {
 		.name = "omap-aess-audio",
 		.owner = THIS_MODULE,
+		.pm = &aess_pm_ops,
 	},
 	.probe = abe_engine_probe,
 	.remove = __devexit_p(abe_engine_remove),

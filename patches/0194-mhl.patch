Index: kernel/drivers/media/video/omap/mhl_v1/sii9234.c
===================================================================
--- kernel.orig/drivers/media/video/omap/mhl_v1/sii9234.c	2011-03-24 17:59:29.000000000 +0900
+++ kernel/drivers/media/video/omap/mhl_v1/sii9234.c	2011-03-24 18:23:10.000000000 +0900
@@ -594,16 +594,20 @@
 	{
             if(gpio_direction_output(GPIO_HDMI_EN,GPIO_LEVEL_HIGH))
                 printk("[MHL_TEST]error in making HDMI_EN High\n");
-            printk("[MHL_TEST]HDMI_EN:%d",gpio_get_value(GPIO_HDMI_EN));
+           
+	    printk("[MHL_TEST]HDMI_EN:%d",gpio_get_value(GPIO_HDMI_EN));
 			
-			if(gpio_direction_output(GPIO_MHL_RST, GPIO_LEVEL_HIGH))
+	   if(gpio_direction_output(GPIO_MHL_RST, GPIO_LEVEL_HIGH))
                 printk("[MHL_TEST]error in making GPIO_MHL_RST high\n");
-            printk("[MHL_TEST]MHL_RST:%d",gpio_get_value(GPIO_MHL_RST));
-			msleep(50);
+            
+	   printk("[MHL_TEST]MHL_RST:%d",gpio_get_value(GPIO_MHL_RST));
+	   
+           msleep(50);
 
             if(gpio_direction_output(GPIO_MHL_RST, GPIO_LEVEL_LOW))
                 printk("[MHL_TEST]error in making GPIO_MHL_RST Low\n");
-            msleep(50);
+           
+	   msleep(50);
 		
             if(gpio_direction_output(GPIO_MHL_RST, GPIO_LEVEL_HIGH))
                 printk("[MHL_TEST]error in making GPIO_MHL_RST high\n");
@@ -612,7 +616,7 @@
 	}
 	else
 	{
-		  gpio_direction_output(GPIO_HDMI_EN,GPIO_LEVEL_LOW);
+	  gpio_direction_output(GPIO_HDMI_EN,GPIO_LEVEL_LOW);
           gpio_direction_output(GPIO_MHL_RST, GPIO_LEVEL_LOW);
 
 	}
Index: kernel/drivers/media/video/omap/mhl_v1/sii9234_driver.c
===================================================================
--- kernel.orig/drivers/media/video/omap/mhl_v1/sii9234_driver.c	2011-03-24 17:59:29.000000000 +0900
+++ kernel/drivers/media/video/omap/mhl_v1/sii9234_driver.c	2011-03-24 18:30:05.000000000 +0900
@@ -599,7 +599,6 @@
 
 	byte i, startbit;
 	
-	return success;
 	//
 	// If not connected, return with error
 	//
@@ -2485,175 +2484,175 @@
 					break;
 
 				case MHD_RCP_CMD_LEFT_DOWN:
-					TX_DEBUG_PRINT(( "\n MHD_RCP_CMD_LEFT_DOWN\n\n", (int)eventParameter ));
+					TX_DEBUG_PRINT(( "\n MHD_RCP_CMD_LEFT_DOWN = %02x\n\n", (int)eventParameter ));
 					break;      
 
 				case MHD_RCP_CMD_ROOT_MENU:
-					TX_DEBUG_PRINT(( "\nRoot Menu received\n\n", (int)eventParameter ));
+					TX_DEBUG_PRINT(( "\nRoot Menu received = %02x\n\n", (int)eventParameter ));
 					break;
 
 				case MHD_RCP_CMD_SETUP_MENU:
-					TX_DEBUG_PRINT(( "\n MHD_RCP_CMD_SETUP_MENU\n\n", (int)eventParameter ));
+					TX_DEBUG_PRINT(( "\n MHD_RCP_CMD_SETUP_MENU = %02x\n\n", (int)eventParameter ));
 					break;      
 
 				case MHD_RCP_CMD_CONTENTS_MENU:
-					TX_DEBUG_PRINT(( "\n MHD_RCP_CMD_CONTENTS_MENU\n\n", (int)eventParameter ));
+					TX_DEBUG_PRINT(( "\n MHD_RCP_CMD_CONTENTS_MENU = %02x\n\n", (int)eventParameter ));
 					break;      
 
 				case MHD_RCP_CMD_FAVORITE_MENU:
-					TX_DEBUG_PRINT(( "\n MHD_RCP_CMD_FAVORITE_MENU\n\n", (int)eventParameter ));
+					TX_DEBUG_PRINT(( "\n MHD_RCP_CMD_FAVORITE_MENU = %02x\n\n", (int)eventParameter ));
 					break;            
 
 				case MHD_RCP_CMD_EXIT:
-					TX_DEBUG_PRINT(( "\nExit received\n\n", (int)eventParameter ));
+					TX_DEBUG_PRINT(( "\nExit received = %02x\n\n", (int)eventParameter ));
 					break;
 
 				case MHD_RCP_CMD_NUM_0:
-					TX_DEBUG_PRINT(( "\nNumber 0 received\n\n", (int)eventParameter ));
+					TX_DEBUG_PRINT(( "\nNumber 0 received = %02x\n\n", (int)eventParameter ));
 					break;
 
 				case MHD_RCP_CMD_NUM_1:
-					TX_DEBUG_PRINT(( "\nNumber 1 received\n\n", (int)eventParameter ));
+					TX_DEBUG_PRINT(( "\nNumber 1 received = %02x\n\n", (int)eventParameter ));
 					break;
 
 				case MHD_RCP_CMD_NUM_2:
-					TX_DEBUG_PRINT(( "\nNumber 2 received\n\n", (int)eventParameter ));
+					TX_DEBUG_PRINT(( "\nNumber 2 received = %02x\n\n", (int)eventParameter ));
 					break;
 
 				case MHD_RCP_CMD_NUM_3:
-					TX_DEBUG_PRINT(( "\nNumber 3 received\n\n", (int)eventParameter ));
+					TX_DEBUG_PRINT(( "\nNumber 3 received = %02x\n\n", (int)eventParameter ));
 					break;
 
 				case MHD_RCP_CMD_NUM_4:
-					TX_DEBUG_PRINT(( "\nNumber 4 received\n\n", (int)eventParameter ));
+					TX_DEBUG_PRINT(( "\nNumber 4 received = %02x\n\n", (int)eventParameter ));
 					break;
 
 				case MHD_RCP_CMD_NUM_5:
-					TX_DEBUG_PRINT(( "\nNumber 5 received\n\n", (int)eventParameter ));
+					TX_DEBUG_PRINT(( "\nNumber 5 received = %02x\n\n", (int)eventParameter ));
 					break;
 
 				case MHD_RCP_CMD_NUM_6:
-					TX_DEBUG_PRINT(( "\nNumber 6 received\n\n", (int)eventParameter ));
+					TX_DEBUG_PRINT(( "\nNumber 6 received = %02x\n\n", (int)eventParameter ));
 					break;
 
 				case MHD_RCP_CMD_NUM_7:
-					TX_DEBUG_PRINT(( "\nNumber 7 received\n\n", (int)eventParameter ));
+					TX_DEBUG_PRINT(( "\nNumber 7 received = %02x\n\n", (int)eventParameter ));
 					break;
 
 				case MHD_RCP_CMD_NUM_8:
-					TX_DEBUG_PRINT(( "\nNumber 8 received\n\n", (int)eventParameter ));
+					TX_DEBUG_PRINT(( "\nNumber 8 received = %02x\n\n", (int)eventParameter ));
 					break;
 
 				case MHD_RCP_CMD_NUM_9:
-					TX_DEBUG_PRINT(( "\nNumber 9 received\n\n", (int)eventParameter ));
+					TX_DEBUG_PRINT(( "\nNumber 9 received = %02x\n\n", (int)eventParameter ));
 					break;
 
 				case MHD_RCP_CMD_DOT:
-					TX_DEBUG_PRINT(( "\n MHD_RCP_CMD_DOT\n\n", (int)eventParameter ));
+					TX_DEBUG_PRINT(( "\n MHD_RCP_CMD_DOT = %02x\n\n", (int)eventParameter ));
 					break;          
 
 				case MHD_RCP_CMD_ENTER:
-					TX_DEBUG_PRINT(( "\nEnter received\n\n", (int)eventParameter ));
+					TX_DEBUG_PRINT(( "\nEnter received = %02x\n\n", (int)eventParameter ));
 					break;
 
 				case MHD_RCP_CMD_CLEAR:
-					TX_DEBUG_PRINT(( "\nClear received\n\n", (int)eventParameter ));
+					TX_DEBUG_PRINT(( "\nClear received = %02x\n\n", (int)eventParameter ));
 					break;
 
 				case MHD_RCP_CMD_CH_UP:
-					TX_DEBUG_PRINT(( "\n MHD_RCP_CMD_CH_UP\n\n", (int)eventParameter ));
+					TX_DEBUG_PRINT(( "\n MHD_RCP_CMD_CH_UP = %02x\n\n", (int)eventParameter ));
 					break; 
 
 				case MHD_RCP_CMD_CH_DOWN:
-					TX_DEBUG_PRINT(( "\n MHD_RCP_CMD_CH_DOWN\n\n", (int)eventParameter ));
+					TX_DEBUG_PRINT(( "\n MHD_RCP_CMD_CH_DOWN = %02x\n\n", (int)eventParameter ));
 					break;       
 
 				case MHD_RCP_CMD_PRE_CH:
-					TX_DEBUG_PRINT(( "\n MHD_RCP_CMD_PRE_CH\n\n", (int)eventParameter ));
+					TX_DEBUG_PRINT(( "\n MHD_RCP_CMD_PRE_CH = %02x\n\n", (int)eventParameter ));
 					break;           
 
 				case MHD_RCP_CMD_SOUND_SELECT:
-					TX_DEBUG_PRINT(( "\nSound Select received\n\n", (int)eventParameter ));
+					TX_DEBUG_PRINT(( "\nSound Select received = %02x\n\n", (int)eventParameter ));
 					break;
 
 				case MHD_RCP_CMD_INPUT_SELECT:
-					TX_DEBUG_PRINT(( "\n MHD_RCP_CMD_INPUT_SELECT\n\n", (int)eventParameter ));
+					TX_DEBUG_PRINT(( "\n MHD_RCP_CMD_INPUT_SELECT = %02x\n\n", (int)eventParameter ));
 					break;    
 
 				case MHD_RCP_CMD_SHOW_INFO:
-					TX_DEBUG_PRINT(( "\n MHD_RCP_CMD_SHOW_INFO\n\n", (int)eventParameter ));
+					TX_DEBUG_PRINT(( "\n MHD_RCP_CMD_SHOW_INFO = %02x\n\n", (int)eventParameter ));
 					break;     
 
 				case MHD_RCP_CMD_HELP:
-					TX_DEBUG_PRINT(( "\n MHD_RCP_CMD_HELP\n\n", (int)eventParameter ));
+					TX_DEBUG_PRINT(( "\n MHD_RCP_CMD_HELP = %02x\n\n", (int)eventParameter ));
 					break;   
 
 				case MHD_RCP_CMD_PAGE_UP:
-					TX_DEBUG_PRINT(( "\n MHD_RCP_CMD_PAGE_UP\n\n", (int)eventParameter ));
+					TX_DEBUG_PRINT(( "\n MHD_RCP_CMD_PAGE_UP = %02x\n\n", (int)eventParameter ));
 					break;  
 
 				case MHD_RCP_CMD_PAGE_DOWN:
-					TX_DEBUG_PRINT(( "\n MHD_RCP_CMD_PAGE_DOWN\n\n", (int)eventParameter ));
+					TX_DEBUG_PRINT(( "\n MHD_RCP_CMD_PAGE_DOWN = %02x\n\n", (int)eventParameter ));
 					break;             
 
 				case MHD_RCP_CMD_VOL_UP:
-					TX_DEBUG_PRINT(( "\n MHD_RCP_CMD_VOL_UP\n\n", (int)eventParameter ));
+					TX_DEBUG_PRINT(( "\n MHD_RCP_CMD_VOL_UP = %02x\n\n", (int)eventParameter ));
 					break;             
 
 				case MHD_RCP_CMD_VOL_DOWN:
-					TX_DEBUG_PRINT(( "\n MHD_RCP_CMD_VOL_DOWN\n\n", (int)eventParameter ));
+					TX_DEBUG_PRINT(( "\n MHD_RCP_CMD_VOL_DOWN = %02x\n\n", (int)eventParameter ));
 					break;             
 
 				case MHD_RCP_CMD_MUTE:
-					TX_DEBUG_PRINT(( "\n MHD_RCP_CMD_MUTE\n\n", (int)eventParameter ));
+					TX_DEBUG_PRINT(( "\n MHD_RCP_CMD_MUTE = %02x\n\n", (int)eventParameter ));
 					break;             
 
 				case MHD_RCP_CMD_PLAY:
-					TX_DEBUG_PRINT(( "\nPlay received\n\n", (int)eventParameter ));
+					TX_DEBUG_PRINT(( "\nPlay received = %02x\n\n", (int)eventParameter ));
 					break;
 
 				case MHD_RCP_CMD_STOP:
-					TX_DEBUG_PRINT(( "\n MHD_RCP_CMD_STOP\n\n", (int)eventParameter ));
+					TX_DEBUG_PRINT(( "\n MHD_RCP_CMD_STOP = %02x\n\n", (int)eventParameter ));
 					break;   
 
 				case MHD_RCP_CMD_PAUSE:
-					TX_DEBUG_PRINT(( "\nPause received\n\n", (int)eventParameter ));
+					TX_DEBUG_PRINT(( "\nPause received = %02x\n\n", (int)eventParameter ));
 					break;
 
 				case MHD_RCP_CMD_RECORD:
-					TX_DEBUG_PRINT(( "\n MHD_RCP_CMD_RECORD\n\n", (int)eventParameter ));
+					TX_DEBUG_PRINT(( "\n MHD_RCP_CMD_RECORD = %02x\n\n", (int)eventParameter ));
 					break;   
 
 				case MHD_RCP_CMD_FAST_FWD:
-					TX_DEBUG_PRINT(( "\nFastfwd received\n\n", (int)eventParameter ));
+					TX_DEBUG_PRINT(( "\nFastfwd received = %02x\n\n", (int)eventParameter ));
 					break;
 
 				case MHD_RCP_CMD_REWIND:
-					TX_DEBUG_PRINT(( "\nRewind received\n\n", (int)eventParameter ));
+					TX_DEBUG_PRINT(( "\nRewind received = %02x\n\n", (int)eventParameter ));
 					break;
 
 				case MHD_RCP_CMD_EJECT:
-					TX_DEBUG_PRINT(( "\nEject received\n\n", (int)eventParameter ));
+					TX_DEBUG_PRINT(( "\nEject received = %02x\n\n", (int)eventParameter ));
 					break;
 
 				case MHD_RCP_CMD_FWD:
-					TX_DEBUG_PRINT(( "\nForward received\n\n", (int)eventParameter ));
+					TX_DEBUG_PRINT(( "\nForward received = %02x\n\n", (int)eventParameter ));
 					break;
 
 				case MHD_RCP_CMD_BKWD:
-					TX_DEBUG_PRINT(( "\nBackward received\n\n", (int)eventParameter ));
+					TX_DEBUG_PRINT(( "\nBackward received = %02x\n\n", (int)eventParameter ));
 					break;
 
 				case MHD_RCP_CMD_PLAY_FUNC:
-					TX_DEBUG_PRINT(( "\nPlay Function received\n\n", (int)eventParameter ));
+					TX_DEBUG_PRINT(( "\nPlay Function received = %02x\n\n", (int)eventParameter ));
 					break;
 
 				case MHD_RCP_CMD_PAUSE_PLAY_FUNC:
-					TX_DEBUG_PRINT(( "\nPause_Play Function received\n\n", (int)eventParameter ));
+					TX_DEBUG_PRINT(( "\nPause_Play Function received = %02x\n\n", (int)eventParameter ));
 					break;
 
 				case MHD_RCP_CMD_STOP_FUNC:
-					TX_DEBUG_PRINT(( "\nStop Function received\n\n", (int)eventParameter ));
+					TX_DEBUG_PRINT(( "\nStop Function received = %02x\n\n", (int)eventParameter ));
 					break;
 
 				default:
@@ -2805,6 +2804,6 @@
 
 	}while(flag);
 
-	printk(KERN_ERR "#$$$$$$$$$$$$$$$ flag: %x\n",(int) flag );
+	printk(KERN_ERR "[MHL]sii9234_interrupt_event flag: %x\n",(int) flag );
 }
 EXPORT_SYMBOL(sii9234_interrupt_event);
Index: kernel/arch/arm/mach-omap2/mux_t1_rev_r00.c
===================================================================
--- kernel.orig/arch/arm/mach-omap2/mux_t1_rev_r00.c	2011-03-24 17:59:13.000000000 +0900
+++ kernel/arch/arm/mach-omap2/mux_t1_rev_r00.c	2011-03-24 18:23:10.000000000 +0900
@@ -165,12 +165,12 @@
 	OMAP4_MUX(GPMC_NCS7, OMAP_MUX_MODE3 | OMAP_PIN_OUTPUT),
 
 	/* [-----] hdmi_hpd - gpio_63 - HDMI_HPD */
-	OMAP4_MUX(HDMI_HPD, OMAP_MUX_MODE3 | OMAP_PIN_INPUT ),
+	OMAP4_MUX(HDMI_HPD, OMAP_MUX_MODE0 | OMAP_PIN_INPUT ),
 	//OMAP4_MUX(HDMI_HPD, OMAP_MUX_MODE0 ),
 	/* [-----] hdmi_cec - gpio_64 - MHL_WAKE_UP */
-	OMAP4_MUX(HDMI_CEC, OMAP_MUX_MODE0 | OMAP_PIN_INPUT),
+	OMAP4_MUX(HDMI_CEC, OMAP_MUX_MODE0 | OMAP_PIN_OUTPUT |OMAP_PULL_ENA),
 	/* [-----] hdmi_ddc_scl - gpio_65 - DDC_SCL_3.3V */
-	OMAP4_MUX(HDMI_DDC_SCL, OMAP_MUX_MODE0 | OMAP_PIN_INPUT_PULLUP),
+	OMAP4_MUX(HDMI_DDC_SCL, OMAP_MUX_MODE0 | OMAP_PIN_OUTPUT | OMAP_PIN_INPUT_PULLUP |OMAP_PULL_ENA),
 	/* [-----] hdmi_ddc_sda - gpio_66 - DDC_SDA_3.3V */
 	OMAP4_MUX(HDMI_DDC_SDA, OMAP_MUX_MODE0 | OMAP_PIN_INPUT_PULLUP),
 
Index: kernel/drivers/usb/otg/fsa9480.c
===================================================================
--- kernel.orig/drivers/usb/otg/fsa9480.c	2011-03-24 17:59:37.000000000 +0900
+++ kernel/drivers/usb/otg/fsa9480.c	2011-03-24 18:23:10.000000000 +0900
@@ -364,7 +364,11 @@
                        if (pdata->jig_cb)
                                pdata->jig_cb(FSA9480_ATTACHED);
                }
-			  if(val2 & FSA9480_DEV_T2_MHL_MASK) {
+	       if(val2 & FSA9480_DEV_T2_MHL_MASK) {
+		    printk("[FSA9480] %s : MHL connected\n",__func__);
+		    /*set forcely to USB*/
+		    fsa9480_write_reg(client,FSA9480_REG_MANSW1, DHOST);
+		    fsa9480_write_reg(client,FSA9480_REG_CTRL, 0x1A);
                     if(pdata->mhl_cb) {
                         pdata->mhl_cb(FSA9480_ATTACHED);
                     }
@@ -403,8 +407,8 @@
                        if (pdata->jig_cb)
                                pdata->jig_cb(FSA9480_DETACHED);
                }
-			  if (usbsw->dev2 & FSA9480_DEV_T2_MHL_MASK) {
-
+	       if (usbsw->dev2 & FSA9480_DEV_T2_MHL_MASK) {
+		       printk("[FSA9480] %s : MHL disconnected\n",__func__);
                        if (pdata->mhl_cb)
                                pdata->mhl_cb(FSA9480_DETACHED);
               }

Index: Kernel/drivers/sensors/mpu3050/mpuirq.c
===================================================================
--- Kernel.orig/drivers/sensors/mpu3050/mpuirq.c	2011-02-17 20:41:27.000000000 +0530
+++ Kernel/drivers/sensors/mpu3050/mpuirq.c	2011-02-22 19:42:04.579736334 +0530
@@ -95,7 +95,7 @@
 	}
 	if (err != 0) {
 		dev_err(p_mpuirq_dev_data->dev->this_device,
-			"Corq_dev_datapy to user returned %d\n", err);
+			"Copy to user returned %d\n", err);
 		return -EFAULT;
 	}
 	mpuirq_dev_data.data_ready = 0;
Index: Kernel/drivers/sensors/mpu3050/compass/yas530.c
===================================================================
--- Kernel.orig/drivers/sensors/mpu3050/compass/yas530.c	2011-02-17 20:41:28.000000000 +0530
+++ Kernel/drivers/sensors/mpu3050/compass/yas530.c	2011-02-22 19:45:14.229723347 +0530
@@ -293,8 +293,8 @@
      correct->a9 = cal->d9;
      correct->k = cal->d0 + 10;
  
- /*
-     //MPL_LOGV("CORRECTION[%d][%d][%d] [%d][%d][%d][%d][%d][%d] [%d][%d][%d]\n",
+/*
+     printk("CORRECTION[%d][%d][%d] [%d][%d][%d][%d][%d][%d] [%d][%d][%d]\n",
              correct->Cx,
              correct->Cy1,
              correct->Cy2,
@@ -308,7 +308,7 @@
              correct->a9,
              correct->k
              );
- */
+*/
      
  }
  
@@ -399,7 +399,7 @@
      uint8_t data;
  
      //MPL_LOGV("%s",__FUNCTION__);
-     //MPL_LOGV("x=%d,y1=%d,y2=%d\n", offset_x, offset_y1, offset_y2);
+     //printk("x=%d,y1=%d,y2=%d\n", offset_x, offset_y1, offset_y2);
  
      data = offset_x & 0x3f;
      result = yas530_i2c_write(handle,YAS_REGADDR_OFFSET_X, &data, 1);
@@ -477,13 +477,13 @@
  
    
  
- /*
-     //MPL_LOGV("f[%d] t[%d] x[%d] y1[%d] y2[%d]\n",   *busy, 
+/*
+     printk("f[%d] t[%d] x[%d] y1[%d] y2[%d]\n",   *busy, 
          measure_data->t, 
          measure_data->x, 
          measure_data->y1, 
          measure_data->y2);
- */
+*/
      return result;
  }
  
@@ -584,31 +584,46 @@
      struct yas_correction_data *c
  )
  {
-     int16_t sx, sy1, sy2, sy, sz;
-     int16_t hx, hy, hz;
+     int32_t sx, sy1, sy2, sy, sz;
+     int32_t hx, hy, hz;
      
      //MPL_LOGV("%s",__FUNCTION__);
      
-     
+
      sx  = measure_data->x  - (c->Cx  * measure_data->t) / 100;
      sy1 = measure_data->y1 - (c->Cy1 *measure_data->t) / 100;
      sy2 = measure_data->y2 - (c->Cy2 * measure_data->t) / 100;
+
+     
      
      sy = sy1 - sy2;
      sz = -sy1 - sy2;
+
+     //printk("sx[%ld],sy1[%ld],sy2[%ld],sy[%ld],sz[%ld]\n",sx,sy1,sy2,sy,sz);
+
      
      int a1 = (c->a4 * sx + c->a5 * sy + c->a6 * sz);
      
-     hx = ((100   * sx + c->a2 * sy + c->a3 * sz)>>7)*41;
-     hy = ((c->a4 * sx + c->a5 * sy + c->a6 * sz)>>7)*41;
-     hz = ((c->a7 * sx + c->a8 * sy + c->a9 * sz) >>7)*41;
-     
-     *xo =  hx;
-     *yo =  hy;
-     *zo =  hz;
+     hx = ((100   * sx + c->a2 * sy + c->a3 * sz)>>6)*3;
+     hy = ((c->a4 * sx + c->a5 * sy + c->a6 * sz)>>6)*3;
+     hz = ((c->a7 * sx + c->a8 * sy + c->a9 * sz) >>6)*3;
+
+
+
      
+     *xo =  (int16_t)hx;
+     *yo =  (int16_t)hy;
+     *zo =  (int16_t)hz;
 
- 
+/*
+     printk("hx[%ld],hy[%ld],hz[%ld]=>hx[%ld],hy[%ld],hz[%ld]=>xo[%ld],yo[%ld],zo[%ld]\n",
+        (100   * sx + c->a2 * sy + c->a3 * sz),
+        (c->a4 * sx + c->a5 * sy + c->a6 * sz),
+        (c->a7 * sx + c->a8 * sy + c->a9 * sz),
+        hx,hy,hz,
+        *xo,*yo,*zo);     
+     
+ */
      return ML_SUCCESS;
  }
  
@@ -792,8 +807,8 @@
  
  
  struct ext_slave_descr yas530_descr = {
-     /*.init             = */ NULL,
-     /*.exit             = */ NULL,
+     /*.init          = */ NULL,
+     /*.exit          = */ NULL,
      /*.suspend          = */ yas530_suspend,
      /*.resume           = */ yas530_resume,
      /*.read             = */ yas530_read,
